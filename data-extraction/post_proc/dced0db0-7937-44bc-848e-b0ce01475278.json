{"data": [{"data": ["I mean, I mean, whatever they got, we're not really happy right now.", "She says, Hey, listen, I'm going to read what you said.", "Even if no reason to give me the money are going on here right now.", "So do I. Yeah, I don't I don't see why you might try it, but I just thought recommended.", "Every department would prosecute.", "Tuesday, February 13"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=0&isPrimary=false&absoluteTime=13352322301.035", "start_time": 1, "end_time": 69}, {"data": ["You go next to me and I open.", "Get outside 330 comes into this class now means today marking a transition as we begin our", "journey into algorithms which will occupy quite a bit of our time going forward in the semester.", "I'll talk about that more bit later. Other staff announcements.", "L 10: Depth-First Search 1", "Reference: Chapters 5-6,", "Algorithms by Erickson"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=1&isPrimary=false&absoluteTime=13352322480.535", "start_time": 180, "end_time": 213}, {"data": ["So logistics wise, the exam will be in class written, there'll be four problems and it'll be 75 minutes.", "That's to say our class duration. So ideally you'll come to class 5 to 10 minutes early.", "Of course you don't have to do that, but it'll streamline our distribution If some of you who can are here 5 minutes early,", "the exam will start no sooner than the beginning of class.", "So it's not like you have to get your 10 minutes early so that you can get 10 minutes of extra time.", "The exam will start no sooner than the beginning of class, and then it'll go for 75 minutes.", "So you will need to bring a writing utensil. I recommend pencil so that you can trace.", "If you change your mind, the pen will work just fine. We're going to scan these.", "You are not allowed to use other stuff like calculators, other notes, textbooks.", "Favorite talisman. I guess if you have a favorite talisman, you can put it in your pocket.", "That's fine, but you won't need anything else.", "If you have exam accommodations, then you'll be taking the exam same time, but potentially a different place.", "You should expect to hear from our teaching associate Alex Chow in approximately one week.", "Unlike the location type of information or any additional details, or if you have concerns about exam accommodations,", "Midterm Exam Logistics", "\u2022 In-class, written, 4 problems, 75 minutes"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=282&isPrimary=true&absoluteTime=13352322582.535", "start_time": 282, "end_time": 360}, {"data": ["Content wise, the midterm exam, as I said, will have four problems.", "They'll all be algorithm design types of problems. So there won't be any problems on the exam of the form.", "Solve this interesting unrelated recurrence or something like this or approve this strange fact from combinatorics or something.", "There'll be no problems of this form. All of the problems will be in the form here.", "Some sort of algorithm problem. Describe an algorithm to solve this problem.", "That'll be the core. That's the core emphasis of what we're trying to do in this course.", "They'll cover what we've been discussing so far up to and including this week, but not next.", "So that means recursion, divide and conquer, parallel algorithms, dynamic programing and depth.", "First search, which we're talking about this week. We'll all be covered on the midterm exam.", "There are the corresponding sort of recitations and homeworks, but the ones going through those topics, it will not cover shortest pass,", "which we will introduce in lecture next week before you take the exam,", "but will not be included on the exam as you won't have had time to like do a homework assignment on them or anything like that.", "And that's the kind of content you should expect to see something about divide and conquer or something about parallel algorithms,", "something about anemic programing and something about that for search. Yeah.", "And you have homework assignments and recitations on all of those topics.", "As I said, problems will be able to form, describe an algorithm to solve some problem.", "X Many of them will be similar or slight variance on problems you have seen in lecture, in recitation or in homework.", "I guarantee it. We will usually ask for a runtime analysis and for a brief explanation.", "We will generally not ask for a formal proof because you don't have that much time to write a formal proof at most.", "I might ask for one proof on an exam. I might ask for a zero.", "And that goes for like all of the exams throughout, depending on what I think about the timing.", "So the emphasis in terms of what you'll be asked to do and also in terms of the scoring will be on the algorithm design.", "I'll say a little bit more about scoring in a moment about those problems and how we'll score them.", "Midterm Exam Content", "\u2022 4 algorithm design problems...", "Covering Recursion, Divide and Conquer, Parallel", "Algorithms, Dynamic Programming, Depth-Frist Search,", "LOI-LII; ROI-R05; HW1-HW5", "\u2022 NOT covering shortest Paths (L12-L13)"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=369&isPrimary=true&absoluteTime=13352322669.535", "start_time": 369, "end_time": 498}, {"data": ["Remember you were trying to make it as precise, clean and coherent as you can to another human.", "In terms of our preference or my preference, I should say, and the number of points that will be awarded for a solution.", "Here's how I would think about it. What we really want is a coherent, correct, efficient algorithm.", "Yeah, that's what we're looking for.", "If you were unable to come up with that in the time that is allotted because of course you will have limited time.", "Instead, the next choice would be a coherent algorithm.", "That is to say, Well, describe, we understand exactly what you mean by an algorithm and what it does is it well specified all of them?", "That is still correct. That solves the problem it was intended to solve but is perhaps less efficient.", "That would be option number B. So if you realize I don't think I'm going to be able to come up with an efficient of a solution as I would like,", "Please, please, please write a clear, coherent, well-described, correct, slightly less efficient algorithm.", "Third in the preference would be a coherent algorithm. We know exactly what the algorithm is doing.", "It's well described.", "It's a complete algorithm that is incorrect and end or possibly also inefficient, and it doesn't actually solve the problem of interest.", "Of course. Number three, there are different degrees of incorrectness.", "Obviously, I'm painting in broad brush strokes. Here's an example of a coherent, incorrect and efficient algorithm.", "Ignore the input returns. Zero. Probably they're not going to receive very many points.", "It is, of course, possible to have an algorithm that is incorrect only up to very minor errors,", "which we would attempt to penalize only in very minor ways.", "We will do our best. Finally, my least preferred option would be an incoherent algorithm.", "That is to say you mention several thoughts that you think might be related to designing an algorithm like this,", "but nowhere can we find an actual algorithm.", "Those are very difficult to award credit for because we're not clear on what the algorithm we're scoring is.", "So we would prefer a simple, correct, coherent algorithm over that.", "You all know this because you diligently read the syllabus weeks ago and have it absolutely ingrained in your memory.", "But just in case you have questions about it, or to remind you, your exams grade consists of exams.", "Part one that's on the first half of the material in the course and exams.", "Part two that's on the second half. The material, the course exams.", "Part one is worth 25% of the grade, and it's the maximum or the better of your midterm or the final exam.", "Part one You think the better of those two. That has a couple of implications.", "The first implication is that if for any reason you are unable to take the midterm exam and there are 319 of you,", "Midterm Exam Problems and", "Grading", "\u2022 More weight on algorithm design, less on", "explanation and runtime analysis.", "\u2022 English and/or pseudocode, explain to another", "human!"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=3&isPrimary=false&absoluteTime=13352322840.535", "start_time": 540, "end_time": 720}, {"data": ["Again, you all know this because you read the the the course syllabus.", "There is no statistical curve. This is something that I feel is very important to me personally.", "Perhaps it's important to you, I'm not sure, but that the evaluation of your performance in this class does not depend on your peers.", "Like you don't get an A or B depending on whether the person next to you was good at or bad at what they were doing on the exam.", "Your grade is between you and you. Well, and the material, I guess, and the attempts to demonstrate proficiency in it.", "So there's no statistical per se.", "There's no sense in which like if some people do well, they're going to throw off the curve and your grade would be worse or something like that.", "But instead, I'll just remind you that this is what I will use for assigning letter grades.", "It's slightly different in your favor than the usual setting of the numbers.", "I think it's a little simpler, actually. It's like 19. Bob is a straight A 80 and above is a straight B.", "I kind of like this scale a little bit better.", "It allows me to reason a little bit more cleanly about how you should think about your grades on exams and things like that.", "And here's why. So your exams overall, both parts.", "So overall the material are worth half the grade in the class.", "The other half of the grade comes from doing your homework and participation rate that you're like attending, you're engaging,", "you're doing your homework, etc. The homework, as you know, is relatively lightly graded for keeping up with it.", "It should be possible to receive very high scores on the homework, and that's intentional.", "My expectation is that a diligent student should have pretty high scores in the other 50%.", "You should be able to get most of those points if you're keeping up with the course, the exams, therefore constituting the other 50% of the course.", "Will the exam be curved? Letter", "Grade Reasoning?", "Course grades Will Converted to lettuS according to the fou.wing agu5ted thresholds. There no", "statistical curve. and there is no rounding up of grades.", "Needs at Least", "Course Website policies page", "Needs at Least"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=789&isPrimary=true&absoluteTime=13352323089.535", "start_time": 789, "end_time": 900}, {"data": ["I have a few thoughts about this. The first is to review, lecture, homework and recitations, the stuff we've been doing, but to do that actively.", "Midterm Exam Studying", "\u2022 (Actively) Review lecture, homework, recitation.", "\u2022 \"many will be very similar / slight variants on problems", "seen in lecture, recitation, and homework...\""], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=1074&isPrimary=true&absoluteTime=13352323374.535", "start_time": 1074, "end_time": 1080}, {"data": ["So if you're going to have to do something on your own, make sure that you are sometimes practicing on your own,", "even if that's not the first time that you try a topic.", "Give yourself a reasonable amount of time without looking stuff up on the internet, trying to solve a problem on your own, sketching your ideas out,", "writing them down, actually writing them down, and like as if you were on an exam, try to come up with a correct and efficient algorithm.", "If you're not able to come up with a correct and efficient algorithm, try writing a clean correct algorithm that is slightly less efficient.", "If you want more problems. And again, the point is that you've been studying all semester, which is why I say if you want more,", "because the kind of minimum expected practice you've all been doing has been your homework,", "your recitation, the problems we've been doing in lecture, etc.", "So you've been studying all semester. That's the whole point.", "These things should look familiar to you if you've been keeping up and ready to review those.", "But if you're looking for more problems, our references have many of them.", "If you want the problems, Ericsson has several problems.", "I'd encourage you when you're looking at a reference, whether Ericsson or some of the optional references,", "mention the syllabus to first, start with the worked examples in the chapters.", "Try to work those yourself and then you can go back and look at the whole work example, which can be quite helpful.", "Sometimes they have a lot of those shout out, by the way, as we're talking about dynamic programing.", "If you haven't read the chapter on dynamic programing Ericsson,", "please do its very good and please do maybe think about trying some of those work examples.", "If you want even more than you can go to the end of chapter.", "There are several more examples there in the Ericsson text as well as the other kind of optional references that we mentioned.", "Yes, which are extremely handy, if you like.", "So the question was, can you draw a diagram if you think that will help you to communicate the ideas of your algorithm to another human,", "That could be great. Please do not use an example in a diagram as a substitute for describing a general algorithm.", "Right. So it'd be problematic if you say drew an example with a graph with four nodes.", "And so the algorithm is to do this thing on this example that doesn't describe the general algorithm to us,", "but it could be an aid to helping to explain what you're doing or for your own reasoning as you're trying to figure out how to solve something.", "Or he went one time. You know, after your action, we have to memorize the words.", "It sounds more than most.", "So the question is about the unifying method or the master method for solving recurrences, so there won't be any questions of the form.", "Solve this random recurrence for no reason.", "So you shouldn't think about that as being something you need to worry about. You will be asked to describe algorithms and analyze their runtime.", "You will need to be comfortable analyzing the runtime of your own algorithms by whatever means that you find amenable to that.", "Midterm Exam Studying", "\u2022 (Actively) Review lecture, homework, recitation.", "\u2022 \"many will be very similar / slight variants on problems", "seen in lecture, recitation, and homework...\"", "\u2022 Focus on algorithm design.", "\u2022 Practice on your own in 10-20 minutes.", "\u2022 Try for correct and efficient but write a correct but less", "efficient algorithm if needed."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=7&isPrimary=false&absoluteTime=13352323560.535", "start_time": 1260, "end_time": 1440}, {"data": ["We're going to finish up our conversation about dynamic programing,", "in particular by looking at the matrix multiplication problem that we were just able to introduce last week.", "Then we're going to move into our main topic for this week, which are graphs in depth first search.", "We'll start with that first search when talking about graphs and graph algorithms.", "We'll certainly intro graphs and talk about undirected research as a stretch goal.", "We might start talking about depth for search and directed graphs, which are substantially more interesting.", "We'll certainly continue that conversation on Thursday. So let me just remind you about this chain matrix multiplication problem.", "I give you a bunch of matrices. I want to compute the product of all of the matrices.", "For example, if I have these matrices a0a2, I should be say a one.", "Why did no one say anything about that? Last week. You all have to be better at catching my typos than I am.", "Here we go. Our question was what is the smallest number of scalar multiplications needed to compute this whole product?", "I.", "2.", "3.", "4.", "Outline", "Finish Matrix Chain Multiplication", "Review / Intro Graphs", "Depth\u2014First Search (DFS) Undirected Graphs", "Stretch Goal: Depth-First Search (DFS) Directed", "Graphs"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=1494&isPrimary=true&absoluteTime=13352323794.535", "start_time": 1494, "end_time": 1554}, {"data": ["So the chain matrix multiplication problem is not about multiplying any given to matrices.", "It's about if I want to compute the product of many matrices, what is the optimal order in which to compute those products?", "You can think about it not to your homework as being a question of what is an optimal way to place the parentheses to compute all of these products.", "Right. It's essentially the same question. You can think of the parentheses as just being a way of disambiguate in the order", "in which you do the products are the questions about the problem itself and.", "Chain Matrix Multiplication", "Given matrices AO,AI, with dimensions", "(mo X ml), (ml X m2), ... , (mn_l X mn)...", "what is the smallest number of scalar multiplications", "needed to compute AOAI An\u2014I ?", "(1, 10)", "(1722, m3)", "(10, 100)", "(1 x 100)", "/ 2,000", "(20 x 100)", "(mo,mt) = (20, 1)"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=9&isPrimary=false&absoluteTime=13352323920.535", "start_time": 1620, "end_time": 1665}, {"data": ["Well, if for any break I choose, the total number of scalar multiplications is going to be as follows.", "The number I'll need to multiply the matrices from I up to our break point, which I can get recursively.", "The optimal solution. The optimal number. I'll need to multiply the matrices after over eight point on up to J and the number", "of multiplications I need to do to multiply the two results using their dimensions.", "This will be true for any particular place I choose to break that multiplication up,", "doing all of the ones to the left first, all of the ones to the right, and then multiplying those two results together.", "So the best in terms of minimum number of scalar modifications is just the minimum over K of this expression.", "This is a common way of thinking about about this is if I can define some bound like this,", "it'll be true for any particular, let's say, a way of breaking up the multiplication.", "Then the optimal one will be try all possible ways of breaking it up and choose the best result.", "We've seen that trend in programing before. Yeah.", "Question So firstly, what is the smaller step problem that you're considering here?", "Like is it multiply across the difference multiplying that last matrix?", "You mean these recursive stuff problems here that I'm thinking about?", "Yeah, because usually when I think about it for anything I like, okay, please. The last letter or something like that.", "But it's a little hard to visualize when you are like in a way.", "So one way to think about it is we're asking rather than like placing the last character or something like this,", "we're asking which intermediate matrix multiplication will we do last?", "Let me actually you have it was the X goes I'm going to write it for.", "You see that? Yeah. In the back seat. I mean, I know your.", "Okay. I'm placing parentheses around at the end of the day when I multiply all these matrices together.", "I got to do a last matrix multiplying X rather than thinking about breaking it as like, What am I doing with the last character?", "I'm just thinking or any way of nesting these parentheses, they're going to be some two intermediate results that I multiply together last.", "I can like multiply everything up to and including three first and then multiply by eight for any one way of breaking it up.", "Oh, I can do that. I don't have to do that.", "How to divide the problem:", "Details", "\u2022 Let be the min. # of scalar multiplications to", "multiply AiAi+1", "\u2022 with dimensions stored in an array ...n] (matrix Aj", "has dimensions m[j] x rn[j + 1]).", "Then for any i S k S j, MCM(i,j) is at most..."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=10&isPrimary=false&absoluteTime=13352324100.535", "start_time": 1800, "end_time": 1980}, {"data": ["So I'm simply going to choose the optimal division.", "And first, I'm just going to write a recursive algorithm, not worrying about the runtime or possible repeated sub problems, though.", "We'll talk about that in just a moment. It's just the same statement I wrote before.", "I'm going to try for all possible breakpoints within my range of matrices that I want to multiply from either J.", "I'm going to try to take the best split. That's why I'm taking the minimum of C.", "C is just keeping track of the best split I found so far.", "And by the way, I'm assuming here, just for simplicity, that like the dimensions of the matrices are stored globally somewhere.", "Otherwise, it's passing them to the function as well. My base case is simple.", "5:", "7:", "Choose the optimal division", "procedure MCM(i, j)", "if then", "return O", "fork \u2014 itoj-l do", "C = min(c, + +", "return c", "Overlapping subproblems = inefficient", "recursion"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=2052&isPrimary=true&absoluteTime=13352324352.535", "start_time": 2052, "end_time": 2091}, {"data": ["Let's think about our sub problems, though, and how they're going to get called and where repeated overlapping sub problems are going to show up.", "Remember, dynamic programing is really just all about writing, correct recursive algorithms.", "Sometimes they have overlapping some problems,", "in which case we try to make them more efficient using either minimization or bottom up iterative solving and the sub problems.", "Well, if I want to compute the optimal way to multiply, the optimal order in which to multiply matrices from zero to 3 to 4 matrices total.", "Just looking at the algorithm, what are all of the sub problems I'm going to call recursively?", "They're going to be a lot of them actually. It's going to call all of these.", "If you look over all of the breakpoints of the two recursive calls for each possible breakpoint,", "in this case, these six are going to end up getting called in total.", "Now, if I look at one of these sub problems, let's look at NCM one three.", "It in turn is going to call more recursive sub problems, one of which you'll notice is a repeat of a sub problem that we had already solved.", "Okay. So this is our classic example where dynamic programing is a helpful technique to avoid re computing", "the answer to these sub problems that will lead to a very inefficient recursive solution.", "You could do this with memorization if you wanted to solve it in a bottom up way.", "And this is the real reason I want to show you this example. It'll be related to the palindrome example I believe you saw in recitation, for example.", "It leads to a somewhat different iteration order than we've seen in the kind of row by row, column by column kinds of situations.", "Choose theo timal division", "Assuming m array", "1: procedure MCM(i, j", "stored globally", "if then", "Just one matrix,", "return O", "no multiplications", "fork = i to j-l do", "Check each position to", "break with parentheses", "6:", "7:", "c = min(c, MCM(i, k) + + m[i]", "return c", "Cost to multiply Cost to multiply matrices Cost to multiply the", "matrices from i to k. from k + 1 to j.", "resulting two matrices.", "Overlapping subproblems = inefficient", "recursion"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=12&isPrimary=false&absoluteTime=13352324460.535", "start_time": 2160, "end_time": 2271}, {"data": ["Okay. Not counting the base cases just to make this picture a little simpler.", "Let's think about a valid iteration order. The way that I always think about a valid iteration order is to consider an arbitrary.", "Or I'll just do an example with real numbers here. Some problem. And I ask on what other sub problems does it depend?", "Okay, I'm going to actually then draw that onto the table to give myself an idea", "about how I might iterate over at least some problems instead of zero three.", "Given that the algorithm is going to end up calling for all of these splits targeting starting at zero, it's going to end up calling.", "This is the problem we want, right? We want the I equals zero, J equals three.", "So probably would have compute this purple dot here. What is it?", "There would be a recursive call. It will depend on minimum zero one and minimum zero two.", "Those are both going to get called as some of the recursive some problems, meaning that we have dependencies in this direction,", "like we need to have already solve the problems in the same row to the left.", "But it's also going to have to call these recursive some problems.", "Medium one, three and two three.", "You'll see that for some of the other splits, those problems notice ly on the same column in subsequent rows, not previous rows.", "Okay. So the easy iteration order that we've seen many times before for several problems of go row by row left to right is not going to work.", "We're going to get to, for example, MSI in zero three and realize oops,", "I need to know the answer to some problems that are at subsequent rows in the table.", "The structure of the dependencies here is not row by row.", "It is from larger to smaller ranges.", "This is not exhaustive of all possible structures of dependencies like row by row or larger to smaller ranges.", "But I'd say there may be the two most common types of dependency structures.", "Which is why I want to show you this example explicitly.", "Notice that what I mean by that medium of zero three depends only on zero three corresponds to arrange right from 0 to 3.", "All of its problem dependencies are four ranges contained within zero three.", "So what we actually want to do and know the base cases are on the diagonal, the length zero ranges.", "So what we actually want to do to iterate over these some problems is to iterate from smaller ranges to larger ranges.", "Identifying subproblem", "dependencies", "1: procedure MCM(i, j)", "2:", "6:", "7:", "if then", "return O", "fork = i to j-l do", "Base cases on", "the diagonal", "c = min(c, MCM(i, k) + MCM(k+1,j) + m[i]", "return c", "Not counting base cases,", "o", "3", "0", "MCM(O, 3) depends", "We never need a", "range where i > j"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=13&isPrimary=false&absoluteTime=13352324640.535", "start_time": 2340, "end_time": 2514}, {"data": ["You'll notice that I wrote for my outer volume.", "Let me explicitly in the outermost loop, iterate over range sizes and then I'll figure out what the indices need to be.", "So let me first solve all of the range one cases and then all the range two cases and then all the range, three cases and so on and so forth.", "Okay now for a given range, which Rose will I have to consider?", "Well, there'll be a range. One sub problem at many of the rose.", "Right. So my next inner for loop for I from zero to n minus the gap minus one.", "Don't worry too much about minus gap minus one.", "That's just because for larger ranges, once you get deep in the table, there won't be a range of that size in the upper triangle.", "So don't worry about that so much. Just note first we say let me iterate from smaller to larger ranges for each range size.", "Let me compute all of the sub problems of that size and all of the different rows for which there is a sub problem of that size", "as the second inner for loop on line for over I if I've got an I a given row and I know the range size I'm interested in,", "then j the column is just I plus the range size.", "So I just compute the relevant column and then I'm going to solve that sub problem using precisely the same recurrence.", "We've already developed nothing new there against the runtime of this algorithm is cubic,", "but note that you can get away with only quadratic space here straightforwardly because we only compute a sub problem for each.", "I and J are potentially from zero to n.", "I would however like to know cubic sounds bad, but I'd like to note that.", "And here is the number of matrices, not the size of the matrices.", "Okay. That is to say if you have a C, I need to compute the product of eight very large matrices with different dimensions.", "The runtime of that will be absolutely dominated by the runtime of actually computing the matrix products,", "the runtime of choosing the optimal order in which to do those products will be trivial by comparison and will save you a lot of time.", "Okay. So if you have eight matrices and they each are like million by million elements or something and here is eight,", "not million, just to make that one create. Questions.", "Iterative DP algorithm", "1: procedure DPMCM(n, m)", "T = new n by n array initialized to O", "for gap = 1 to n do", "for i O to n-gap-l do", "j = i + gap", "for k i to j-l do", "return T[O][n-1]"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=14&isPrimary=false&absoluteTime=13352324820.535", "start_time": 2520, "end_time": 2691}, {"data": ["but other questions about the chain matrix multiplication or that iteration order we were thinking about.", "Yes. Was switch to after.", "The second for loop is iterating over the row. So for a given range, I want to solve the problem of that range size at each row.", "So I'm solving, if you think about it in terms of this picture for range side zero,", "I'm thinking about these base cases on this diagonal for range sizes of one.", "I'm kind of solving this next diagonal. So for each row I want to solve this problem with that range size and, and so on and so forth.", "What's going on in that second one? Other questions. Yes.", "Is in any given amount of. Some problems about that problem depends on the problem because there like a good", "notation for when you're dealing with the different cases and writing just.", "In it. Yeah.", "I'm not sure about you know how like when you say, like, oh, I seem like a duck, and then you do a little racket and you have two different cases.", "Yeah. For the best case scenario, when I got started at District zero, but depending on the other case.", "Right. Because there's multiple problems, they're their education.", "I see what you mean for the writing. Yeah. So you would see if I had a good thing written here already?", "I don't think so. Obviously, it allowed me to hear it.", "So you would literally listen to the writing in their currency. You can actually write in the recursive case.", "If I less than J write which the other case of interest then return minimum overall k for my j of this quantity.", "You can actually write that minimum over in the recurrence when you write it.", "That was perfectly fine and appropriate in this case. Yes, I can see their clients in orientation, like the three, as you saw.", "What tried to ask, like, what's the hours? So I asked the lady for 200 people.", "Hmm. I understand why you want to go across the backside reasoning about that.", "Right. So there are two things. The more important thing is understanding why it is with regard to this problem", "dependencies that we want to solve the same problems from smaller ranges to larger ranges.", "That, I would say is the more important than any programing concept.", "Secondarily, there's the question of thinking about for loops over a two dimensional table to do that.", "1.", "2.", "3.", "4.", "5.", "6.", "Dynamic Programming Problem-", "Solving Guide", "Dynamic programming is not about filling in tables.", "It's about smart recursion!", "Algorithms by Erickson", "Consider some examples of the problem, develop", "recursive intuition: \"if someone told me the answer to", "part of this problem...consider cases.\"", "Define subproblems", "Develop a recurrence using 1 & 2.", "Determine a valid iteration order using 3.", "Write the iterative algorithm using 3 & 4.", "(Maybe) Optimize the space/memory complexity", "considering 5."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=15&isPrimary=false&absoluteTime=13352325000.535", "start_time": 2700, "end_time": 2880}, {"data": ["Now for something entirely different, maybe refreshing.", "So far we've been talking about algorithms whose input are mostly things like single values sequences such as arrays or strings or lists,", "or potentially things like tables or matrices or even structured trees.", "But we have not, until now considered is it an input that represents sort of arbitrary relational data,", "Reviewing Graph", "Representations"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=3024&isPrimary=true&absoluteTime=13352325324.535", "start_time": 3024, "end_time": 3060}, {"data": ["So let me start by reviewing several different sort of examples of things that graphs model,", "and we'll talk a little bit about introductory graph notation and definition and things like this.", "This may be a review for some of you may remember, graphs can be used to model anything that's a pairwise relation.", "Any time you can define a set of entities and a set of relations between pairs of entities, you can probably model that as a graph.", "That might sound a little abstract to you, but again, the point of abstraction or generality and in theory in many different disciplines,", "is to try to come up with a way of capturing many different and diverse phenomena, as opposed to a way that is only hyper specific to one.", "And so, for example, graphs can be used to model things as diverse as a transportation or transit network,", "whether that be train or cars or roads or flights, etc., or as hyperlinks and web pages.", "For example, the original idea of the Google search engine is, you know,", "we should really think about doing web search by modeling the Internet as a graph.", "That's the idea. That was the big idea.", "If you go back to 1999 when the Google folks were debating, dropping out of grad school at Stanford, which they did.", "You can think about social networks as being a graph where the entities are individuals,", "peoples, and the pairwise relationships are things like friend relationships,", "follow relationships, etc. They might allow you to ask various kinds of questions about the structure", "and the nature of that graph about those communities or their relationships.", "You can think about the Internet at a kind of different level.", "You can think about it both at the level of like web pages and links between them.", "That's the idea of like page rank and Google search originally.", "But you can also think about the Internet like, like physically, structurally, like an actual network between nodes and wires, for example,", "or between pairwise connections as being essentially a graph and a lot of questions you might be", "interested in about routing as being questions about graphs you can building about citation networks,", "who cited who in papers or books the interconnectedness of human knowledge and publication as being a graph.", "And indeed that is one way that people try to understand the relations between trains of thoughts in a given discipline.", "I do this practically when I'm trying to understand the research area.", "I look at some papers and I follow connections in the citation network,", "Graphs Model Pairwise Relations", "transportation networks", "internet packet Routing", "Hyperlinks and webpages", "Citation Network", "Social networks", "Neural Network Computation"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=3078&isPrimary=true&absoluteTime=13352325378.535", "start_time": 3078, "end_time": 3240}, {"data": ["We'll typically write a graph as consisting of a set of vertices and a set of edges.", "E l typically write the graph itself as the tuple of those things.", "G Okay.", "The vertices are often referred to as nodes as well, and I'll canonically use an to represent the number of vertices, the size of the set of vertices.", "So if you have almost even a little bit of segmentation as we're going, if you have a set V,", "then if I put these little bars here, it has the cardinality of the set which for a finite set is just the number of elements,", "the number of vertices we have a set of edges, how often you end to denote the number of edges, okay, And edges are always relation.", "Between pairs of vertices. This is the Cartesian product.", "This is possible pairs of vertices and edges or a subset of those.", "I diagramed a graph at the right where, for example, I have nodes A, B, C, and D, and so on and so forth,", "and stereotypically will draw a line between two nodes to represent an edge connecting them.", "There is some kind of relation between those nodes.", "They are connected by this relation. Note When you think about the number of vertices and the number of edges,", "we'll have to reason about this frequently that the number of edges could be greater than the number of vertices,", "but it can be at most quadratic in the number of vertices.", "The number of edges you can have for the most connected network would be one in which all pairs of vertices are related,", "in which case you'd have and squared connections either exactly or half of that depending on the directness of the graph.", "And we'll talk about that. We'll often use the idea of a sub graph.", "A sub graph of the graph is just a subset of the vertices and edges between the same vertices.", "So for example, here I might say, think about the sub graph consisting of just A, B, D, and the edges between them, for example.", "Basic Graph Terminology", "\u2022 A graph G = (V, E) consists of", "\u2022 A set of vertices (or nodes) V [often let", "n = IV Il, and", "\u2022 A set of edges E [often let m = IEI]", "between pairs of vertices (E C VxV).", "\u2022 N0tethat0 S m S n2.", "\u2022 A graph G' = E') is a subgraph", "ofG= (V,E) ifV' C V and E' c E", "between the same vertices.", "3", "c"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=3279&isPrimary=true&absoluteTime=13352325579.535", "start_time": 3279, "end_time": 3417}, {"data": ["The edges are symmetric, and I'll usually just write that as a tool, like the tuple,", "a comedy, meaning that if you can go from A to B, you can go from B to A OR.", "In other words, there is no difference between the relation in one direction versus the other.", "For example, the Facebook Social network is an undirected graph if you are Facebook friends with someone else.", "By definition they are also Facebook friends with you. It is symmetric in that way.", "By contrast, in a directed graph there is a notion of asymmetry or directionality.", "An edge from A to B is not the same thing as and does not imply an edge from B to play.", "For example, the Twitter or it has a different name.", "I think Social network is a directed graph.", "The follow relation is asymmetric. You may follow someone else, perhaps you follow Taylor Swift, and perhaps Taylor Swift does not follow you.", "Maybe she does for one of you. So it's so directed groups are asymmetric in this sense.", "Now we're in undirected graph. I'll use the terminology of neighbors, so I'll say that A and B are neighbors if there is an edge between them.", "And I'll also say that those two nodes are then adjacent if they are neighbors.", "So just similar terms with the same thing.", "When I talk about the degree of a node within a graph, I'm talking about the number of neighbors, the number of nodes to which it is connected.", "In a directed graph, there's two different notions of neighborliness because it's asymmetric.", "So the notion of a predecessor and a successor of an edge, right,", "the predecessor of the node from which the edge originates and the successor, the node to which it goes.", "We can also talk about separately the inner degree and the outer degree in a directed graph to integrate being the number of edges that are incoming,", "the out degree being the number of edges that are outgoing. Particular note, those are equal the same thing in an undirected graph.", "Undirected & Directed Graphs", "Undirected edges labeled", "as a tuple Of nodes:", "If (a, b) E E we say that...", "\u2022 Nodes a and b are neighbors", "\u2022 Nodes a and b are adjacent", "Directed edges are", "assymetric: O \u2014i 2 does", "not imply 2 \u2014i O.", "If O \u2014i 2 E we say that...", "Node O is a predecessor of node", "2, and 2 is a successor of O.", "\u2022 In-degree of node v is the", "Degree of node v is the number", "number of predecessors, out-", "of neighbors of v.", "degree is number of successors."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=19&isPrimary=false&absoluteTime=13352325720.535", "start_time": 3420, "end_time": 3567}, {"data": ["but they look very different just because they've been drawn in a different way.", "It's. A graph is plainer.", "Sometimes you'll hear that if it has what's called a planar embedding, that is to say,", "if there is a way to draw the graph in two dimensions, as if on paper such that no edges are crossing.", "So for example, this graph is planer.", "You can see that on the left here is a way of drawing it so that none of the edges that are crossing a graph is planar.", "If there exists any way to draw it without crossing edges, it is still planar,", "even though some ways of drawing it may have crossing edges, which for the most part will not.", "Look at this. If you were to take a subsequent course specialized into graph theory or graph algorithms,", "one of the things you might see is that there are many cases where you can get more efficient graph algorithms.", "If you know the graph is plainer, that you can exploit that property.", "For the most part, we will not see that a path in a graph is a sequence of adjacent vertices is how I would define it.", "Same Graph, Different Drawings", "A graph is defined by the set Of vertices and edges, not by a", "particular drawing.", "Figure 5-4. Two drawings of the same disconnected planar graph with 13 vertices, 1 g edges, and two", "components. Only the drawing on the left is an embedding,", "A graph is planar if it has a planar embedding: a 2D drawing", "with no crossing edges."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=20&isPrimary=false&absoluteTime=13352325900.535", "start_time": 3600, "end_time": 3660}, {"data": ["We sometimes talk about a tree in graph theory, maybe a little bit different from a root in tree as a data structure.", "So in graph theory, a tree is simply any connected acyclic graph.", "It need not be, for example, binary, it need not have a particular root or anything like that.", "It's simply any graph which is connected.", "There is a path between any pair of verses. A cyclic does not contain a cycle and a graph that's an example is drawn here in the left.", "You will note, and this, by the way, is a classic thing in a intro graph theory class to ask someone to prove,", "for example, by induction or something that any tree within vertices will have in minus one edges necessarily.", "It'll have exactly that number of edges, not nearly that number.", "Trees & Forests", "A tree is a connected acyclic graph:", "Connected: For any pair of vertices,", "there exists a path between them. A forest is a set of trees.", "Acyclic: There are no cycles.", "A tree or forest are spanning if", "Trees have n-l edges.", "they include all vertices."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=3729&isPrimary=true&absoluteTime=13352326029.535", "start_time": 3729, "end_time": 3780}, {"data": ["we usually use one or two data structures to store and represent a graph when we're actually going to develop algorithms for them.", "One is the adjacency matrix. I will say this is perhaps the slightly less common representation, but I want you to know both.", "The adjacency matrix is just a two dimensional table where you imagine putting your vertices both on the row and on the column.", "So there's an entry in the table for every pair of services and you put a one there.", "If there is an edge between those vertices and you put a zero there,", "if there is not an edge between the vertices, you just cannot illicitly store the slight bitwise table.", "All of the vertical of the edges that exist between pairs of vertices have a one way to do it, a second way to do it,", "by the way, to the good thing about this data structure is that you can check for the existence of edges very efficiently.", "The downside is that it uses quadratic in the number of vertices memory and adjacency list is the other option.", "Adjacency Matrix", "2D table of all nodes: Store a 1 if the edge between two nodes", "exists, O otherwise.", "0000000", "c 010 10 1", "1 oooooo", "001000", "1000000", "110001", "00000", "100000 0", "0010000", "000100000000", "i 000000", "1000000", "J' (H) oooooooolll", "k: 0000000 00 10 go", "1, 0000000001 to", "0000000001010", "Figure An adiacency motriX to' exemplegraph", "Uses O(n2) space, can lookup if an edge exists in 0(1) time."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=3837&isPrimary=true&absoluteTime=13352326137.535", "start_time": 3837, "end_time": 3900}, {"data": ["That's what's being represented here. It's a different way to represent the graph as a data structure.", "If we go to an algorithm, perhaps the more common way, the real advantage here is that it uses less space is one of the major advantages.", "In particular, it uses less space when there are far fewer than in squared edges.", "Okay? If for example, you have n vertices and let's say about three in edges,", "then this will only use a linear amount of space as opposed to a quadratic amount of space storing mostly zeros.", "So a relatively common data structure, what it allows you to do is for a given vertex.", "Again, you can iterate over all of the neighbors of any arbitrary vertex efficiently.", "Adjacency List", "An array/map Of vertices with each pointing to a linked list Of", "all its (out) neighbors.", "Figure 5-9. An adjacency list for our example graph.", "Uses O(n+m) space, can list neighbors of a vertex v in", "O(deg(v)) time."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=22&isPrimary=false&absoluteTime=13352326260.535", "start_time": 3960, "end_time": 4005}, {"data": ["The questions about the intro graphs, terminology, things of that nature, the kinds of objects we're working with here.", "Yes. Yes. The caption says, Only gone to the left is the flag.", "But if they're supposed to be the same rock. This might be great.", "Drop. I think Erikson means here that only the left one is like a cleaner embedding due to not having the crossing things.", "I'd have to go back and check the surrounding text, but I believe that's the meaning of the caption.", "So like if that graph can be rearranged to be paper, is it still cleaner?", "Yes, yes, yes, absolutely. That is the point.", "This graph is plainer because all you need is one example of a valid embedding like this.", "So when embedding things, it was already dropped that way, but later it could be dropped.", "And once you get that. That's right. And embedding is a drawing and a graph is plainer.", "If there exists such an embedding, there is another button.", "Depth-First Search:", "Undirected Graphs"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=4068&isPrimary=true&absoluteTime=13352326368.535", "start_time": 4068, "end_time": 4140}, {"data": ["The first search allows us to explore a lot of different questions about graph structure relating to connectivity at a very high level.", "You guys, different kinds of questions about connectivity. Like I give you a graph and I ask for two vertices.", "S.A. Is there a path from S2 to or am I ask given a vertex?", "S Where are all of the vertices that you can reach from is by some path?", "Or I might ask, is the graph connected in the sense of for any pair of vertices?", "Is there some way to get from point A to point B?", "Okay, these are all questions simply about the connectivity structure of the graph, the basic degree of connectivity.", "They're all potentially different questions, but we're going to be able to answer all of these questions with one style of algorithm,", "the most fundamental kind of algorithm for searching the connectivity structure of the graph, the Denver search algorithm.", "Reachability & Connectivity", "Given a graph G = (V,", "I.", "2.", "3.", "and vertices s E V, t e V, does", "there exist a path from s to t?", "And a vertex s, which vertices are", "reachable from s? That is, return", "{v E V: a a path from s to v}.", "Is the graph", "connected? In other", "words, is it true that v e", "V, 3 a path from u to v?", "c", "Not connected", "D"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=602b7aa0-227a-4a5b-8528-b1150146ddcd&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=4155&isPrimary=true&absoluteTime=13352326455.535", "start_time": 4155, "end_time": 4212}, {"data": ["So for each of my neighbors, if I have not already visited it, they don't want to revisit the same node again and again and again.", "Now I will visit it with the depth first search and I'll recursively search in this fashion", "evident already just from this specification that the algorithm will have a linear runtime,", "even though it's a recursive algorithm.", "The easiest way to see that is not to write a recurrence relation for the runtime actually, because it's very difficult to write one.", "The number of recursive calls will depend on the number of neighbors of a node will be proportional to the degree of a node.", "So instead it's much simpler just to reason at a global level that because of our use of the visited table,", "we will reverse on each node at most once, meaning that this procedure will execute at each node once at most.", "This procedure has runtime that is linear in the number of incident edges or linear in the number of neighbors of that node.", "Okay, so the total runtime will be proportional to the sum over the vertices of the degrees of those vertices,", "which is linear and the number of edges that.", "So the total runtime is just linear in the size of the graph.", "For this reason, arguing at a much more global level.", "Typically when I have an algorithm that is linear in the size of the graph,", "I will generally write that as o of n plus m or o of size of the vertex set plus size of the edge set,", "as opposed to trying to say something like r o of NW unless n is bigger, in which case it's o of M or something like this.", "This is just a much cleaner way of writing that the runtime is linear in the size of the graph.", "Remember, the size of the graph is the number of vertices plus the number of edges.", "So it's just a cleaner way to write that in general. And let me do a traversal and that first traversal.", "This particular graph as the last thing that we'll do today.", "If I start exploring from a gate, I'm Mark that I have visited a and then I'm going to look over all the neighbors of A,", "that would be B and C and I'll recursively explore from that.", "Let's suppose that I explore B next I mark that I have visited B I look at all the neighbors of B, I've already been to A so I don't recursive there.", "I just came from there, but I haven't visited D So I would curse on D already.", "You see why this is called depth first search rather than graph.", "Although the node c is only one edge away from A, we actually won't end up exploring it until much later in the algorithm.", "That first search will continue as far as as far as possible, along one particular path of exploration before,", "Recursive Depth-First Search (DFS)", "[Single-Source]", "Global visited table (initialized to false)", "1: procedure DFS(u)", "2:", "\u20223:", "4:", "5:", "visited [u] = true", "for (u, w) in E do", "Runtime is O(n + m) [linear]", "Recurse on each of n nodes at", "most once each.", "Consider each of m edges at", "if not visited [w] then most twice, once from each", "endpoint.", "DFS(w)", "c"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=24&isPrimary=false&absoluteTime=13352326620.535", "start_time": 4320, "end_time": 4500}, {"data": ["Yeah, Yeah. So sometimes you might say,", "do you have like a constant granularity which is undirected throughout that mean every node has the same security or you", "might have a degree founded a graph or another mini album might be faster with you knows the maximum degree of hands.", "Yeah. In particular that immediately implies a glimmer of edges of the universe can actually Democratic or Republican,", "for a directed breakdown in separate initiative of industry. Now it's a great direction to find a similar thing,", "a degree where in degree and the out degrees idea okay you might have such business in general we'll talk about I use the", "word sparsity I can I up for grabs in cases where there are like within your number of edges as opposed to a slight,", "you know, how many hours that research will be faster on a Yeah but I just got you want.", "So let's say we have something to be really good at.", "There's as much of this which everything is this and the algorithm on a graph, actual instruction graphs.", "Yes let's look. Because so much of this depends on how you're giving the information.", "So if you are given an input where you have to construct a graphics to make sure that where you have it right,", "right already just having adjacency list and do some work on it.", "But yes, all you're thinking if you have an algorithm like dev research and the work to do, the search is on the same or asymptotically.", "As for printing the graph, printing the content of the gravitational season edges.", "Okay, so like for something like a social network, a lot of actual work to designing the graph such that."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=152d2196-4a24-407a-b748-b1150146bbc4&sessionPID=c1ac268e-cf6c-4f6d-bbe5-b0ce0147526e&number=26&isPrimary=false&absoluteTime=13352326980.535", "start_time": 4680, "end_time": 1000000}]}