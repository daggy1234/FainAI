{"data": [{"data": ["I'm not a great, actually. Was right.", "Yeah. Yeah. Now I know.", "It's like. I know they want something. So I'm at my place and I probably have that in there.", "I think that I. I can't.", "I feel like. Yeah, it's okay.", "Yeah. I'm not a four star player on that one.", "Yes. You probably have no idea.", "It's really, Really.", "No, because, you know, it's like literally just like.", "You know the brachytherapy?", "Yes, I do.", "I don't. I do. And that's why so excited.", "I mean, that's how I would say you.", "Yeah, because there's nothing I can do.", "That's for sure. Yeah. So we're going to make arrangements for so much money out of the way.", "Sounds like he does not want to go through.", "I was like, I don't know.", "Now we're actually ready to get this out there, to be honest with you."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=0&isPrimary=false&absoluteTime=13355515501.018", "start_time": 1, "end_time": 177}, {"data": ["I mean, I was, you know, I always hated, like, I would think I was doing it right.", "He's like, oh, it's like, like $3.", "And it's my testing, testing.", "But, I mean, that's just maybe because they're like, we're making plans, like, Oh, yeah.", "Oh, All right.", "Well, welcome, everyone, to come, say, 330.", "I'm glad to be here. I hope you are, too. Well, we got a 19.", "Make sure. Hey, we're going to wrap up discussing clothes and belts and algorithms for computing them today.", "L 19: Flows and Cuts 2", "Reference and some figure credit:", "Chapter 10 and Chapter", "Algorithms by Erickson"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=1&isPrimary=false&absoluteTime=13355515680.518", "start_time": 180, "end_time": 252}, {"data": ["We're going to wrap up our discussion from yesterday about the relationship between flows and cuts.", "We talked about, remember, weak and strong duality,", "and that will lead us to conclude with the Ford Focus on an algorithm, which will do a little bit of analysis.", "And then we'll discuss the Edmunds car algorithm, which is really just a variant of Ford.", "Ford, focus on it, and we'll go through the analysis of that variant, especially with respect to its runtime complexity.", "And we'll end by showing one of a number of different examples of problems that you", "can solve by reducing to max flow will show perhaps the most canonical such example,", "which is the problem of maximum bipartite matching, which we will show how you can solve by reducing it to the max flow problem.", "So if you have no a good max load algorithm, you can solve this matching problem we'll look at as well as several others.", "Outline", "I. Ford-Fulkerson Analysis", "2. Edmonds-Karp (Ford-Fulkerson with BFS)", "3. Reduction and Application: Matching"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=291&isPrimary=true&absoluteTime=13355515791.518", "start_time": 291, "end_time": 348}, {"data": ["One was the so-called residual graph. What is the residual graph?", "So I give you a flow network that is,", "you see a capacitated graph with some flow along each of the edges that satisfies two kinds of constraints, right?", "The capacity constraints. So the flow on a given edge should be non-negative and should be at most the capacity", "of that edge and secondarily should satisfy the flow conservation constraints.", "Meaning, for example, that if I have ten units of flow inbound to a,", "I should have ten units of flow outbound from a, that inflow should equal outflow everywhere.", "All right. That we should sort of be an equilibrium, if you will, except for at the source and the target.", "That's what a flow in a capacity of graph was.", "Our challenge last time was to compute a maximum flow which we were discussing corresponds to a minimum cut.", "In order to do that, we discussed the concept of a residual graph.", "A residual graph is another capacitated graph with the same vertices as the original graph, but two kinds of edges.", "It has a forward edge which I have drawn in solid, for example, as to a for any edge in the original graph that had available remaining capacity.", "So for example, in the original graph there were ten units of flow on the edge from S to A, but the capacity was T,", "meaning that there was some remaining capacity ten in particular, which is why we have a forward edge with capacity ten in the residual graph.", "We also have reverse edges. You have a reverse edge in the residual network which I've drawn with dashes here", "whenever you have a and in the original flow network with some positive flow along it.", "So for example, we have ten units of flow along this edge from A to C,", "so we will have a reverse edge in the residual graph for the opposite direction with a capacity of ten things.", "In this case, we say that this edge from ADC was saturated in the original network,", "meaning its flow was equal to its capacity and in that case there is only a reverse edge.", "There's no forward edge in the residual network. The second important notion was that of an augmenting path.", "This is a path from S to T in the residual network.", "We also defined the bottleneck capacity along an augmenting path, which is the minimum residual capacity on any edge in the augmenting path.", "So in this example, we had an augmenting path of the residual network as to C, to A, to B, to D, to T,", "and the minimum residual capacity along all those edges, again, in the residual network was five.", "So that was the bottleneck of capacity to augment flow.", "Talking about flow back in the original graph. Now what do we do for every forward edge?", "f in G", "10/20", "10/10", "Augmenting Flow", "O/s", "5/15", "10/10"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=2&isPrimary=false&absoluteTime=13355515860.518", "start_time": 360, "end_time": 540}, {"data": ["Weak duality was that for any flow in any cut, the value in the flow is at most the capacity of the cut at most to an inequality, a stronger claim.", "Strong duality was that in this case,", "the value of the maximum flow will be equal to the capacity of the minimum cut in any such network that I claim to you.", "It's okay to do that.", "I wanted to define all of this machinery of residual graphs and augmenting paths and flow augmentations so that I could consider a couple of cases.", "Let's consider some flow in a network. We have some flow.", "Okay. If I was to then write the residual graph, there are a couple of cases.", "One case is that there could be an augmenting path. One could exist in the residual network corresponding to that flow.", "If so, then the augmented flow after one of those augmentation steps increases the value of the flow,", "meaning that that original flow was not a maximum flow. Okay, this is the easier case to see.", "If you have an augmenting path, then you didn't have a maximum flow to begin with.", "The other case is if you do not have an augmenting path, in which case I want to claim to you,", "Case 1: There is an augmenting", "path", "Augmenting Path in G/", "51 5"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=615&isPrimary=true&absoluteTime=13355516115.518", "start_time": 615, "end_time": 705}, {"data": ["This will be very related to an algorithm for finding the main cut.", "By the way, consider the set of vertices that are reachable from your start vertex in the residual graph.", "Actually, we're assuming in this case that there is not an augmenting path.", "So we're assuming that T in particular is not part of this set that T is not reachable from and the residual graph in this case.", "Okay. So consider the set of those vertices that are reachable from s in the residual graph.", "So look, let's look down here. The residual graph from s I can get to a and I can get the C but I can't get to the duty.", "So this is my set of vertices. Let's look at that same set of vertices in the original graph and calculate the capacity of that to cut the", "cut consisting of the vertices reachable from s in the residual network when there is no augmenting path.", "Okay. I'm just defining one subset of vertices.", "Remember that a cut is technically a partition into two separate ones, but the other partition is just implicit.", "It's just all the vertices that aren't in this set and the capacity of this cut is going to be equal to the current flow.", "That's the crucial insight. Why is that?", "Well, if you think about these vertices that are reachable from s in the residual graph that's over here at the residual path,", "why is it that I can't get beyond this cut in the residual graph?", "Okay, if I have some edges in my original graph that exit this cut, these are going to be the cut edges that correspond to the capacity.", "Then in the residual network. Since I cannot traverse those, those edges must be saturated.", "I must only have the reverse of those as indeed is the case here because there was originally", "an edge from A to B and edge from C to If I can't traverse these edges in the residual graph,", "it has to be because I only have the reverse of those edges.", "I'm only going to have only the reverse of those edges.", "If they are saturated, if their flow is saturated, meaning that precisely the capacity of this cut is going to be the flow,", "the value of the flow that is crossing this cut currently by weak duality for any flow that you've got,", "the value of a flow is at most the capacity of any cut that you might have.", "I'm what I'm arguing here is that in this case we have a flow whose value is equal to a cut,", "in which case that must be a maximum flow and this must be a minimum cut.", "Okay, This is the idea of strong duality, and it immediately entails an algorithm that sort of pops out.", "What is the algorithm repeatedly?", "Case 2: There is not an", "augmenting path", "Consider the set Of vertices reachable from s in Gr.", "10/20", "5/10", "10/10", "s Is"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=4&isPrimary=false&absoluteTime=13355516220.518", "start_time": 720, "end_time": 897}, {"data": ["Do the following Find an augmenting path in the residual network?", "Yes. This means also construct the residual network at each step or update it if you're keeping track of it.", "Then find an augmenting path in your residual network. How should you do that?", "We'll talk about that in a little bit. You know, ways to find paths from S2 to you.", "Use one of them to augment the flow along that path as we have described,", "and then update your residual network and continue doing this repeatedly until no augmenting path exists in your residual network.", "At that point, you can be guaranteed that you have a maximum flow.", "And hey, by the way, this algorithm is called the portfolio or something like.", "To hear it referred to under that name. Also, if you understand the strong duality claim,", "then it's kind of implicit that you can also compute a minimum code in a very similar way by computing a maximum flow and then finding the vertices", "that are reachable from the start in your final residual graph when there's no longer an augmenting path from S2 t just as we were describing.", "So you kind of get both of them. If you can view the maximum flow, it's pretty easy to get the minimum cut.", "Corresponding are the questions about the idea of this algorithm.", "We'll talk about analyzing its runtime in a moment. Yes.", "In order to calculate for initial network, you have to start with a balance that seems to suggest some sort of low income.", "So the question is about initialization. In order to construct the residual network, you need a valid flow to initialized.", "The presumptive thing you would do is just to start with all zeros, typically.", "So with no flow anywhere. That's certainly a valid flow, though not with any value.", "But. Yeah, she's able to come back to that.", "So that's the augmenting the flow along that path.", "And then after you change the flow, you need to update the residual network to reflect the new current flow.", "Yeah, indeed. Let's trace that, make sure on the same page.", "\"Corollary\": Computing Max.", "Flows and Min. Cuts", "\u2022 To compute a max. flow, repeatedly:"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=5&isPrimary=false&absoluteTime=13355516400.518", "start_time": 900, "end_time": 1044}, {"data": ["Yeah, I know. That's your favorite. That's my favorite path for the time being.", "So let's suppose that I found that I'm now going to augment flow along this path.", "Note that our augmenting path here is comprised only of forward edges because our first residual graph only has forward edges.", "So this augmentation step is pretty straightforward. Find the minimum capacity among these edges that would be five corresponding to this", "edge A to B add five flow to every one of these edges in the original network.", "So that's our first flow augmentation step. We're going to do this repeatedly.", "So this is our current flow. Now that we're starting with the one that we just documented, we have five flow along this path that we just computed.", "We're going to update our residual network. It's going to be a little bit different now.", "We're going to have forward edges and still some of them may have had their capacities reduced.", "So, for example, this edge adds to a because we added five flow along this.", "Now that edge is still there, but it has residual capacity of 15.", "Now there's only 15 capacity remaining along that edge. In the original wrap, we're also going to introduce reverse edges.", "Anywhere that we had added a positive flow where previously there was none, which is why there's, for example, this reverse edge from A to S,", "and perhaps more interestingly, in the case where we saturated an edge meeting, we added flow that brought it up to its capacity.", "So just from A to B, we're no longer going to have the forward edge on.", "We will only have the reverse edge. And I note that that's kind of always going to happen.", "And one of these steps that you're going to saturate at least one edge because you're going to have this bottleneck somewhere.", "And so you're probably going to have not probably you're going to have in every one", "of these these steps in your residual network and edge forward edge disappearing.", "Right as something becomes saturated. This is a little bit complicated to reason about.", "We're getting back to this because it's also possible that something that it only has a reverse edge at one point in time.", "Right here we only have a reverse edge between A and B might later change because you might later use an augmenting path that goes through", "this reverse edge and thus reduces and adds remaining capacity to a forward edge over the course of the algorithm may appear or excuse me,", "may disappear and it may later reappear potentially.", "I can talk about that. When we think about runtime in a moment, again, we find an augmenting path from T.", "So here's perhaps a simpler one. Let's go s to see the T.", "This is still only using forward edges, so the augmentation step is pretty simple.", "We calculate the minimum residual capacity that's five corresponding to this edge.", "CTD Note that it is the residual capacity, not the original, the original graph,", "Tracing Ford-Fulkerson", "f in G", "0/20", "Augmenting Path"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=6&isPrimary=false&absoluteTime=13355516580.518", "start_time": 1080, "end_time": 1260}, {"data": ["So this is perhaps a little bit less intuitive of an augmentation step.", "In some ways, I like to think that we're here,", "we're correcting some odd choices we made earlier on in the algorithm to increase the total amount of the flow in this case.", "But it's a little bit less intuitive than when you're only using forward edges.", "What's going on. Nonetheless, we still have the property that we're increasing the value of the flow by the bottleneck.", "You'll note that even in this case with the thing with the reverse edge and we decreased the flow value on some edges,", "nonetheless we still increase the value of the flow two by five by the bottleneck.", "Okay, let's go again. So here's the current value.", "Our flow in the algorithm is still going. We construct the residual network as before.", "You will note, once again, an edge has become saturated.", "In this case, the two sea edge has become saturated and that forward edge has disappeared from our residual network.", "And we now have this reverse edge here that there's no longer an augmenting path in our residual network.", "You could find that by attempting an s t search from s t in your residual network,", "you would not find t you would not be able to get there using these edges.", "At that point, the algorithm terminates, including that we have computed a maximum flow,", "but this flow was a maximum flow and that the value of this flow would be,", "in this case 15 the outbound from s equivalently the inbound to T, and if we wanted to,", "we can compute the minimum cut, which is the set of edges that were reachable from s notice, by the way,", "that you kind of get that for free when you ran the search to try to find an augmenting path,", "you would typically already know the set of vertices that were reachable.", "So you've kind of already got the minimum height. There's not really any overhead there.", "An interesting observation that I wanted to make sure to point out about into gravity, this is one of the places where it's going to be more precise.", "Remember, for simplicity, I started our discussion saying Assume that the edge capacities are all integers.", "If that is the case, if the edge capacities are all integers, then this algorithm, the Ford Focus,", "an algorithm will always compute an integer maximum flow, meaning the value of the flow on every edge will also be an integer.", "There is nothing in the problem statement that said that the flow along an edge has to be an integer.", "That wasn't a constraint that we had, but it will just happen to be in the case that if your capacities are all integers,", "they will exist in integer maximum flow. And by the way, if we're focusing, we'll compute an integer maximum of flow.", "In that case, that's kind of a nice property, as you'll see later when we talk about applications like matching,", "where we want to use this to solve a discrete combinatorial problem,", "that it will just happen to be the case that we'll be computing integer maximum float.", "You're interested. There's a discussion in Eriksen's text about what can happen when your capacities are not necessarily integers.", "Tracing Ford-Fulkerson", "f in G", "5/20", "5/10", "10/10", "Augmented Flow", "0/10", "0/1 s", "10/20", "10", "\u2014 10", "Augmenting Path"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=8&isPrimary=false&absoluteTime=13355516940.518", "start_time": 1440, "end_time": 1620}, {"data": ["Let's assume we have inverses and in edges.", "And just to simplify some of these statements, let me assume there are more edges than vertices.", "As is often the case in interesting graphs like this. We can find an augmenting flow.", "We know how to do that with, say, a single DFS or a DFS to find a path from a T in, let's say, O of and time.", "Again, I'm simplifying just because I'm assuming that there are more edges than vertices is enough.", "I can augment the flow along that path and over time.", "Note that a simple path from S2 t as it moves in edges along it.", "And then I can an update the residual network also at linear time, I can totally re compute it from scratch like,", "like do every edge in the residual network from scratch, you know, of any time.", "I could be a little bit more judicious and only update the edges that were along the augmenting path and", "over time which which could be substantially less depending on how many edges there are in your graph.", "Your question, of course, is how many times do I have to do this?", "So each particular iteration of the for focus an algorithm we can complete in linear time in the size of the graph.", "Roughly speaking, the real question is how many such iterations will be necessary.", "I'm going to give you a strange parameterization for a runtime you would normally want to.", "You would expect to see a runtime complexity for an algorithm like this in terms of MN and in the size of the graph given to you as input.", "We have, however, seen a few other examples of much stranger parameterization of runtime.", "One is when we look at the knapsack problem quite some time ago where the budget was part of the runtime,", "which was just like a single number and it depended on that. This is going to be another one of those cases where we have a weird parameters issue.", "The most natural way to think about is runtime. Most straightforward to generalize, say if each augmentation step,", "each iteration of this algorithm that augments the flow, it increases the flow by at least one.", "And no, if your capacities are all positive integers, then indeed each augmentation will increase the flow by at least one.", "Ford-Fulkerson Runtime Analysis", "Assume n vertices, m 2 n edges.", "\u2022 To compute a max. flow, repeatedly:", "\u2022 Find an augmenting path in the residual network", "\u2022 Augment flow along the path", "\u2022 Update the residual network", "\u2022 Until no augmenting path exists"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=1653&isPrimary=true&absoluteTime=13355517153.518", "start_time": 1653, "end_time": 1800}, {"data": ["You might wonder. Yes. Well, it's like the multiplication went on for the old man.", "Ford-Fulkerson Runtime Lower", "Bound Example"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=1968&isPrimary=true&absoluteTime=13355517468.518", "start_time": 1968, "end_time": 1980}, {"data": ["You still have the word edges everywhere except you to be where now that is saturated and you've got the reverse entry view of residual capacity one.", "Now you find an augmenting path in that residual network.", "Possibly you find s to be to you to take the bottleneck of that would be the residual capacity of one from view.", "Great. You push one unit of flow from s to team and repeat and repeat.", "Okay. Indeed, if you alternate between these two augmenting paths,", "then each augmentation step would have a bottleneck of one and only increase the flow by one.", "And it really would take you to X iterations or order that could be exactly equal to the value in the maximum flow,", "which could be very large In this case, in a very small graph, the value of the maximum flow could be very large, X could be a trillion,", "a quadrillion, whatever, and it really would take you that many iterations.", "So there may be cases where you could give a tight bound on the value of the maximum flow and then", "directly derive a nice runtime bound from this simple upper bound from the Ford focus of algorithm.", "Ford-Fulkerson Runtime Lower", "Bound Example", "Claim. There exist input graphs where Ford-Fulkerson", "may take O (If* 1m) runtime.", "Proof. Let X >> 1.", "Want a max. (s, t)-flow.", "Suppose Ford-Fulkerson", "alternates between augmenting", "paths s t and s", "x", "x", "x"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=12&isPrimary=false&absoluteTime=13355517660.518", "start_time": 2160, "end_time": 2238}, {"data": ["an algorithm that's all focused on now? Yeah. So you're meeting like this or not at a not correct.", "Yeah. So short is to the question is what no shortage of shortest in terms of number of", "edges so unweighted not shortest in terms of like weighted by the flows or anything.", "Here's the outline of what we'll try to do.", "First, let's try to convince ourselves that the shortest path distances in the residual network are increasing over successive augmentation steps.", "At the distance from SSE to other vertices in the residual network is increasing over time.", "Intuitively, why is this the case? Well, intuitively, those forward edges are getting saturated, making it harder to make forward progress from this.", "Intuitively, this is the idea. Based on that, we will attempt to argue that each edge is removed from the residual graph.", "Right. When does that happen? When a forward edge becomes saturated.", "Then in the next iteration, it's residual graph. That for edge isn't there.", "It disappears from the residual network when an edge gets saturated. You only have to reverse it after that, based on the first claim,", "will attempt to understand that each edge can only be removed at most a certain number of times.", "Something like an over two in particular. Each edge can only become saturated, in other words, a limited number of times.", "Finally, since at least one edge is going to be saturated per augmentation.", "And each individual edge is only going to be saturated in over two times.", "And there are only in edges. We're going to use this to try to conclude that there will be, at most,", "an m over two iterations, total iterations like augmentation steps in the algorithm.", "And since we can do each one in of them time, we get our runtime of oh and M squared.", "Okay. That is again, a worst case analysis.", "It is totally possible. Indeed, it is quite likely on many empirical real world graphs that the Ford Focus,", "an algorithm including using breadth first search to find augmenting past will terminate in many, many fewer iterations than this.", "Okay.", "But in this case, if you use breadth for search, we can argue that even in the worst case, it will terminate after a polynomial number of iterations.", "Your empirical performance may be much better than this potentially. Okay.", "Are you questions about the outline before we dive into arguing steps one and two?", "All right. So why one why are the shortest path distances increasing over augmentations of the algorithm in the residual network?", "Edmonds-Karp: Ford-Fulkerson", "with Breadth-First Search", "Claim. If Breadth-First Search (BFS) is used to find shortest", "augmenting paths in the Ford-Fulkerson Algorithm, a max.", "flow can be found in O(nm2) time on a graph with n vertices", "and m edges."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=13&isPrimary=false&absoluteTime=13355517840.518", "start_time": 2340, "end_time": 2520}, {"data": ["First, let me define some notation to make more precise what I need. Let f so I ve the flow after I augmentations after I augmentation steps.", "One of the iterations of our outer repeated let g sub answers.", "I ve the corresponding residual graph corresponding to that flow.", "F sub I let ls of I of a vertex d denote the unweighted.", "So we're talking shortest path in terms of number of edges, not in terms of total capacity or total flow or anything.", "Just number of edges denote the unweighted shortest path distance from s from our start vertex or", "source vertex to a get the in the ith residual network residual network after the augmentation.", "Okay. We'll call this infinity.", "If that vertex is not reachable in that residual network and will say that its distance is infinity.", "Then what I want to argue to make this first point that these distances are increasing is simply that the shortest path distance after the", "eye augmentation to a given vertex B is at least the shortest path distance after the eye minus one X augmentation to the same vertex V.", "Okay, this is over all the vertices and for all of the iterations.", "Okay, Questions about any of the notation were about what it is we're trying to argue.", "This is just making giving us some notation and being a little bit more precise about exactly what we were claiming.", "And again, this is sort of as you get to somewhat more complex mathematical arguments, right?", "In this case, one could say that claim one here is a lemma in the sense that we actually don't care about claim one in and of itself.", "We're trying to analyze the runtime complexity of the algorithm. I don't really care that these links are increasing in and of itself.", "I care about it because I will need this fact in order to argue the second", "claim that I do care about because that will lead me to a runtime conclusion.", "I. As an aside, for those of you who are interested in mathematics and proves, one of the things that I see very commonly is that people think,", "How would you figure out this order of argumentation that I should argue this lemma first?", "The usual answer is that when people first prove things, they don't do it in that order.", "They first start by asking the question. I want to bound the runtime complexity in this algorithm to do that.", "I want to understand like, how many times can an edge become saturated and disappear or reappear into the residual network?", "Claim 1: Shortest path distances are", "increasing over augmentations", "Let fi be the flow after i augmentations and let Gfi be the", "corresponding residual graph."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=2523&isPrimary=true&absoluteTime=13355518023.518", "start_time": 2523, "end_time": 2700}, {"data": ["But we'd like to argue is that this arbitrary mean at this particular eye also satisfies this claim.", "Why would that be true if you sort of got distance after the implementation to be is infinite, then this is trivially true because infinity,", "it turns out, is greater than or equal to anything that might possibly be on the right hand side.", "So it's somewhat more interesting if the vertex V is reachable after the augmentation and is thus not infinity.", "If it is reachable, then it is reachable by some shortest path.", "So consider the shortest path from s2 V. After that I have augmentation in the residual network.", "Okay, I'll call that starting it s then a bunch of other things I don't care about.", "Then going to some vertex. Let me call it u and ending up it V.", "We have the following claims first, that the shortest distance to this vertex V,", "since this is the shortest path, is equal to the shortest path distance to you.", "Whatever the end ultimate node on that shortest path was plus one greater.", "That's just by the optimal substructure or shortest path. Okay.", "Well, by the inductive hypothesis, because you have shortest path distance less than v one less in particular.", "The shortest path this is to you after the AI augmentation by the inductive hypothesis is at least the shortest", "path distance to you after the eye minus one if augmentation is just an application of the inductive hypothesis.", "At this point, we're going to consider a couple of cases in order to transform this into what we want.", "What do we want? We want to transform this expression. The first about this is to you after the timeline is one of augmentation plus one.", "We want to transform that into choice. About distance after the island is one of the occupation to V.", "We're going to consider a couple of cases and show that we can do accomplish that inequality.", "In both cases, our two cases will be whether the edge from you to me was in the previous residual network or was not in the previous residual network.", "Claim 1: Shortest path distances are", "increasing over augmentations", "\u2022 Inductive Hypothesis (IH). Suppose Ci(u) 2 (u) for all", "u e V with Ci(u) < Ci(v).", "Want to show: c i (v) (v)"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=16&isPrimary=false&absoluteTime=13355518380.518", "start_time": 2880, "end_time": 3039}, {"data": ["Case 1: u v e CJfL 1", "\u2022 Lets -9 \u2022\u2022\u2022 \u2014+ u \u2014i v be the shortest path from s to v in Gfi.", "We have:", "= i + I (Optimal substructure Of shortest paths]", "_ 1 (u) + I OHI", "\u2022 Case 1. Gfi_l", "Want to show: c i (v) (v)"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=17&isPrimary=false&absoluteTime=13355518560.518", "start_time": 3060, "end_time": 3063}, {"data": ["So that path was a shortest path. Our algorithm uses shortest augmenting paths.", "Then again, just by virtue of being a shortest path since the the edge from V to you was on this shortest augmenting you had,", "it must be that the distance to you is equal to the distance to the source.", "About distance to being plus one. That is the distance along this path.", "We'll plug in here again and substitute. And this time we actually get the inequality we want in plus two.", "But that's only better. Actually. That's right.", "This plus two is so, of course, greater than or equal to just this by itself.", "So in either case, we establish what you might call this rather technical level, but you'll see a couple of places.", "Crucially, it was important that we were computing short as augmenting paths or a couple of important little lines here would not follow.", "We can establish that these shortest at distances in the residual network can only be increasing over the course of the algorithm.", "Now, what we really care about is to try to go down the number of iterations in the algorithm.", "How to do this? I claim that each edge is going to be removed from the residual network.", "That happens when an edge gets saturated in a step at most and over two times that it can't just keep", "reappearing again and again and again and again and cycling around in an infinite number of iterations.", "Why is that? Consider an edge that is removed at some point.", "Let's say it's removed in this augmentation step on the residual ground after the the it's residual graph.", "If it's going to be removed again, then it has to reappear some time before it gets removed again.", "So let's say that it first reappears after that at some J plus one step J plus one excuse me, the residual graph where J is greater than I.", "So the first time it reappears after I let's say that happens at J plus one.", "Okay. When that happens, it must be the case that the U.S. was in the eye is augmenting path because it disappeared.", "It disappears precisely when it gets saturated. It gets saturated precisely when it is one of the bottleneck edges on an augmenting path.", "So if it disappeared in this from this, I have residual ground.", "It must have been the case that it was on that corresponding augmenting path.", "So we again, get our little optimal substructure claim about the shortest path.", "And the shortest path distance to be is that to you plus one because this edge from you to the it was along that shortest path.", "Case 2: u v e Gfi_l", "\u2022 Lets -9 \u2022\u2022\u2022 \u2014+ u \u2014i v be the shortest path from s to v in Gfi.", "We have:", "i + I (Optimal substructure Of shortest paths]", "_ 1 I OHI", "\u2022 Case 2. If u v e Gfi_l (but note above that u V e Gfi)", "then v -+ u was in the i'th augmenting path", "which was a shortest path in Gfi_l.", "Want to show: -e i(v) (v)"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=18&isPrimary=false&absoluteTime=13355518740.518", "start_time": 3240, "end_time": 3420}, {"data": ["Nothing is different except down here we have a much tighter handle on if we're you finding shortest augmenting parts here,", "then we know how many iterations this could take. In the worst case in the worst case it could take.", "And I'm over two iterations because at each step, at least one edge is being saturated and removes the residual network.", "Pulling it Together: Edmonds-Karp", "Runtime Analysis", "Assume n vertices, m n edges,", "01m)", "\u2022 To compute a max. flow, repeatedly:", "\u2022 Find a shortest augmenting path in the residual", "network with a breadth-first searc", "\u2022 Augment flow along the path", "\u2022 Update the residual netwo", "\u2022 Until no augmenting path exists", "O(m) to recompute.", "O(n) to iust update", "O (nm2) runtime", "(actualiv, If \u20221m)) as Our", "earlier analysis also still holds).", "At most run/ 2 times:", "At least one edge Ibottl\u00e9necKl", "removed pet \u2022augmentation,", "m edges iota',", "each removed at most n/2 times"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=3576&isPrimary=true&absoluteTime=13355519076.518", "start_time": 3576, "end_time": 3600}, {"data": ["Let me give you a few minutes to talk to one another, to ruminate a little bit more about this.", "We'll come back together to discuss not twice or three to think about your questions If you have them, take a few minutes.", "I was here since I was.", "Start. You know, I thought, you know, that was part of the expression.", "I used to do it all over the place here.", "Yeah. You know. Oh, yes.", "Oh, this is an excuse.", "Here we are.", "Yes. Because. Because you think this has been a really difficult.", "In-Class Exercise", "duke.is/5/kuh2", "Talk with your neighbors,", "Submit on your own.", "Graded for completion,", "not correctness."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=3669&isPrimary=true&absoluteTime=13355519169.518", "start_time": 3669, "end_time": 3780}, {"data": ["Yeah. I said, Oh, yes, absolutely.", "That's one of the reasons.", "Oh. We're going to take another three.", "Try to give us your best guess if you haven't already signed a $300 million.", "Yes, yes, yes, yes, yes, yes, yes, yes.", "I know. I'm just not that.", "All right. Let's take a look at these together. You might just quickly review some of these.", "These are relatively short derivations here.", "And then I'd like to show you one more thing before we finish today.", "First up, an augmenting path is a path from S.A.", "What about it? In the residual graph is correct.", "I can't read the residue in the residual graph along which you can increase the flow on some edges.", "If the correct answer this last one in particular, the forward edges.", "No. Wherever you have a reverse edge in your augmenting path, you end up decreasing the flow on an edge in the original graph.", "Nicely done. To consider running the algorithm,", "we were just analyzing in a sparse graph with inverses and oh and edges what would be the best bound that you could give on the runtime complexity?", "In-Class Exercise", "Sign in"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=22&isPrimary=false&absoluteTime=13355519460.518", "start_time": 3960, "end_time": 4086}, {"data": ["What's the best bound that you could give In this case?", "The correct answer is Oh, m this is done.", "This is an example where actually the previous analysis could be taken.", "If each edge has capacity at most ten,", "then the following cut s by itself has a capacity at most of that tension to be precisely at minus one, to be more precise.", "Okay. So the value of the maximum flow in this case will be bounded by at most of of n right.", "Excuse me. Not. Oh, I said open. I'm sorry. And that's what the maximum flow value is it most of.", "And the runtime you'll get will be O and M corresponding to plug in and for the", "maximum flow value and then for the number of the runtime of each iteration.", "In that case, sorry for the confusion. So sometimes this still might be the tighter bound to use.", "So you be aware of that. And I want to show you one more example where it may be the tighter bound,", "stions", "L19 Exercise (3/21/2024) \u2022", "Sym: results to Exca ror the web automatically and analyze with rmre \u00b1tail", "and flexibility.", "Conect", "results in", "In a dense graph with n vertices and edges. what is the best bound you can give on the runtime?", "C Ons i"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=23&isPrimary=false&absoluteTime=13355519640.518", "start_time": 4140, "end_time": 4230}, {"data": ["Maximum (Cardinality) Bipartite", "Matching Problem", "\u2022 Given an undirected bipartite graph", "LnR = \u00f8,", "\u2022 Compute a matching M C E Of maximum size IMI.", "Valid matching", "'Bigger Matching"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=4311&isPrimary=true&absoluteTime=13355519811.518", "start_time": 4311, "end_time": 4320}, {"data": ["I just want to give you an example of this is are many problems you can approach in this way, including some you'll be seeing soon.", "Reductions in Algorithms: General", "Reducing P to P'. If someone gave you an Algorithm", "A' for problem P', can you use it to design an", "algorithm A to solve problem P?", "input to P", "Convert A'", "to answer to P", "stea 3", "Input to P'", "Step 2", "Get A' (P')", "Total runtime = Step 1 + Step 2 + Step 3"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=4326&isPrimary=true&absoluteTime=13355519826.518", "start_time": 4326, "end_time": 4335}, {"data": ["for example, is the maximum flow you would get on this graph. This will take some run time.", "In this case, the best bound you could get would again be that.", "And for the same reason that the maximum flow in this graph is at most size of the vertex set,", "and I'll convert that maximum flow back to a maximum matching on the original graph by simply taking,", "as you might imagine, I'm taking all of the saturated edges in the middle between the left set and the right set is what that saying.", "It's a mathematical notation. Just take all of the edges in between the left and right, set the maximum flow saturated.", "This then is the matching that we'll use. We can get that set of edges in linear time.", "So overall the runtime is just dominated by the maximum flow computation, Right?", "So this is one way to solve if you know how to solve maximum flow to rather trivially", "solve the bipartite maximum cardinality matching problem just by a reduction,", "setting up a flow network such that if you compute the flow in that network,", "Step 2: Get a Max. Flow", "with Ford Fulkerson"], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=94be4ebd-7493-43f6-b36e-b13a013679ab&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=4431&isPrimary=true&absoluteTime=13355519931.518", "start_time": 4431, "end_time": 4500}, {"data": ["I if I, if there's no gaps, my algorithm works because what is it?", "I as in, like, if you, if you sort them and they're there's a gapped where you like a block interface here,", "everybody else here and nothing's on the cross. Yeah. I the where the algorithm is at.", "As long as you stick intervals, whatever this starts.", "So I usually don't leave it out like the one that the most important stuff.", "Hypothetically, there could be space. No, it's not feasible.", "Not. And you don't know. Right. So. So you would just pick the one that starts the next?", "Yeah, but my wife is like, I don't know.", "How do you. You could say, okay, there's nothing that can jump me to the next one.", "How do I get there? Since I'm not sure about your index?", "Yeah, but algorithmically, the idea is that if you're in one of these cases where you realize,", "like, the previous thing I selected extends, like, past anything else.", "Right. Do nothing. And then you go on to the next interview. Right.", "Or you can think about decomposing it before you do it. You ask me if I give you.", "You're saying like, I guess they're over here. Yep. Over here.", "Yeah. And before you do anything else, you could say, let me just divide the two independent problems.", "I was also think you could just say. Yeah. First of all, let me just figure out, like, the Independent suppose.", "Looks like it's all over here, you know, and it's not Windows.", "If you want to try to do this, this general problem that might have gaps to what you are thinking about, which is like a continuous range.", "You're that I was thinking like in terms of like run type of running forums,", "you would still only run the number of interval times, but you have to find where you have to start those.", "So from my."], "image": "https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=5dd907b5-e0f5-48bf-9e9c-b13a01365b7f&sessionPID=cd0b7ec7-bc2a-41c9-8a1b-b0ce014753e0&number=26&isPrimary=false&absoluteTime=13355520180.518", "start_time": 4680, "end_time": 1000000}]}