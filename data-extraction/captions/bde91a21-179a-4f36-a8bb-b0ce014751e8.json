{"data":[{"start_time":1,"end_time":135,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=0&isPrimary=false&absoluteTime=13350680701.032","captions":["I. And as much as.","Yes. You must.","Now. Great.","I. 123.1.","And ice cream.","On our watch."]},{"start_time":180,"end_time":216,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=1&isPrimary=false&absoluteTime=13350680880.532","captions":["34. One, two, three.","All right. Welcome back, everyone, to our fifth lecture in your favorite Calvin class.","And by his side, 331 You can tell me about divide and conquer today.","And first, a few quick announcements. Homework. One is due today."]},{"start_time":246,"end_time":318,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=1cfac60b-844a-488a-a7ab-b1020146c4bd&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=246&isPrimary=true&absoluteTime=13350680946.532","captions":["As an aside, you may have noticed, but I will explicitly mention to you the way that the course is kind of structured as a learning practicing loop.","So you will notice, for example, that what is typically happening is that in week K,","you are being introduced to new ideas in lecture and I hope in reading that in week.","Kate Plus one you are practicing the ideas from week K primarily in recitation and in homework assignments,","and you'll notice that that kind of cadence will keep up throughout the semester.","This is very intentional that I have curated all of these together to form a kind of tightly coupled","loop so that you're practicing very related things to what we're introducing the previous week.","And then when we get later on, not soon, but later to exam time,","that you're looking at assessment on the same kinds of things that you were practicing on.","So you'll have problems that will look extremely familiar to you from the practice that you've been doing.","That's very intentional and deliberate. Just to point that out in case it wasn't evident."]},{"start_time":360,"end_time":444,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=2&isPrimary=false&absoluteTime=13350681060.532","captions":["It is someone talking to you like someone talking to you. For the most part, it's rigorous and it's well-written, but it really is readable.","It's not a reference text that just sounds like gargling. It sounds like a real voice as a secondary suggestion.","If you want an additional or you don't like the arxiv perspective,","and if you're looking for a different recommendation, I'd recommend algorithms by Dasgupta,","Papademetriou and Irani, which I think is also a very nice, short readable book that you can find for quite cheap if you want to buy a used copy.","If you're looking for an additional perspective, I remember that though I try very,","very hard and I spent a lot of time to try to think of the cleanest and the best way that I can explain a given topic in our time here in the class,","our time is limited. I will not be able to do every possible example of every design technique, and moreover, no perspective is perfect.","So I will try my best to come up with a way of thinking about a design idea or an analysis analysis idea that is clean, rigorous and straightforward.","But that might not be the one that makes the most sense to you. So it is worth having other perspectives out there that you can look at.","And these are some that I recommend. Any questions about announcements before we jump in?"]},{"start_time":540,"end_time":564,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=3&isPrimary=false&absoluteTime=13350681240.532","captions":["And then we'll talk a little bit about how to analyze its complexity.","In particular, randomized complexity will derive a randomized version of the algorithm in order to analyze the expected performance of that algorithm.","And if we have time remaining, I have a bonus reel of some fun material for you on how to multiply things efficiently.","We'll see if we get there first."]},{"start_time":720,"end_time":891,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=4&isPrimary=false&absoluteTime=13350681420.532","captions":["After we made the recursive calls we had extra work to do. But if you partitioned this way ahead of time,","you think about it for a second and then we recursively sort the left and the right sides from the pivot.","We're done. That's it. There's nothing to do afterward.","So quicksort, by contrast. Extra work before rehearsing to partition the array into the smaller ones on the left.","The larger ones on the right then, is to sort those two parts of the array and then it's done.","The array is now sorted and as usual you might have questions like,","but how do I recursively sort that turns out to be not the most helpful question for the algorithm designed from a recursive perspective,","since that is a problem of precisely the same form as sorting the larger array,","we're going to abstract that problem away and trust the recursion fairy, or if you prefer, and what you actually do, make a recursive call to do that.","That is to say the hard part. What we actually do need is to come up with an algorithm for partition.","Just like Merge sort says that we can sort of recursively reduce the problem of sorting to the problem of merging two sorted arrays.","QuickSort says. I can kind of reduce the problem of sorting to this problem of partitioning an array around a pivot, but here,","once you do that is the not too complicated pseudocode of one quicksort implementation expressing the same ideas.","If you want to sort the elements in an array from l to arm if l is less than R,","that is to say there's actually something more than a single element to sort then partition the array,","sort everything left to the partition, sort everything right of the partition.","In this syntax, I'm having the partition function return the index of the pivot so that I know where in the array that","is and I can sort the things to the left of it and then sort of things to the right of it recursively.","Which questions about the idea of QuickSort.","Yes, please. You talk about choosing the event like, would you just how do you do that?","I will assume it's better to do it. So the question is, how do you choose the pivot?","And the answer is, I'm going to punt. We're going to talk about this at some level of detail for the time being.","Let's just say we always choose the last element of the array or the first element or whatever your preferred preferred element in the array is.","So we'll leave the kind of arbitrary for now. When I think about this partition procedure.","I'll take the last element of the array as the limit for the time being.","We'll come back to this. Okay, So we need to think about developing a partition procedure."]},{"start_time":900,"end_time":933,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=5&isPrimary=false&absoluteTime=13350681600.532","captions":["I want to partition the array so that the smaller elements are then before the pivot and the larger elements are then after the pivot.","Here's an example. They don't necessarily need to be sorted within those sets.","How will I do this? There are a couple of ways to write a partition procedure.","Let's start with the easier way. Arguably, the simpler way.","That is a little bit less efficient. This, by the way, is something that I want to emphasize generally."]},{"start_time":1080,"end_time":1206,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=6&isPrimary=false&absoluteTime=13350681780.532","captions":["The only downside, of course, is that we used additional memory.","Sometimes I call this auxiliary memory. That is to say, in addition to the array, we also needed to keep track of lists.","Potentially, we're using a linear amount of extra memory.","Okay. We're about to write about as much memories. We need to store the array itself.","We're potentially using that Again, that probably isn't a big deal for most applications of sorting on most machines today,","especially if you're sorting small things like integer.","When you have an extremely large amount of memory, however, it might be interesting for you to ponder.","I've already shown you the merge sort algorithm, which is an older algorithms in quicksort.","It's an efficient sorting algorithm. It's relatively easy to implement.","So why would there have been another why were people interested in developing another efficient sorting algorithm?","Well, it turns out back in the day, one of the primary motivations for QuickSort instead of merge sort was to not have to use this additional","memory overhead when machines were extremely memory bound in terms of how much working memory they had.","That might still be of interest to you today. Probably not if you're sorting integers,","but potentially if you're sorting very large elements that take up a lot of space in memory and you say, Well,","I can fit the array itself, maybe that takes three gigabytes of memory and I've got four on my machine,","but I can actually fit twice that in my machine.","Okay. That's one possible motivation for a QuickSort style approach where we're going to try to move beyond this to","further optimize this partition algorithm to sort in place meaning or excuse me not to sort to partition in place,","which will lead us to a QuickSort algorithm that sorts in place,","meaning that the partition is going to take place on the same input array without creating extra lists or anything like that.","That will be our challenge and it is the way that you will most typically see QuickSort implemented or used, right?"]},{"start_time":1260,"end_time":1440,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=7&isPrimary=false&absoluteTime=13350681960.532","captions":["In particular, I'm going to go from the left to the right and I want the smaller elements on the left.","I'm going to use P to try to store like the next available position to swap a larger element to.","I want to swap larger. Excuse me a smaller l and I would stop smaller elements earlier in the.","That's how I'm going to think about it. With again the pivot being this last element of the array.","Let's think about some possible cases as we work a small example by hand of what might arise as we iterate over the array.","And I'd also recommend this as an approach.","When you're trying to design an algorithm for a problem is often it can be helped to look at a small example by hand","and go through a few steps of the possible cases you might encounter and attempt to generalize some ideas from that.","That's can often be a helpful thing to do. So let's do it at the beginning.","If I initialize both of these at the beginning of the array,","the element I'm looking at is less than the pivot, so I don't necessarily need to do anything.","I can just increment in particular, I'm going to increment i n increment I because I can just keep on looking through the array.","I don't need to move this element. I'm going to increment P because I don't want to swap anything potentially to this position.","This was fine. I want to move forward for where I might swap something to.","Again, three is less than the pivot, so I'll just keep going through the array.","Here's an interesting case. Six is greater than the third.","Okay, so I'm going to increment just I potentially I'm going to want to swap something","back down to this position with a six if I find something smaller in the future.","This position with the six is the first position I found where I might want to swap something smaller back.","So I'm going to park my P index here until I have such an opportunity.","That'll happen on the next iteration of our loop with respect to our index by two is less than the pivot.","So and I've got somewhere to swap it to.","What I'm going to do is to swap it back to the position where six plus I'm going to swap the values at Key and I and then increment both moving along.","So after I do that, the picture now looks like this. On the next iteration.","Five is greater than the pivot. There's nothing to do here.","I'm not going to incriminate here. I'm going to keep the part. And now I've gone through the entire array.","At the end, I want to do something extra, right? Because I didn't want smaller elements, Larger elements pivot.","I wanted smaller elements, heavier, larger elements.","So at the end, I'm going to swap. I am P And then I also wanted to return the index of the pivot.","So I'll also return key at the end. This is just brainstorming for the time being."]},{"start_time":1464,"end_time":1518,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=1cfac60b-844a-488a-a7ab-b1020146c4bd&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=1464&isPrimary=true&absoluteTime=13350682164.532","captions":["I don't expect you to copy down all of the pseudocode immediately or anything like that.","You can see a different version of the pseudocode in Erickson's text for the reference for this week.","What I'd like to do is to try to reason about the correctness of this optimized form of QuickSort starting from partition.","Just another reminder whenever you have the case of an algorithm that uses another algorithm as a helper,","if you want to argue correctness or analyze runtime, you start with the helper.","The helper does not depend on the main algorithm. The main algorithm does depend on the helper.","So we'll start actually with partition, analyzing partition.","Let's think about correctness. First, we'll come back to discussing the issues of runtime that have already been raised later."]},{"start_time":1620,"end_time":1800,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=9&isPrimary=false&absoluteTime=13350682320.532","captions":["I was maintaining the property that he was keeping track of.","The end of the smaller part of the array I had dealt with so far,","everything before P was smaller than the pivot that turned out to be one of the properties I was trying to maintain.","I'm calling that P What I've written in that is to say that all of the elements from l l was the left end of the range that were partitioning.","Up to and including P minus one should be smaller than the pivot.","Okay. The second property, maybe this wasn't as obvious that we were maintaining this, but we needed additional property.","The additional property is that the gap from P to I, wherever we're examining currently in the array are all larger, greater, equal values.","Why was that important? It was important for the logic of this loop because if I find a larger element, which is a smaller element in me,","if I find a smaller element, look at line four, I'm going to swap it back to p I.","I'm going to slot he further ahead in the array.","I had better be swapping a larger element further ahead in the array.","He was keeping track of that. This gap between Part II is exactly the larger element we found so far.","A different perspective on why these were the right set of properties is to ask if","this is something that we're trying to show is true at the end of each iteration.","What does this imply will be true after the end of all of the iterations?","And is that what we wanted to prove at the end of all of the iterations?","Note The last iteration is when is equal to R minus one. That would mean that everything prior to P was smaller than the pivot.","Remember, we're going to put the pivot at P, so that's good.","And then everything greater than P two are minus one because I ends up at R, minus one is greater equal to the pivot.","So indeed that that is actually what we wanted to show we wanted the partition procedure to do.","Let's do some diagrams and think about these cases. I'm just going to look at the inductive step.","And what the inductive step essentially is doing is saying, suppose that these properties are true at the end of one iteration.","Let me show you. They will be true at the end of the next iteration.","That's the structure of the inductive argument.","So suppose at some point over the course of the execution of this algorithm, and here's a picture that at the end of one iteration,","these properties are true, that everything prior to P is smaller than the pivot, and that this range from P to II is greater equal to the pivot.","O its question is are just the index or is just the index of the pivot."]},{"start_time":1980,"end_time":2016,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=11&isPrimary=false&absoluteTime=13350682680.532","captions":["but these are the ideas are the questions about these ideas of the two persons or about the structure of this argument.","And let me point out to you again, I did not use the words induction, but I am making an inductive argument.","What we're looking at here is the argument in the inductive step of a formal proof by induction.","But even if you're not writing a formal proof by induction, this is the reasoning one must engage in to derive the correct algorithm.","This is important nonetheless. How then, do we use this?"]},{"start_time":2160,"end_time":2313,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=12&isPrimary=false&absoluteTime=13350682860.532","captions":["Let me show you what would be true of these two arbitrary indices.","There are three cases. I'm going to try to divide this into three exhaustive cases.","On the one hand, it could be that I and J are both before the pivot.","Okay. That's one possibility. If they're both before the pivot,","then this comparison holds correctly because left of the pivot is correctly sorted after the recursive call on line for by the inductive hypothesis.","And we're assuming that QuickSort correctly solves the smaller sub problems.","You can probably guess the next case. J and I could both be to the right of the pivot.","In that case. Again, the comparison will hold due to the recursive call online five by the inductive hypothesis.","This in the argument lines one and two here in the argument is where we are trusting the recursion very, if you like to think of it that way,","assuming that a correctly small piece of smaller sub problems and showing that that will lead to us correctly solving larger problems.","The third case you may be thinking has something to do with partition because I have not mentioned partition yet.","And you be correct. The third case is, of course, when one index is on one side of the pivot and the other index is on the other side of the pivot,","where they're not both in the same side of the partition.","In that case, the inequality holds by what we proved about partition, by what we proved about partition,","all of the elements to the left have to be less than or equal to the pivot.","All of the elements of the right have to be greater, equal to the pivot. Okay.","Yes. QUESTION In this case, is there a reason that we're saying is strictly less than j in no time?","Clearly, that's what you wish to show. And I got to start in the inductive.","And what we want to show why said less than equal to my less than J.","Yeah, but I'm just avoiding for a sorted array.","I don't need to really say anything about the same elements compared to itself for the array to be sorted.","I'm saying it's sufficient for me to just argue about distinct biases. That's why.","Perhaps you trust me. Perhaps you think there's a bug in this argument.","Perhaps you think this is a good algorithm. Perhaps you think it's inefficient and should be optimized further."]},{"start_time":2340,"end_time":2520,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=13&isPrimary=false&absoluteTime=13350683040.532","captions":["Oh yeah. Oh yeah.","Oh yeah.","Yeah, yeah.","I think I lost my house during the first season.","I just wanted to say what are we saying right now?","If you get as much.","I just feel like. Sort of like.","Right. Yeah, that's.","I think every time I feel like.","There's nothing quite like.","Thank you, sir. Oh, yeah.","Okay. Yeah, yeah, that's right."]},{"start_time":2700,"end_time":2880,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=15&isPrimary=false&absoluteTime=13350683400.532","captions":["Sorry. Oh, that's.","Five. Take one more than you.","Give us your best guess. If you have a hard time figuring out.","It's a great lesson, one that this program has made for every school.","I don't think you're wrong.","And the logic. Therefore, I point out that.","All right, let's come back together. The other one. I can't help but think through some of these.","The first question I asked you with the quick sort procedures still be correct If we instead, like in Mercer,","split the recursive calls around the middle of the array and actually did the partition procedure after the recursive calls.","See what you thought. Most of you believe no, it would not be correct.","And you are right about that. Would not necessarily correct.","You think recursively. Suppose you quicksort the left in, quicksort the right.","Suppose that even worse, the left having the right have for both sorted.","Now it was like run the partition procedure with a sorted left half of the array in a sort of write up in the array.","Does that mean the resulting array is sorted? Unfortunately not.","The merge procedure would need to be the merge procedure we considered from merge sort.","And by that point we've done merge sort again. In the proof of correctness for the partition procedure."]},{"start_time":3060,"end_time":3240,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=17&isPrimary=false&absoluteTime=13350683760.532","captions":["Correct. Answer is in log in. The greens have it again. The best case is in.","Log in because the best case happens when the partition happens to split the array roughly into two equal halves.","If it does that, then the recurrence characterizing the runtime turns out to be the same as merge.","Sort in log n will be the solution. On the other hand.","What do you think is the worst case runtime complexity of quicksort? Is it the same or merge?","Sorting is the same here.","The reds have it. Indeed. The worst case is worse is quadratic complexity.","This happens when I look at this in a moment.","If the partition happens, if the pivot that's chosen the last element of the array, but then the chosen happens to be like,","let's say the minimum value of the array, then you're not going to end up with an equal split into two halves.","You're going to end up with your pivot and everything else.","Okay? And that'll give you a recurrence. The solution to edges Quadratic.","Well done. Are there questions about these exercises?","Yes. When you talk about best case, I think we.","We were maybe a little too optimistic. We assume the best case was that was already sorted.","So you would assume you wouldn't make that assumption. Interestingly, we're going to look at this in just a second.","And perhaps ironically, the worst case for this algorithm is a sorted array.","Unless and I suspect this is what you were thinking of,","that I have some clever wrapper routine that first checks if an array is sorted and only then tries to call a rhyme.","But if you just call quicksort, that will be the worst case. Yeah. In its a question and answer questions.","Here is what it means for the third iteration.","Okay, so let me start with two three. I'm going to revisit and slides in a second.","So they come back to that for two. Here again, the question was what is the difference between what we argued here in the induction,","if you wanted to, and this final picture that we had for our Lemma statement.","The difference is that this says something about where the pivot is in the array, which we didn't have necessarily just from these.","What was missing in the argument, which is a small thing, was simply to observe, Oops, it's freezing.","There we go. Simply to observe that it's actually after the loop and thus after the induction part of the argument that we swapped the pivot,","which we're using the last element of the array as the pivot, that we swap it to position key."]},{"start_time":3249,"end_time":3261,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=1cfac60b-844a-488a-a7ab-b1020146c4bd&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=3249&isPrimary=true&absoluteTime=13350683949.532","captions":["a randomized implementation of QuickSort."]},{"start_time":3348,"end_time":3375,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=1cfac60b-844a-488a-a7ab-b1020146c4bd&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=3348&isPrimary=true&absoluteTime=13350684048.532","captions":["the recurrence is we make a recursive call to the left, to the pivot and a recursive call to the right of the pivot.","Plus, we have to do a linear work in the partition procedure.","Okay, so that's a little bit more annoying to analyze, which is why I'll think about a couple of extreme cases here.","First, I'll think about the best case."]},{"start_time":3420,"end_time":3600,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=19&isPrimary=false&absoluteTime=13350684120.532","captions":["But the best case would be if we continually get lucky and the last element happens to be the median.","If that happens, then the recurrence characterizing the runtime is the same as the merge sort recurrence,","and we get the same asymptotic solution of a nearly linear runtime of and log in.","However, as has been pointed out, in the worst case,","if we happen to select like the minimum or like the maximum as the pivot, like if this was our input,","that's less fortunate because then we're going to end up doing is have nothing we rehearse","on on one side of the pivot and then we rehearse on everything else on the other side.","So we don't make a whole lot of progress towards the base case. You'll recall from our discussion earlier that they can rapid progress towards the","base case is one of the hallmarks of an efficient divide and conquer algorithm.","That's rather unfortunate. Run to the recurrence that characterizes if we keep getting unlucky again at every step.","It could be as bad as this. If the array, for example, was let's say, pre sorted, we're very close to sorted.","Note that it would still be very bad even if the array is sorted up to a few swaps.","Right. Can we get quadratic runtime complexity?","And we already knew a host of quadratic complexity sorts, so that's no good for us.","What's the point? They claim this was quicksort. What a node name for your algorithm.","By the way, I recommend the next time you design an algorithm and you think to yourself, Hmm, is this fast?","Just call it quick. Whatever you mean. It's always good to have.","How do we deal when we're designing and analyzing algorithms with an algorithm that is very efficient in the best case,","but very inefficient in the worst case? And we have some vague intuition that most of the time, empirically, it's probably fine.","Okay. You know, another example of an algorithmic technique that has that property is called hashing.","In the best case, you support constant time operations in a hash table, and worst case, they take linear time and you're getting no benefit at all.","You have some vague sense, but empirically, most of the time it just works fine.","So we think probably the average case is closer to the best case than the worst case.","We find ourselves in the situation again in most of those cases.","If you want to make formal your intuition that the average case is probably better.","More like the best case than the worst case. Randomization very typically comes in in one of two ways.","One way which you saw in your first homework assignment or will see if you're starting your homework after class today, I hope is not the case.","One way to analyze this is with respect to an assumption about the inputs.","For example, to assume that the input is random in the case of QuickSort, that form of the assumption would be to say,","well, what is the expected runtime complexity of quicksort if the array is randomly shuffled before you run quicksort?"]},{"start_time":3723,"end_time":3780,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=1cfac60b-844a-488a-a7ab-b1020146c4bd&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=3723&isPrimary=true&absoluteTime=13350684423.532","captions":["Let's make that a little bit more formal. We only actually have to make a small modification to our partition procedure.","Everything in black is the same as the previous partition procedure.","All that modified is written in red, which is First, I'm going to sample one of the indices in the range uniformly at random.","I'll use this tilde to denote sampling. So choose an index from LCR uniformly at random.","You've got ten elements. Roll it inside a die and pick your favorite one.","Then just swap whatever that was to the end of the array, and then you can run the same procedure as before.","Just because I didn't feel like rewriting the procedure. Think you can reduce it in this way?","That's algorithmically. All it takes. What difference does it make to the runtime analysis we're going to do?"]},{"start_time":3825,"end_time":3960,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=1cfac60b-844a-488a-a7ab-b1020146c4bd&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=3825&isPrimary=true&absoluteTime=13350684525.532","captions":["Our absolute worst case, if we're not doing any expectations over any possible outcome, could still be really bad.","But what we would argue is that the probability of that really bad outcome is extremely","small and thus that the expected or the average runtime is closer to log in.","And we will argue that it is in log in the expected runtime.","Yes. Question Is this recognition of complexity? Do people use randomized algorithms?","Yes. And if you want to implement QuickSort and not make assumptions about the input, you should choose a random period.","There are other methods as well. Indeed, the deterministic method for choosing an optimal pivot, which is to choose.","It's called the medians of medians trick. If you find this interesting, I believe there's some text about it in the Ericsson book.","It's substantially more complex, but it provides a deterministic worst case guarantee.","It's typically not used in practice because the trick to calculate the medians of medians as much higher constant overhead than just picking a random.","So what is the expected run time? Remember the definition of an expectation of a random variable.","The runtime is now a random variable of our algorithms.","It depends on what we end up drawing as the difference.","The expectation of a random variable for a discrete random variable you can think of as being the weighted","average of the value of the variable weighted by the probabilities that it takes on those values.","It is thus, in a very proper sense, the average value under a probability distribution.","We're interested in the runtime, so we're interested in summing over possible runtimes of the runtime times, the probability that we get that runtime.","In the abstract, how would we then try to actually calculate something?","Well, let me think about unraveling it as a recurrence again for a moment and think about what are the probabilities,"]},{"start_time":4140,"end_time":4320,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=23&isPrimary=false&absoluteTime=13350684840.532","captions":["By how much? Well, I'll say that around is lucky for this particular element.","If the size of its active sun problem from one round to the next one level of the recursion to the next decreases by,","let's say, a factor of three fourths.","Okay, a geometric factor, a multiplicative factor, not like a decreased by one or two, but a decreased by a multiplied factor.","Let's say three fourths. Why did I choose three fourths?","Because I claim actually that a given element has a lucky round with probability one half,","meaning it's got a reasonably good chance of having a lucky round.","A lucky round means the size of your sub problem as an element decreased by a pretty large amount.","Why is that?","Well, the probability that your random pivot is chosen between the 25th percentile and the 75th percentile of the elements in your array is one half.","It's chosen randomly. The probability that it'll be in the middle half of the elements is probability one half.","Okay. And if that happens, you've got a lucky round for all of these elements.","Actually, you've got two. In other words, think about it more intuitively.","You get a reasonably good split. If this happens, you may not have gotten the exact median, but you've got a fairly good split.","So now the question is, I'm still thinking about an arbitrary on an ax.","How many rounds can it participate in? How many lucky rounds can it participate in?","It can't participate in an arbitrarily large number of lucky rounds because the size","of the sum problem shrinks substantially towards the base case in a lucky round,","just like if the size of the problem was decreasing by a factor two at each round,","you can only have at most lot these two rounds of again, that was how we would reason in merge or binary search etc.","Well, if in a lucky round now the geometric factor is three fourths instead of two, you can only be in log base 4/3.","And if you're like 4/3 and what? Forget about the 4/3, it's just log of in because these are all going to be asymptotically equivalent to logarithms.","It's a log of some constant base of DN rounds.","Before you get down to a base case, you can only have a logarithmic number of lucky rounds for a given element and","you have a lucky round with probability half is reasonably likely to happen.","Okay. If I'm flipping a coin, heads or tails.","Those outcomes come up with probability one half. How many rounds do I expect to need before I get a given number of heads?","Twice the number because the probability of getting a heads is one half."]},{"start_time":4500,"end_time":4680,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=a488b2c3-4343-46a6-bd7d-b1020146aaa3&sessionPID=e8de3b46-c205-41d2-b7c7-b0ce014751e0&number=25&isPrimary=false&absoluteTime=13350685200.532","captions":["Think about it. I flip a coin, I get a heads with probability one half. If I want 100 heads.","How many coin tosses do I expect to have? Two times 100.","That's where that's coming from. We'll stop there for today. I've got a bonus reel.","I'll leave it in the slides. You might find it interesting. I might mention it later.","Take care, y'all. Thank you. And.","This is what is happening to.","He's very vulnerable. So I'm just coming over all the time over the next couple of days.","I guess that's where I am now.","I don't really write about. And that is why that every time that an element, you're going to be asked about the number.","If this partitions wouldn't make sense. Partition?","Yes. All right. Get me over here. Oh, yeah, yeah, yeah.","I had a moment. I think. You know what? Actually, I agree.","Um, I did try to convince myself. Oh, yeah, It makes sense for each element.","How many levels? Look here. And I think that's, like, a valid way of factoring the total works.","You know, I have no idea where you want to think about it in terms of comparisons.","And also, I'm not too sure about the points that go with the allergy that game.","It's it's a coin. It's quite a 50, 50, 50, but then it's zero or one 5050.","This one is if it's if if it happens, this is zero one.","I just think lucky is one. Fine. The random variable we about where it takes on the value one.","Yeah. This property looks zero. Yeah. I'm lucky those two things happened 50 times.","Right. But then if it's zero. Yeah. How do you know? Only wouldn't you have to analyze that with the case where it's not one piece and then you,","you find the value that we can infer that the probability of it not being.","I make no assumptions on what happens when it's not like I'm actually being pessimistic in some ways.","So I'm saying even if only unlucky around, we make no progress, which is pessimistic.","So in that case, I think even only thinking about lucky rule.","Yeah, yeah. I still only expected to take this many. So the real value would actually be somewhat small between, you know, the real expected value."]}]}