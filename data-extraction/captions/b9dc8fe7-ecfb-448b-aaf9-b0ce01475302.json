{"data":[{"start_time":1,"end_time":72,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=0&isPrimary=false&absoluteTime=13353704701.018","captions":["Earlier this week we got.","So I was always very.","It's. You're right.","Right. And I think the girl is Mr. and Mrs. Charles checking everything you.","How do you feel about it?"]},{"start_time":162,"end_time":180,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=162&isPrimary=true&absoluteTime=13353704862.518","captions":["Let me start with some announcements as usual. First is that because spring break doesn't actually come midway through the semester,","we have one more homework assignment, the last homework assignment before spring break.","That's homework six on shortest path materials that should be available on canvas now and is due next Thursday as per usual."]},{"start_time":225,"end_time":303,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=225&isPrimary=true&absoluteTime=13353704925.518","captions":["Here's what we're gonna do today. I'd like to wrap up our conversation from last time about dynamic programing techniques for shortest paths.","We talked a little bit about Bellman Ford last time.","I'd like to say a bit more about Bellman Ford today and also to introduce the Ford Warshaw algorithm, which should be an extra L.","Oh, well, virtual lost an L today for the second part of our class.","I'd like to do a little bit of midterm debrief, and they'll have a couple of components.","One is I want to share with you a few results from our Mid-semester survey that you all completed.","Obviously, I will not be sharing individual personal comments for the sake of privacy,","but I will share some of the overall aggregated average kinds of results.","And then I'd also like to review the midterm exam. So we'll look at the problems and I'll tell you about the ideas behind the solutions.","And then after class, I'll upload, for example, solutions for the exam for you to review before we release grades.","I will not be discussing grades here, nor will I discuss graded from the exam after this because we have not finished grading them.","I will be happy to have conversations about grades if you would like to after the exam has been rated and released."]},{"start_time":360,"end_time":540,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=2&isPrimary=false&absoluteTime=13353705060.518","captions":["to re parameterized it by the number of edges included on that path and to solve that broader problem.","And we developed an algorithm that computed that recurrence,","the form of the algorithm that you would probably most straightforwardly write if you had that recurrence.","You identified an iteration order and you wrote down an algorithm to compute those sub problems.","But that is not actually the form of the Bellman Ford algorithm that you will most typically see written.","For example, in a textbook or on the Internet. You will more often see it written in this form, which is similar but a little different.","The main difference is that this is space optimized.","Okay, The previous the straightforward way to write the Bellman Ford algorithm ran in quadratic over name time,","but it also required quadratic of name space, whereas this formulation is space optimized.","And what is this saying to do? This is a very shorthand pseudocode.","This first part is just I'm going to write in one line, Do all of the usual initialization.","By the usual initialization I mean initialize the table to store distances,","initialize a table to store a previous or predecessor or a back pointers to store the paths themselves.","Initialize the distance to the start node to zero and initialize the distance to any other nodes to infinity.","Whether you do that implicitly or explicitly. So the usual initialization the same thing that we've done for the home, for read first,","search for Dijkstra's algorithm, etc. And after that we're going to repeat the minus one.","This is Erickson's notation. It uses d sometimes with the number of vertices rather than end.","So repeat the v vertices repeat v minus one times so roughly the number of vertices and on","every our loop iteration examine every edge in the graph and check the following condition.","If the edge is tense, that is the word you'll see often in textbooks, for example.","That is just a shorthand for this condition.","This is the same condition that we saw in Dijkstra's algorithm, similar to the condition read first search as well.","If the edge is tense, meaning that the current estimate of the distance to be the successor along that edge is greater than the distance,","the estimated distance to you, the predecessor along that edge, plus the weight of that edge.","Then we want to make an update. Why?","Because we've discovered a shorter path to get to V in particular, that one that goes to you and then takes the edge from you to V.","Okay. In that case. We will relax this ad, which is just to say, to update the shortest path to the.","Correspondingly, setting the distance to V. Now to be the distance to you, plus the way of the edge from you to me.","Now that we've discovered this shorter path to often as is written as the condition as tense and the update as relaxed."]},{"start_time":720,"end_time":774,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=4&isPrimary=false&absoluteTime=13353705420.518","captions":["Well, if you think about a simple path that doesn't involve cycles, meaning it doesn't look back to a vertex it's already been to before,","it can traverse at most n minus one edges before it has to hit a vertex.","It's already seen before and entered a cycle.","If doing so reduces the shortest path distance, that cycle must have negative total weight.","Right? Otherwise, traversing the cycle wouldn't have reduced it as sort of the logic here.","This way of writing going forward that you'll typically see still has quadratic overhead in runtime, but as I said,","is space optimized to only need linear of GN memory just for the distance in the previous tables, for example.","So it's a little bit more memory efficient. And that's the main reason why you typically will see a written this way."]},{"start_time":831,"end_time":900,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=831&isPrimary=true&absoluteTime=13353705531.518","captions":["This edge from s to a is tense because the distance our previous estimate of the distance to A was infinity,","whereas the distance to s was merely zero, plus the weight of that edge was six.","Six is certainly less than infinity.","So this edge was tense, and when that edge is tense, we will relax it, meaning we will update the distance to that eight node to be six.","The distance to spot plus the weight along that edge, which was six.","And we will store that the shortest path we've detected so far. Getting to a comes from s next we'll consider the edge from has to be.","This edge was also tense because again our previous estimate of distance to view was infinity.","And we'll make the same updates.","Next we're going to consider the edge from A to B is a negative edge weight, which means that something kind of interesting can happen.","It looks counterintuitive that in this case it can be faster to get to me by going from S to A to B,","even though the edge from S to A is heavier than the edge from S to be directly."]},{"start_time":963,"end_time":1080,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=963&isPrimary=true&absoluteTime=13353705663.518","captions":["Okay. Though you will notice that the outer loop says that you might have to repeat this again.","V is what Erickson will typically write corresponding to the size or the cardinality of the vertex set.","I will often write that and as well that you will repeat and minus one times","examining all of the actually you will consider every edge and minus one times.","But it is entirely possible in the execution of the building for it algorithm that you do not need.","That many iterations of the outer loop is entirely possible but not guaranteed.","So there's a more sophisticated termination condition.","This is the way you will typically see the dominant word algorithm written in pseudocode.","This is not how you should implement it in actual code. In actual code, you should be checking after a complete iteration of the outer loop,","meaning after a whole cycle of I considered all of the edges in the graph.","If none of them were tense, then you are done.","If you can see if you got a whole iteration of the outer loop, you considered every single edge in the graph and not one of them was tense.","You can stop, right? It should hopefully be very straightforward to see that if you go an entire iteration, none of the edges were tense.","Then you don't update anything. If you don't update anything, then none of the edges will be tense in the next iteration,","which means that you're not going to do anything the entire remainder of the algorithm, which means you can go ahead and stop it.","And that may happen or may not happen in certain cases, right?","Questions about the Bellman Ford Alvarez. Now we're going to Trace and talked about it a little more.","Yes. Last month. Guarantee that the weight is negative.","Yes. For basically saying no. What about checking up on my parents there?"]},{"start_time":1197,"end_time":1260,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=1197&isPrimary=true&absoluteTime=13353705897.518","captions":["Let me just remind you about the negative cycle condition and show an example in case this is helpful.","So here's a cycle with two nodes and two edges. Two directed edges are not every edge in this cycle has negative weight, but the total is negative.","So if you go from A to B back to eight, you get a minus two and a positive one for a net of minus one.","If you do one outer loops, you consider both of these edges, then your distance estimates will look like this afterward,","from a distance, from A to B is minus two along that edge, and the distance from A to itself is actually minus one.","It's actually faster to get to A from itself by leaving A and coming back.","Negative edges can be a little bit strange in that way.","But if you consider an additional iteration of the loop, if I consider one of these edges again, you'll note that they're still tense.","For example, the edge from A to B, although our distance estimate to be is minus two, our distance estimate to A is minus one, minus one,"]},{"start_time":1293,"end_time":1440,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=1293&isPrimary=true&absoluteTime=13353705993.518","captions":["Let's talk about going forward with one another. Take a few minutes. Turn to your neighbor.","Think through these three questions. We'll come back together about 5 minutes.","That's what I thought was just kind of.","All of this hospitals and community leaders are actually trying to fight.","That might be one of the things I want to do is say we're going to have a real.","That's sure. So I feel like I.","I don't think I was confused.","Was waiting for this moment.","I'm so sorry. Thank you so much.","You know. He has a contract partnership with some money.","And the reality is that you have to pay for.","So. What is your assessment?"]},{"start_time":1620,"end_time":1719,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=9&isPrimary=false&absoluteTime=13353706320.518","captions":["40 years, health care for hundreds and hundreds of millions of people like you or my.","I think it was the first time I ever heard.","Just tell what you think.","You're nodding your head. So I. Yeah.","Oh, my goodness. You know, that's how you know.","I don't know. All right.","Let's take a look at these together. Right."]},{"start_time":1800,"end_time":1872,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=10&isPrimary=false&absoluteTime=13353706500.518","captions":["So you look at this edge over and over and over and over and over again, but you still end up leaving the distance to T and infinity.","And then you consider these edges, you'll actually still have t the distance set to infinity.","Okay. If you think in terms of the dynamic programing formulation,","you can't swap these order because of the dependency of the sub problems in your recurrence,","the dependencies of the sub problems and your recurrence was on the same sub problem using at most one fewer edge.","So you can't swap this order of the dependencies.","The second question. Suppose you were told that all of the shortest paths from Earth use at most ten edges.","Does this change the runtime in which you could implement the Bellman Ford algorithm?","We're somewhat split on this one. Is this perfectly equal?","No, it's not perfectly equal. So the most common answer is the orange.","Yes, you could implement it in all of m time.","And that is correct. You would change the runtime you could implement and then you could implement it.","No of m time. In that case, review the parameters."]},{"start_time":1980,"end_time":2157,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=11&isPrimary=false&absoluteTime=13353706680.518","captions":["Now, it turns out in this new graph, the shortest path would, I believe, go as to be two T for a total of eight plus seven is 15.","But in the original graph this was the one we did in the example in lecture.","The shortest path was to go from S to A to B to T, which after the modification,","however, adding four to every edge would have ten plus one is 11, plus seven is 18.","So adding the same number to every edge in the graph can change the shortest paths in the graph.","It is not necessarily preserve the paths themselves,","so it would not necessarily this algorithm or this idea of the modification","is not guaranteed to give you correct shortest paths on the original graph.","Unfortunately, there is a strategy that is related to this idea that is correct is called Johnson's algorithm.","If you are interested. It is it is mentioned in Ericsson's text.","We're not going to go over it in great detail today. It starts by running the Belmont for algorithm, interestingly enough,","but it can be used to efficiently compute all pairs shortest pass using an idea not dissimilar to this,","but a little bit more complex questions about these exercises.","Yes, I said on the streets afterwards, the opposite of what you see, I.","You. So he did it, said, you know, we didn't see what's correct.","So the algorithm is not correct.","This modification will not give you the original shortest paths in themselves, nor necessarily the shortest path distance on the original graph.","It seems. That's right.","So you would get six for the path as a b t, but if you ran Dijkstra's on the transformed graph,","it would not recover the path saved as the shortest path.","It would tell you the shortest path is SBT So you'd be back where you started of still not actually knowing what the correct shortest path is.","Exactly. All right.","Robin Ford is a very nice, dynamic programing algorithm.","You may agree with me. You may not agree with me. You don't have to agree with me.","But maybe some of you agree with me that that a programing is possibly the most elegant way of deriving correct algorithms.","If so, you might agree with me that actually the going for it algorithm is the most natural shortest path algorithm.","I happen to hold that belief, particularly in the more explicit form rather than the space optimized format.","However, it is not the only shortest path algorithm using dynamic programing of interest that I want to discuss."]},{"start_time":2160,"end_time":2340,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=12&isPrimary=false&absoluteTime=13353706860.518","captions":["I do want to briefly consider the problem of all pairs.","Shortest paths. We know the usual shortest path problem from a given source.","Vertex asked to a given target. Vertex T We know how to solve the single source shortest path problems of starting from a source vertex","as calculating the shortest path to all possible other vertices in the all pairs shortest path problem.","You want to bring compute for every pair of vertices, the shortest path between them.","So for every you in the graph, for every B in the graph,","every node you for every node be the shortest path from you to the for all possible pairs in the quadratic limiting shortest path in principle.","We could, of course, solve this problem in many different ways. And I'd like to kind of summarize what the landscape of the runtime complexity","looks like for straightforward approaches to solving this all pairs problem.","And in considering this, I'll look at a couple extremes of the graph parameter position.","One is when you're dealing with a spar strength and one is with a dense graph.","And of course there could be things in between. These are the two extremes.","In a sparse graph you have, the number of edges you have is comparable to the number of nodes that you have,","meaning, for example, that you should imagine. On average, every node in the graph has like a constant number of edges incident on it.","For example, if you imagine a graph that is modeling a real world road network,","I've been to road intersections with like seven roads coming out of like off of them, but not more than that really.","So that would be like a sparse graph in this sense.","Alternatively, you might be in the dense graph regime where the total number of edges could be quadratic in the number of nodes.","You could, in other words, on average have close to end edges from every single note.","Most nodes are connected to one another. Okay, so these are the two kind of extremes that you could have.","And I parameterized the landscape of the runtime for all pairs shortest paths in terms of these two cases,","partially to make it simpler to compare the algorithms by looking just at and if we were","dealing with an unweighted graph and we wanted to calculate all pairs shortest paths,","I hope that the first thing that you would think to do is run a bunch of breakfast searches.","We know how to solve the shortest path problem from a given source to all other vertices.","So if I do that for all possible source vertices,","I've computed all pairs shortest path so I could run a breakfast search from every vertex and that would result in and","because I'm going to run one from every of n vertices times end plus m the run time to run the DFS at each one run time.","So in total, translating to our two cases that would be like quadratic on a spacecraft where M is roughly n or cubic on a dense graph,"]},{"start_time":2520,"end_time":2604,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=14&isPrimary=false&absoluteTime=13353707220.518","captions":["Let me now parameter write the shortest path from you to the passing only","through vertices numbered at most rs only the first three labeled vertices that","only the first four labeled vertices etc. to diagram that so consider for any","given r imagine splitting you have your vertices that were labeled up to R,","and then you have your vertices that are labeled something after R.","If these are the two sets of vertices for a given are now for a given pair of vertices.","You and V I'm interested when I compute pi and you've the R in the shortest path that passes through only vertices numbered at most are so old","in this left set in the diagram we're passing through means that the intermediate vertices on the path between you and V must lie in this set.","And. Similarly,","I can define the quite related sub problem de or distance of from you to the passing","only through vertices number that most are corresponding to the shortest pass pi.","This is the problem that I will try to develop a dynamic program for.","But are there questions first, just about the parameter resolution of the this problem?"]},{"start_time":2700,"end_time":2793,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=15&isPrimary=false&absoluteTime=13353707400.518","captions":["You might already see, by the way of looking at this. Hmm. I bet we're going to compute these sub problems from smaller to larger.","Are you quite correct? There's only one other case.","Either the shortest path that passes through a vertices label that most are does not pass,","does not use R the vertex R that was case two or it does use the vertex R, That would be our case three.","If it does use the vertex R,","then the optimal substructure of shortest paths tells us that it has to be a shortest path from you two are and a shortest path from R to V,","Both of those shortest paths think about the shortest path from you.","Two are using vertices labeled only at most R and the shortest path from are to V,","passing only through intermediary vertices label that most are does not pass to the vertex R as an intermediary vertex.","Neither of those do otherwise you have a cycle you wouldn't come back to our again on the path from r to the for example,","unless there was a negative cycle. And let me assume, by the way, everywhere that I'm considering here that there are not negative cycles.","If there are negative cycles,","then the answer to this question is minus infinity or any of the nodes that can reach the negative cycles which are not well-defined.","And this is that this is the whole recursive structure of the problem.","If you understand these cases, then we can write down a recurrence relation to characterize the computation of these problems."]},{"start_time":2856,"end_time":2880,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=2856&isPrimary=true&absoluteTime=13353707556.518","captions":["What we're going to do in the standard all pairs shortest path dynamic program","is iterate because the dependencies are always on some problems with smaller R,","we're going to iterate after the usual kind of a set up and checking for the presence of an edge directly at our equals zero.","So these are our base cases. We'll iterate over sub problems from smaller to larger RS for each of those."]},{"start_time":2943,"end_time":3060,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=2943&isPrimary=true&absoluteTime=13353707643.518","captions":["which is again this dynamic program under this parameterization for computing all pairs shortest paths.","It's essentially the same algorithm we saw before,","but space optimized to not explicitly store all of the previous problems with respect to our this algorithm.","Then as cubic runtime just the same, but it only requires quadratic memory, which makes sense.","You need quadratic memory just to store the answers to this problem of all pairs.","Shortest paths. Are there questions about the idea of the Floyd worship algorithm?","Yes. So it depends on not having negative assessments.","We also like to check for negative cycles and will it affect it?","The question is, could we also check for negative cycles as part of this? The answer is you could.","You absolutely could. In a very similar way to Bolton for I don't have slides on it, but I think Garretson does include a discussion of this.","So if you want to compute all parachutist paths and you don't know if there's a negative cycle,","you can very similarly detect it as part of running for commercial operation without large additional overhead.","Yes. Didn't want.","Yes, the Floyd worship algorithm reduces the memory required because the more natural dynamic program,","the first one that I would expect you to write if you were writing a dynamic","program for this recurrence stories explicitly a problem for every vertex you,","for every vertex, B for every integer R from zero to the number of verses.","So there are a cubic in cube number of such problems that you store the solutions to and your memorization data structure."]},{"start_time":3168,"end_time":3240,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=3168&isPrimary=true&absoluteTime=13353707868.518","captions":["So let me just fill in in the picture again for you.","For all hair short has passed, a lot remains the same and I have highlighted in red or strikeout what has changed?","What has changed is twofold. We now have a fully virtual algorithm which allows us in cubic time to compute all pairs","shortest paths with even potentially with negative edge weights on a dense or sparse graph.","And also the runtime didn't depend on the sparsity pattern. Okay, so that's great.","The other thing down on the lower left is also you'll notice that that's a little bit faster even if there aren't negative edge weights.","Then running Dijkstra's algorithm from every source in a dense graph, in a dense graph,","you can shave a little bit of run time by running Floyd Marshall instead,","even if the edge rates are positive, but in a sparse graph, it would be much better for you to run.","Much, much better for you to run in different single source Dijkstra's algorithm.","Indeed, this is a common confusion that I see is that often students are taught like, okay,","Dijkstra's is single source, and then Floyd Moore shows up here, so I have to use Floyd Marshall for all pairs.","But actually in the case we have a sparse graph like this.","Running Dijkstra's from every source is substantially faster than running Floyd Marshall So I just want you to know that as well."]},{"start_time":3420,"end_time":3438,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=19&isPrimary=false&absoluteTime=13353708120.518","captions":["I suspect there's substantial. I mean, the album is much more complex than Floyd Marshall,","so I wouldn't expect this to be faster than Floyd Marshall for a graph with 100 or 200 notes.","Okay, Maybe that's interesting to you. Maybe it's not. Let's do some other stuff now."]},{"start_time":3456,"end_time":3462,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=3456&isPrimary=true&absoluteTime=13353708156.518","captions":[]},{"start_time":3486,"end_time":3525,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=3486&isPrimary=true&absoluteTime=13353708186.518","captions":["And of course,","the most important thing to to here is do you feel like you're learning the things that we told you we were going to try to learn in this class?","And what we told you we were trying to learn was how to design algorithms and how to analyze algorithms.","So we asked you, do you feel like you're making progress towards our learning outcomes, our learning objectives for this course?","Do you agree or, you know, agree?","I'm thrilled, frankly, that the great majority of you do feel like you were making progress toward our objectives in this class.","These are our objectives in the class to help you to learn how to design algorithms, how to analyze algorithms."]},{"start_time":3573,"end_time":3600,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=3573&isPrimary=true&absoluteTime=13353708273.518","captions":["We asked you, do you agree or not? Has recitation been providing useful hands on practice with the concepts and techniques of the course?","And the great majority of you believe that it has been for you so far.","Interestingly, there is, however, a gap between neither being or disagree,","and I think a few of you are having less good of an experience in recitation than I would like.","I think we heard from some of you in your survey similar to lecture."]},{"start_time":3612,"end_time":3717,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=3612&isPrimary=true&absoluteTime=13353708312.518","captions":["We asked what you thought about, like policies including like partner work as you grading, dropping, the lowest problem, that kind of thing.","The overwhelming majority of you thought that that was reasonable, which I'm glad to hear that it was working for you.","And in terms of the problem types, most of you think the balance between theory and applied problems is good.","A few more of you prefer would prefer more applied to the theory problems are very few of you preferred more theory that applied problems,","but most of you prefer the balance we have now.","In terms of how much time you're spending, The majority of you are spending about 6 to 8 hours outside of class a week,","meaning probably around 10 hours a week in total, which is roughly a little bit less actually than Duke's expectations for you.","The Duke faculty handbook.","When you propose a new course, you have to click a button that says, I understand and promise that my course will require 12 hours a week of students.","And I just love saying that because I love seeing your faces when I say that these are your books.","So around 10 hours a week is like roughly reasonable from my point of view.","There's obviously going to be variance in your individual experiences, and we see that represented here 6 to 8 hours, like outside of class.","So maybe like nine or 10 hours total a week seems about reasonable.","A few of you are spending more than 10 hours a week, which I would prefer not to have happen.","And I'd love to hear from you if there are ways that could help you to manage both your learning in the class and the timeline it takes for you."]},{"start_time":3771,"end_time":3780,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=7bf43a00-9fac-4510-b5c4-b1250146ef79&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=3771&isPrimary=true&absoluteTime=13353708471.518","captions":["And in terms of interactions here, just kind of like the spread of the number of interactions that have happened in our office hours over the week.","And you'll notice that it's roughly uniform, but not exactly."]},{"start_time":3960,"end_time":4140,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=22&isPrimary=false&absoluteTime=13353708660.518","captions":["But the idea is very similar to the majority element algorithm.","The idea there was if you're trying to find an element that's a majority, that's more than half of the of everything in the array,","then it has to either be a majority in a left partition of the array or it has to be a majority element in a right partition of the array, right.","Like a partition of the array into two disjoint halves. Okay, that has to be a majority of it.","And one of those two is very similar and indeed the same kind of logic.","For an element to be a common element overall, it has to be a common element in a left partition of the array or in a right partition of the array.","If it's not common in either of two disjoint partitions, then it can't be common overall.","And so you can deploy very similar divide and conquer algorithm.","There are several different ways you could have written the base case, but one is if you're looking at a single element,","then within the range of just that one element, sure, that's common if you're looking at a larger,","more general range, let's say from some L two, some R, then you can get the common elements on a left partition of that array,","the common elements on the right partition of that array. And then essentially for all of those candidates, count each of them.","Right. And check if they are common in the whole range from L to R,","That seems like it could be slow because you might have more than one or two candidates for common elements.","But as the hint suggests, there can only be at most about like nine common elements,","which means you're going to have still a constant number of elements. You need to check in the merge step.","The second problem was to compute what was called the upper boundary array, where you get an array of integers not necessarily sorted.","You're asked compute an array B where the high element of B is the maximum of the elements up to index I.","In fact, the natural way to do this in serial would be a simple loop keeping track of the maximum you've seen so far and checking any element but the","straightforward or the obvious way to try to parallelize that by just writing parallel for in front of that loop introduces deterministic races.","So this question asks you to design an efficient parallel algorithm to try to solve this problem.","This is very similar to the prefix sums problem that you saw.","I believe it was in a homework assignment, very similar to that kind of thing where you were trying to do like sums increasing from the left,","but here you're trying to compute essentially like element wise maximums of that and everything before.","Again, the idea is you can do this with the divide and conquer approach.","If you're looking at just a single element, then you just write that value.","Okay, what's the maximum everything up to? Just within this range from Eldar, if I'm looking at a single element, well it's just that single element.","Otherwise you can partition into, say,","the left and the right partition of the array and you can recursively compute"]},{"start_time":4320,"end_time":4500,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=24&isPrimary=false&absoluteTime=13353709020.518","captions":["One is the last character of the first.","I have a in the first j of the might be equal if they're equal.","And I want to build a short super sequence of these two strings, I can only I can just add that one character once at the end.","It could just be the end of the common super sequence and it sort of double counts.","That counts for both, right? Alternatively, if that's not the case,","then my common super sequence is going to have to either end with the last character of a or end with the last character of the.","So the last case is then I'll do one counting that addition of the character.","Plus whichever is better of those two possibilities on the remainder of the strings.","So this is the form of the recurrence.","And then when you develop a dynamic programing algorithm, the general idea is you want to define your minimization data structure.","In this case, the most natural one would be a table that stores these sub problems for every I in J.","For example, we're going to initialize deal with our base rate dealing with the base cases first.","I find that to be easiest to write in this example.","So padding all of those from the base case at the beginning on the first row in the first column and","then the iteration over order over the sub problems here is indeed just from first row left to right.","Second row, left to right is a correct iteration order for this formulation of the sub problems in the recurrence.","These are problems like the longest common sub sequence depends only on smaller and smaller J.","Let me talk about the last one briefly, and if we have time, we'll take questions, but we may be about out of time.","The last problem is connected. Problem says you're given a directed graph,","you're told it's not strongly connected and you're asked whether it can be made strongly connected by the addition of exactly one edge.","This is similar to the problem of the not United Airlines from the homework problem.","So there you were told that there's one node in the graph from which you can get anywhere.","And you were asked how many edges would be necessary to ensure that you could get back to that hub from anywhere,","which is essentially asking you to strongly connect the graph effectively in that case.","In this case,","you're asking instead just to consider adding a single edge and asked would it be possible by adding a single edge to strongly connect the graph?","The first way to do this would have been just to check all possible additions of an edge and then check if the graph is strongly connected.","That would be the correct way. Would have been a little bit less efficient than the linear time solution,","where you essentially compute the strongly connected components of the graph.","You could do that with a Rogers algorithm, for example.","And then what you want to determine is how many sources and sinks are there in the condensation of that of those strongly connected components,","the condensation graph that you're only going to be able to strongly connect with the addition of a single edge."]},{"start_time":4680,"end_time":1000000,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=42603403-e0dd-4171-9067-b1250146daff&sessionPID=e1dbbe2a-d158-431d-87fc-b0ce014752fa&number=26&isPrimary=false&absoluteTime=13353709380.518","captions":["So you see the memory mind of that one.","The thing to look for is the size of the minimization data structure, which in this case for Floyd Marshall is just the distance matrix.","That story for every you and me, we store this I good.","So you have dramatically many entries in such a table because we have like we have a number for every you and everything.","We need to be very careful to see that slightly.","I'm only on the music story here. These are the reason we don't get to store it explicitly is because if you look at the nature of this recurrence,","these these terms only ever occur to refer to excuse me, the immediately prior value are you'll never refer to like are minus seven.","Right. So we don't need to store after we've gone ten iterations through that outer loop of our we don't actually need","to store the values when we were at our equals three seven iterations ago because we don't end up needing them.","This one only stores the immediately prior ones that it's going to use directly.","So here the patient is just you will see one.","Yeah, exactly. Said okay now I understand that wise that okay okay thank you.","But it is helpful. But let's remember it's not not to enough for question the yeah if it's still correct to like","divide the input and it can be done make it is a little more complicated but it can be done.","The same logic would apply that like if you are a common element overall, then you have to be a common element in one of those partitions of ten.","So then if you checked all those partitions you would again get the candidate","common elements and then you could check to see if they are in common overall.","So it can be done. It's maybe a little more complicated to write, but the idea is that."]}]}