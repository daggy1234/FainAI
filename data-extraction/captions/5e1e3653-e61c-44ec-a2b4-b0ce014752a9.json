{"data":[{"start_time":1,"end_time":9,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=0&isPrimary=false&absoluteTime=13352927101.016","captions":["I to say I get that."]},{"start_time":123,"end_time":180,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=123&isPrimary=true&absoluteTime=13352927223.516","captions":["But first, some announcements. Mid-semester survey.","Overwhelming majority of you already done that. Don't worry about it. A small number of you still haven't done it.","You should have gotten the last reminder emailed to you personally.","If you haven't done it today, telling you to do it today.","If that is you, it's a small number of you. But if that is one of a small number of you, please do that.","We want to hear from each and every individual. Remember that it is required.","Homework five That's the depth Research assignment is due this Thursday and that's","the last homework that is either do before or is covered on the midterm exam.","Are those kind of deep research topics. That midterm exam is coming up next Tuesday.","It's been one week, 75 minutes for problems, topics up to and including that first search.","The emphasis is on algorithm design over proofs. The problems will be related to or maybe small variance on things you have seen in lecture."]},{"start_time":210,"end_time":285,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=210&isPrimary=true&absoluteTime=13352927310.516","captions":["So here's our plan for the day. As I said, we're going to wrap up our conversation about that first search,","which was the canonical example of a graph search algorithm we were using to understand connectivity in a graph.","We talked about that, an undirected graph, and then we talked about that in direct it graphs where the situation is more complex.","We can have that conversation up today by talking about how you can use it to","solve dynamic programing style problems on dags or directed acyclic graphs,","and also to talk about strongly connected components in directed graphs.","They will launch into shortest paths, beginning with the unweighted case and discussing the breakfast search algorithm,","the canonical alternative to a depth first pattern of search.","And we will continue with what time we have to discuss weighted, non-negative weighted graphs in particular,","and how we can adapt the idea of breakfast search to a weighted context to derive what you may know as Dijkstra's algorithm.","So it has been independently rediscovered by many people. We'll probably begin talking about Dijkstra's algorithm today.","We'll probably continue that conversation on Thursday, as well as moving on to even more general algorithms such as the Bellman Ford algorithm.","That's what's on the agenda. Let's start with our wrap up."]},{"start_time":291,"end_time":360,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=291&isPrimary=true&absoluteTime=13352927391.516","captions":["The last thing that we discussed in class last week was the use of depth first search","to calculate a topological ordering or topological order or topological sorting,","if we will use all of those kinds of interchangeably of a directed acyclic graph.","If a graph is a DAG directed acyclic graph, it does not contain a cycle.","It has at least one source, at least one sync. And there will necessarily be a way to miniaturize the nodes of that group.","That is to say, literally line them up from left to right where you could think to assign them an integer index from one to N,","for example, such that all of the edges go forward in that graph which you see visually here.","Or you could imagine if you had a number of your vertices in some order from one end, all of the edges would go from lower to larger indices.","There will always be such a way to order the nodes in a a dag, a directory inside the graph and in particular,","the way to do that is to order them from greatest to least post time or recall the","post time is something we can record during a depth first search of the entire graph."]},{"start_time":540,"end_time":720,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=3&isPrimary=false&absoluteTime=13352927640.516","captions":["Alternatively, the second base case is maybe more interesting, and this is the case if you find yourself at a sink in the graph that is not t.","If I had a sink in the graph, there are no outgoing edges from this node.","Okay, then I can't reach anything in the graph, including I certainly can't reach t itself.","So let me just mark that by writing a negative infinity for that case, that makes it simpler to write the third case,","but if you really preferred you could write does not exist path for this case.","You didn't just have to put a check in the third case for it does not exist.","The general recursive case. Maybe the more interesting one is to say well, otherwise right, I'm not at t itself and I do have outgoing edges.","Then the longest path from me at U to a given node t is one plus one is counting the outgoing edge.","I'm contemplating traversing plus the longest path from any of my neighbors to t if I'm going to have a path from my current node,","you do a destination t, it has to go through one of the outer neighbors of you.","The only way I can get anywhere from you is to traverse one of the outer neighbors.","If you So I'll count one for the edge to the outer neighbor plus the maximum over my neighbors of the longest path from there to the target node.","This recurrence characterizes the nature of this longest path problem, and I actually would kind of characterize it in a more general graph, too.","The problem is that in a more general graph,","there can be cycles and so it can be unclear in what order you should evaluate these sub problems and we'll see that again.","We talk about shortest path and you can solve shortest path in a very similar way on a tack.","So on a directed a cyclic graph, there are no cycles.","I claim there is a valid iteration order to solve these problems and then it is intimately related to the type of logical ordering.","Suppose we get a type of logical ordering of a DAG such as this note for a given node in order to answer the sub problem.","All of you, I need to already know the answer to the sub problems.","L-O-V-E for all of the out neighbors of the that is to say in a topological ordering,","I need to know the answers to some problems to the right or at higher indices within this ordering.","If I for example, wanted to compute l of j, I need to know the I like this.","If I wanted to compute l of J, what do I already need to know?","I already need to know L of K and L and and L of M all of the outer neighbors of J.","You'll know those are all to the right in this type of logical ordering."]},{"start_time":741,"end_time":900,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=741&isPrimary=true&absoluteTime=13352927841.516","captions":["So suppose you get your topological ordering of the vertices.","We can do that using depth for search. I want to solve these problems.","The iteration order is going to be from right to left in my top logical ordering, that is to say, the highest to the lowest.","Nodes according to the top logical ordering. So let me start with see if I wanted to find let's say that the sea is the destination.","Let's say here that we decided that that sea is going to be our target node.","Then we'll start with that as the base case and its distances, of course, to zero.","The next node in the reverse of the top logical order going right from right to left,","according to this top left corner, would be f looking at the recurrence.","F is the general case.","It has an alt neighbor, but it does not see itself as the recurrence says take one plus the maximum over that out neighbors of l of that out neighbor.","Fortunately there's just one out neighbor on the C itself. So it's just one plus zero is one.","Next, we examine to the left of F, we get G where we're in the general case, we take one plus the maximum of the alt neighbors.","The alt neighbors are F and C. The larger of those is F, which had a longest path of distance of one to C, So we take one plus one is two.","We then go to D, we say, okay, let's again take one plus the maximum of the outer neighbors.","The maximum out neighbor is G, which has a distance of two.","So we'll set this to three and so on and so forth.","Be one way you could solve the longest path problem in a diagram directly like the graph,","you could see that the change to this to solve the shortest path in a dag would be","relatively minor change max to man and change minus infinity to positive infinity.","And you are pretty much good to go. We can just do this.","Calculate shortest paths or longest paths and many other interesting problems you could solve with dynamic programing in this form on a directed","acyclic graph in linear time by solving these problems in either the forward or the reverse topological ordering ending on your recurrence.","Are there. Yeah. Before we move on, talk about strong and connected components.","Are there questions about this topological ordering business? Yes, it's a tough one.","Let me go to the right place, I guess. Higher, higher, higher.","Yeah. Question is, is this the fact that we had previously the topological order or."]},{"start_time":1044,"end_time":1080,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=1044&isPrimary=true&absoluteTime=13352928144.516","captions":["I want to conclude our conversation about the connectivity structure in graphs and especially directed graphs.","By drawing the analogy from an undirected graphs,","the concept of a connected component simply a connected component to the appropriate generalization in a directed graph and an undirected graph,","the connected relationship, like the edges, is symmetric.","If there is a path from A to B, then there is a path from E to A, You can go both directions on a path because you can get directions on an edge.","That is not true in a directed graph. So whereas the notion of connected component in an undirected graph was symmetric,"]},{"start_time":1260,"end_time":1392,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=7&isPrimary=false&absoluteTime=13352928360.516","captions":["E, however, has two outgoing edges to this kind of like faded orange strongly connected component and to this pink strongly connected component.","And that's why we've drawn these two edges in the condensation.","However, there is no edge going from E, for example, to the yellow is why would not drawn an edge there.","So the condensation in the middle graph is itself a graph that we're simply defining in terms of the original graph","because it tells us some very interesting things about the structure of the strongly connected components in the graph.","It is a general fact that the condensation or the Met a graph must be a DAG.","Why we introduced that earlier must be a directed acyclic graph y.","Well, it's directed by definition. Why must it be a cyclic?","If there was a cycle between two nodes in the condensation,","that would mean you could get from one SSD to the other and you could get from the other back","to the first and everything within both that both of those two sex is strongly connected.","That would mean that those are two strongly connected components, the really one strongly connected component.","So it's sort of almost by definition a couple of lines of reasoning that the condensation must be a dag, must be a cyclic.","Now, it need not be sort of weakly connected, if you will, in the sense that this one is in this example.","If you look at the condensation,","there is a single source vertex from which you can get to everything else that need not be the case necessarily of the condensation.","There is also a single sink that everything leads to that also need not necessarily be the case in the condensation.","What is necessarily the case is that it will be a DAG and thus that there will","be at least one source and at least one sink vertex in the condensation graph.","Question On this definition, make sure we're on the same page. And."]},{"start_time":1440,"end_time":1620,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=8&isPrimary=false&absoluteTime=13352928540.516","captions":["This is the first claim that I want to try to convince you of because it immediately","suggests a fact that we can exploit in order to try to design an algorithm.","How do we try to design an algorithm to compute the strongly connected components?","At some level, we want to start somewhere, do a depth first search, find a strongly connected component, then move on to find the next one.","We could start anywhere in an undirected graph, but that's not true in a strongly connected know a directed graph.","Okay. If I start at E and run in that first search, I'll find everything.","But everything is not a strongly connected component here.","So where to start? Where to start? We'll try to answer that by this structural fact about the graph.","The vertices reachable from any vertex in a sink of the condensation are a strongly connected component.","This will suggest the following strategy Try to find a vertex in a sink of the condensation.","If you can do that, then you can run a DFS from there to find a component.","Why should this be true? Thinking about again, our graph and its condensation.","Suppose not. Suppose for a contradiction that this is not the case.","If the vertices reachable from you are not a strongly connected component of the graph.","Well, we know that we can reach all those vertices from you. So if not, it must be the case.","There is some vertex V that is reachable from you, but is not in the same strongly connected component.","In other words, that you can't get back to you from V would have to be the case.","That would mean that V has to be in another strongly connected component, not in the same one that use it.","Okay. That is not missing. It's not a sync because.","So then you were not in a sync, strongly connected component because you were able to get from you to another component in the graph.","And it's been sort of a short argument.","Let me think about it visually. Yes. The written out stuff isn't very helpful.","If you imagine running a depth first search from the right to the bigger picture.","If you imagine earning a debt for a search, let's say, from from in this example.","Right. In this case, you can't reach anything. Okay. So let me ignore p let's look at the bigger examples of those.","P doesn't exist. Then the C is this yellow one.","So suppose you start a search from anywhere in this yellow component,","and I claim that it will of course find everything in the yellow component, but can it possibly find something in a different component?"]},{"start_time":1662,"end_time":1722,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=1662&isPrimary=true&absoluteTime=13352928762.516","captions":["Here's our algorithm idea as we're sketching it, and we'll get more detailed later.","We're going to repeatedly try to find a vertex in a sink of the condensation of the graph.","And we don't know how to do that yet.","We'll figure that out somehow if we can find all the vertices reachable from that vertex with a depth for a search, for example.","We could label all of those as one of the strongly connected components,","and then perhaps we could simply remove it from the graph and continue in this fashion.","Okay. You remove a node from a sink, from a DAG, you still have a dag and there will still have to be a sink.","So we can just repeat this process.","Other questions with this high level idea before we talk more about the details of especially how will accomplish the first bullet.","Okay. I'm going to in order to try to answer this, introduce a concept that will be helpful for many other problems in algorithms."]},{"start_time":1800,"end_time":1821,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=10&isPrimary=false&absoluteTime=13352928900.516","captions":["So flipping the edges won't change the structure of the strongly connected components.","And the reason this is helpful is it turns out it will be much easier to look for rather","than a sink of the condensation to look for a source in a different kind of a graph."]},{"start_time":1980,"end_time":2160,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=11&isPrimary=false&absoluteTime=13352929080.516","captions":["and you've also got to have some way to get from V back to X. That's what it means to be a strongly connected component.","And because strongly connected components are maximal, there can't be a way to get from V to Y if there was a path from V to Y,","and we already know there's a path Y to X to V, that Y wouldn't be outside of this strongly connected component.","It would be part of this strongly connected component. And this is what the picture looks like when we make this supposition for a contradiction.","Why does this lead to a contradiction? We're going to consider two possible cases as we contemplate the execution of all DFS and run all DFS.","What could possibly happen there? Well, it might be the case that DFS gets called on Y first.","Okay. In which case I claim the picture will look something like this.","Alternatively, DFS might get called on V first, in which case the picture would look something like this.","And I'll explain these pictures in a moment. But. But these are the two possibilities.","Like does DFS of Y get called first or does DFS of the get called first?","One of those two has to happen first in all DFS. I claim to you that in both cases, why would have the greater post time?","But we started by supposing that ve had the greatest post time.","That's how we get our contradiction. So why is it the case that whether you're in case one or two here, then why would have the greater post time?","If you're in case one here.","If DFS on Y gets called first, then observe that from y there is a path to X to the meeting while Y is still active in its search.","You would call D and search everything searchable from the before returning from the meeting.","You're not going to get to the post visit at Y in this case until after you have finished exploring from me to Y would have the greater post time.","Alternatively, you might be in case two perhaps we call DFS and V first.","If we did, there is a path from V to x, but there is no way to get from the to y,","meaning V would completely finish its step first, search and report its post time before we even call DFS on y.","Y would then certainly have the greater post time when either of these cases y is going to end up having the greater post time.","But we started by supposing we were taking the vertex d with the greatest post time.","This establishes the contradiction suggesting that the original claim was correct.","If you run your all DFS on the reverse graph,"]},{"start_time":2181,"end_time":2244,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=2181&isPrimary=true&absoluteTime=13352929281.516","captions":["And now we know how to do that. I take the vertex with the greatest post time in the reverse graph.","Then find all the verses reachable from you in the original graph, not in the reverse graph.","Okay. That's one of the strongly connected components. Label it as such and remove it from the graph.","That's easier to think about intuitively though. You don't actually have to remove them from the graph and I'll show you the standard","formulation of Colorado's algorithm doesn't actually remove them from the graph,","but you could. I think it's maybe a little easier to intuit what's going on if you think about it that way.","Are there questions about this idea or why this makes sense as an algorithmic idea before we look at the details?","Okay. So here, that is what we've been working up to."]},{"start_time":2340,"end_time":2520,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=13&isPrimary=false&absoluteTime=13352929440.516","captions":["You can do that in linear time in the size of the graph, right?","Just create a new adjacency list, run through the old one and add all the rumors that isn't.","Then you'll run all DFS on the reverse graph to get the post times of all the vertices.","That's what you really need from that is just the post times. Okay.","I'll keep track of the labels of all the vertices.","So for each vertex I'll say like label of this vertex equals three if it's in the strongly connected component labeled three.","That's how I to note that. And I'll start here at zero.","Now. For all.","So I apparently switch this around for all the invalid AC for all of the vertices in the vertex in decreasing order of post time.","So start with the vertex with the greatest post time. As we've discussed, if what is labeled the equals zero, what's going on there?","That's to say if we haven't already detected the strongly connected component to which this vertex belongs is what this means.","Okay, if we haven't already determined what strongly connected component this vertex belongs to, then we're going to search from here.","This is the sense in which actually removing things is only implicit.","I'm not actually explicitly removing things from the graph that you could do it that way.","Then what I'm going to do is say, okay, I've detected the start of a new and strongly connected component.","Let me increase my index to to note that and then let me run a label, DFS from this vertex.","This vertex will be in a sink of what remains in the condensation.","And this single, that first search from that node will discover the strongly connected component","to which it belongs and label those vertices as so belonging to that component.","So in this example graph we started with the node with the greatest post time.","If you run all DFS in diverse graph, it's going to end up being a little old one here by itself.","So we initially run a labeled DFS from just here in the original graph.","The note there's nowhere to go from this node, so we simply label that as component one and move right on along the next node with greatest post","time from the search and the reverse graph is going to be one of the nodes in this yellow component.","So then in the original component, say we start from seven, we run a depth four search starting from seven.","You'll see we're able to get to everything in the yellow component, but nothing in the pink or orange components.","For example, we label all of those as belonging to component two and then we continue now that","our loop on line six is still going to look at all of these other vertices,","but they're already going to be labeled. And so we're just going to keep going.","We will actually initialize another search from the node, initialize another search until we get to this component that is labeled three.","And the process continues. In this sort of fashion. It seems like there's a lot going on here,"]},{"start_time":2679,"end_time":2700,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=2679&isPrimary=true&absoluteTime=13352929779.516","captions":["We've delved into the wonders and mysteries and the complexities of the connectivity structure of graphs.","One of the things that we have not addressed in general are shortest paths moving from just understanding what is connected to what,"]},{"start_time":2706,"end_time":2742,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=2706&isPrimary=true&absoluteTime=13352929806.516","captions":["So let me define what I mean by shortest path to you, and I'll introduce some notation that we may use from time to time.","I'll probably use Capital P to denote a path, a path to make a sequence of edges, for example, a connected sequence of edges.","And I may use this kind of notation just to know this is a path from S to T.","I wrote the squiggly line because it's not I don't necessarily mean a single edge from study.","I mean a path from s t t comprising potentially many edges.","I will call such a path a shortest path. If the size of that path is at most the size of any other path from s2t."]},{"start_time":2799,"end_time":2880,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=2799&isPrimary=true&absoluteTime=13352929899.516","captions":["Short is bad show all over the place. Some of them are probably obvious.","Some of them may be surprising to you.","Okay, so some of the more obvious applications are, if you want literal navigational directions in the real world,","you might think about that in a transit network as being structured as a graph.","And you are probably interested not just in whether there is a way to get from point A to point B, but like a good way to get from point A to point B.","And let me point out and you'll see this is some of your homework exercises that there are many different ways to define best way to get from A to B,","it could be in terms of sum of distances or costs or time or probabilities potentially.","There are many ways that you might want to characterize this,","but these all fall under the broad ambarella of you searching for good paths, shorter paths, preferably in general.","Okay, whether you're interested in motion planning, pathfinding in video games,","real world navigational directions, the structure of a computer network.","We typically study this in a single source formulation, meaning essentially that like in dynamic programing,","we will end up solving more problems than potentially we originally cared about.","You may have originally only cared about the shortest path to get from some point S to some point T,"]},{"start_time":3051,"end_time":3060,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=3051&isPrimary=true&absoluteTime=13352930151.516","captions":["Shortest paths exhibit many nice structural properties.","Arguably the most important is the following notion of optimal substructure."]},{"start_time":3219,"end_time":3240,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=3219&isPrimary=true&absoluteTime=13352930319.516","captions":["Okay. When I find out things about optimal substructure.","I like you. I know. Think to myself.","I'd like to write a recurrence. Just. I have an itch. I need to write a recurrence.","I know you feel the same way. I just told you there was optimal substructure and you said there's got to be a recurrence for this."]},{"start_time":3420,"end_time":3438,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=19&isPrimary=false&absoluteTime=13352930520.516","captions":["What about if there are? So if we have our recurrence like cat.","So if we have a recurrence and now we say we have some graph and we're interested in calculating the shortest path distance to be in this graph,"]},{"start_time":3537,"end_time":3600,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=3537&isPrimary=true&absoluteTime=13352930637.516","captions":["we're going to explore first all of the nodes that are reachable by a single edge from s, all of the neighbors of S.","Okay, maybe they look something like this there two.","Then we'll look at all of the neighbors of the neighbors, so to speak, all of the nodes with shortest path distance to.","Okay. Now you'll note that C is a neighbor of a neighbor, which is why that's kind of sloppy language to use in this graph.","C is a neighbor of a Well, it's a neighbor of a neighbor of a neighbor.","Okay. But it's also a distance one. So I'll use shortest path distance just to delineate that.","Then once we've seen all of the nodes at shortest distance to a lake.","And only after that will we look at any of the nodes with shortest path distance three away, and we will continue in this high."]},{"start_time":3780,"end_time":3879,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=21&isPrimary=false&absoluteTime=13352930880.516","captions":["We'll take the next one, which would be the one that's been in the queue longest, which will be the one that's closest to the start vertex along this.","And then we will explore from this node you exploring in the sense that we will examine every neighbor of you by considering each out edge from you,","not note every edge in the graph.","I mean specifically just edges from you to any of the neighbors of, you know, all of these local edges or every one of them.","If it's neighbor V is something we haven't discovered yet.","We haven't found a path to the record that in different ways.","One way is to say, I haven't put anything in my lookup table for it yet.","Then I will note that its distance, its shortest path distance is one more than the distance to you because I found V on a path from you.","So it's the distance along the path to you. The shortest path distance along the path to you, plus one counting the edge itself from you to me.","I'll also denote that I'm keeping track of the paths themselves or the search tree that I found to be from you.","And I'll do note that I should explore from this node in the future after putting it in the back of a queue, right the end of the line.","So I'm going to explore everything that was closer before I actually explore from this.","And at the end you might return. Either you might be interested in the distances or you might be interested in the paths themselves.","Or maybe both. Let's run through this algorithm and see an example."]},{"start_time":3960,"end_time":4071,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=22&isPrimary=false&absoluteTime=13352931060.516","captions":["Okay. The thing that's been in the queue the longest, the first in that's being going to exploring from B next.","But now look over all the neighbors and B, suppose I look at it first.","There's an edge for me. I have not discovered a path to yet.","So how do all these things stuff the distance to is one more than the distance to B.","I got to this e node from the B.A. and I should add E to explore from in the future.","B has one other out neighbor that's F also having discovered a path to F,","so I'll record that its distance is one more than the distance to B, and I got two F from B and I'll add F into the queue to explore later.","So that was where all of the neighbors of B,","So the code says next remove from the Q D is at the front of the line in the Q, so D is going to get removed.","Next, let's search from d d only has one out neighbor in by this edge trinity and you'll note that he's already discovered a pattern to E,","So we're not going to do anything here, okay? Or d none of his our neighbors get reported.","We just keep moving. So we're going to move front of the line from the Q is E.","Let's explore from there. He has one out maybe next. Yeah.","We already found nothing to do here. Okay. We're going to again remove from the front of the queue that's going to be F from F.","We loop over the our neighbors. There's just one C, we have not found a path to C, so you all, you have statement stuff.","The distance to C is one more than the distance to F the record that we got to see from F and we add C","into the Q to explore some of the are less note to explore and there'll be no new information there."]},{"start_time":4107,"end_time":4140,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=4107&isPrimary=true&absoluteTime=13352931207.516","captions":["The runtime complexity of breakfast surgery may not be a surprise,","but let's look at life is also linear in the size of the graph, the same as depth for search.","To see this note, each node is added into the queue at most once.","Just when it's first discovered is the point at which we added node into the queue so that outer loop while the queue is not empty,","we're just going to look at each node once potentially if everything's reachable from the start node.","In addition, when we're looking at a particular node and exploring from there, we only look over its outgoing edges."]},{"start_time":4173,"end_time":4320,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=70594bbb-ef73-47ba-ad9c-b11c0146cddd&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=4173&isPrimary=true&absoluteTime=13352931273.516","captions":["Take a few minutes and look at these great first search exercises.","This will be the last thing we do today. Yes.","It is a disease. I think.","It's a secret, but it's not really.","So you're saying.","Oh, okay, let's just.","Generally after the inspector general always present returns that they need to do something from the beginning of a civil war to.","Jerry. I might.","It was really quite interesting.","I suppose a."]},{"start_time":4500,"end_time":4680,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=18a5bdbe-dc39-495b-a3e5-b11c0146b3af&sessionPID=b4d5943c-8292-47f8-917e-b0ce014752a1&number=25&isPrimary=false&absoluteTime=13352931600.516","captions":["In some ways I understand what's happening around me.","I guess I think it's at least once you realize, Oh, my God, still with that guy is still to apply for and he must come.","What's left must have a thing. And as it is, people are saying, How dare you?","It's not right. I thought it was the way it is now.","So there was no study at all.","The only thing is like you don't know what it's like when you grow up.","Maybe you Thank you for this.","I love writing. Yeah, because I know it's not like anywhere else.","This is a fact. No, she's not.","They have nuclear warfare. That's what you're telling me.","Well, this is the result. Well, the conversations.","Okay. Gotcha. And so I guess just imagine.","I give you that. Yeah. That must have. Yeah.","My name is. Remove that. See what you're left with. You're going to create a cycle by removing.","So you're left with is still. It still must have. Is. Yeah. And then you go to the next person or the next greatest post, which is fine.","This could be any of the ones. Okay. Doesn't it'll be really all DFS on the reverse property.","Whichever one you started, search the first one.","Okay. Gotcha. And in this case, it'd be we start with a two.","Yeah, let's say, for example. Right. And then.","Okay, that's my question about this. I remember watching this for me there.","There's a problem with trees. That vertex cover."]}]}