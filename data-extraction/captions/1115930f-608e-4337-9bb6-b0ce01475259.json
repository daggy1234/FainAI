{"data":[{"start_time":1,"end_time":9,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=0&isPrimary=false&absoluteTime=13351890301.047","captions":[]},{"start_time":180,"end_time":318,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=1&isPrimary=false&absoluteTime=13351890480.547","captions":["All right. Good afternoon and welcome everyone to come.","So 330 on this, our ninth class and your favorite algorithm is class.","We're talking about dynamic programing, which is also seemed to be your favorite algorithm.","Design technique is a technique that is widely applied in many different fields.","For example, last class, we talked about sequence alignment questions and problems and possible applications in computational biology.","But those of you who studied computational biology probably see it in that context already.","Then in programing is also applied in other spaces. You might not think of, for example, in large scale artificial intelligence.","If you're interested in learning long term goal driven behaviors in complex adaptive environments such as trying to teach a robot how to walk,","it turns out the standard way of approaching and thinking about this problem is as a dynamic programing problem","where you imagine a sub problem is a current state of the world from the perspective of the robot's sensors.","So if I have, for example, if you sensor is telling me about my balance, about my current position,","etc., then a sub problem is, well, this is what my sensors tell me is true right now.","And the question before you is what actions should I take?","What torques should I apply, what forces should I buy my sensors so that I make progress toward a long term goal?","In this case, walking forward, you can think about that actually as a dynamic programing problem.","It exhibits recursive substructure and if you combine that with powerful function approximates very often today,","as in this example, in the form of deep neural networks, you get an algorithm that's capable of learning complex, robust behaviors.","So just a fun little video for you about other spaces where the ideas of dynamic programing show up.","Indeed, as just an historical note,","the most important notion of optimality in the space of reinforcement learning related to what is in this video is called Veltman Optimality.","It's named for Richard Bellman, who's the same scientist who coined the term dynamic programing.","So a deep connection there because nothing works.","We just have to watch this video until the end of class. There we go. So quick announcements about our course."]},{"start_time":360,"end_time":534,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=2&isPrimary=false&absoluteTime=13351890660.547","captions":["For those of you who've been there the last couple of days in particular and especially Wednesday.","So a couple of notes about things that we're trying to do and things that you can try to do.","So what we're trying to do, we're attempting to get extra shifts or to change shifts to push more people on to Wednesday, at least last week,","approximately three times as many of you went to office hours on Wednesday as on Thursday when the assignment was due, which was surprising to me.","And we were unprepared for in terms of staffing. But hey, kudos to you.","I was super proud to hear that the majority of you were thinking about your homework the day before the assignment was due,","not the day the assignment was due. So kudos to you on that. So we're attempting to shift more people on to those dates.","But in terms of what you can do Wednesday, at least so far for whatever reason, seems to be a more crowded evening.","If you're looking for a less crowded evening, you might try not Wednesday. Sunday has been quite a bit less crowded so far.","Another couple of things that we can do and that you can do that are related is we are reminding and encouraging and","working with our teaching assistants again to encourage them to try to keep their interactions to a reasonable length,","especially when there is a long queue. You should expect that to be that maybe you might have a five or ten minute conversation if there is a","long queue of people before we are asking them to attend cycle to someone else Going along with that,","how can you get the most out of your office hours experience, especially if you're going on a crowded night?","The more that you have thought about a problem on your own ahead of time and the more specific or particular your question or issue is,","the more satisfactory of an experience that you might have in, let's say,","a 5 to 10 minute conversation if you're coming in, especially like on a crowded Wednesday night and you have a problem that you're like,","I'm sort of just starting to think about this one, about some ideas around, that's fine, of course.","But you might come away after five or 10 minutes and still not feel like you really have a lot of clarity.","That's that's normal. It may take more than five or 10 minutes about ideas around.","So that may be a less satisfactory experience for you, especially if you're coming on like a crowded Wednesday or Thursday night.","Okay. So some things that you can do, some things that we're trying to do.","Oh, I guess I should also say, of course, when you're batting ideas around, you can also do that.","As you know, of course, policies with a partner.","If you're working with a partner, you're also welcome to discuss with other people outside of your partner.","As long as you're only actually writing your solutions in detail with your partner.","So some different things that we're trying to do, hopefully between the two of them will manage the demand the best that we can.","Any questions about course, announcements or logistics or anything like that?"]},{"start_time":540,"end_time":579,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=3&isPrimary=false&absoluteTime=13351890840.547","captions":["In particular, I'll focus on the question of how would you get the the subsequent the characters themselves.","Last time we actually only wrote an iterative, dynamic program to get the length of the longest common sub sequence, not the subsequent itself.","So we'll look at that briefly.","And then I want to show you two new problems one, the knapsack problem and to the solving the chain matrix multiplication problem.","A couple of other canonical examples that would demonstrate some slightly different flavors of that in programing.","And to show us more examples as you start to see the pattern of this way of solving a problem."]},{"start_time":720,"end_time":900,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=4&isPrimary=false&absoluteTime=13351891020.547","captions":["So in that case we had using the first I characters of one string and the first J characters of another string.","So I imagine where are parameters corresponding to prefixes of the two strings that we were","considering were considering a separate sub problem for each prefix of the two strings.","Those are the two crucial things we you're defining sub problems. What does it return?","What's the parameter ization? Then you want to develop a recurrence, which is to say an understanding of the recursive substructure you can think of.","This step is roughly equivalent to writing a correct recursive algorithm.","Not worrying about runtime is is roughly equivalent to writing or developing this recurrence that explains what","is the what should be returned for a larger sub problem potentially in terms of the answers to smaller problems,","then if you want to develop an iterative bottom up dynamic program, you should determine a valid iteration order over your sub problems.","To do that, you can look back at your recurrence and ask about the dependencies.","The dependencies are what sub problems are referenced in the recurrence.","I need to make sure that I have solved those before I attempt to solve the larger sub problem.","Let me think of a way to iterate over the sub problems that ensures that I always have.","Once you have done that, if you have a valid iteration order and you have a recurrence,","writing down the Iterative dynamic program is almost mechanical.","Iterate in that order over sub problems, store the sub problems in a data structure likelihood table.","Compute each sub problem using the recurrence, referencing previous values in your data structure.","It becomes almost mechanical at that stage to write these down.","Possibly in some cases, as you saw in the knapsack case.","Excuse me, as we will see in the next case today, as you already saw in the Fibonacci case,","you may be able to then optimize the memory use of the resulting iterative dynamic program.","You may realize that you don't need to store some problems throughout the entire procedure necessarily.","So this is my general problem solving guide for dynamic programing that we'll see in more examples today.","Yes. Question Just three frequencies in step two.","When you're defining some problems, right? You want to ask what does a cell problem return?","What is the parameter ization of a sub problem? You can think of that as what is the input.","So for example, when we were trying to compute the longest common sub sequence,","we parameterized some problems by asking about a prefix of one string and a prefix of another.","We used an index high and j to denote how many characters in the first and the second prefix,","and we'll see more examples of that in different problems today."]},{"start_time":906,"end_time":951,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=906&isPrimary=true&absoluteTime=13351891206.547","captions":["We already talked about the longest common subsequent problem. Let me just briefly remind you, I give you two strings.","A sub sequence is a subset of the characters in one of those strings, but you're not allowed to reorder it.","So you can skip characters, but you can't reorder. And then we want to know what string is a sub sequence of both of the input strings.","And in particular, we're looking for the longest one.","This is a way of trying to compute the similarity between two strings, for example, between two genomes.","And this example. ATC is a sub sequence of both of those two strings highlighted in red,","and it is the longest you won't be able to get a sub sequence of length for in both of them."]},{"start_time":1080,"end_time":1260,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=6&isPrimary=false&absoluteTime=13351891380.547","captions":["One column to the left in the one one cell, the go up, one or left one both zeros.","Okay. So we would report zero as the answer to this sub problem.","This makes sense because this sub problem was what is the length of the longest common sub sequence between G and A where?","That was all we had to work with. Those don't match, so there's nothing in common.","Makes sense. Still zero. Okay, we're going to continue along that first row.","So we go to the second entry. In that first row J equals two.","We're now looking at the characters G and C in this entry.","Again, those do not match again. We take the maximum of four to the left.","Again, that's zero. By the way, I'm going to draw these little arrows, which I have noted there.","That's why I'm drawing these arrows will become more evident in a moment. I'm going to draw these little arrows just pointing, just keeping track,","just reminding ourselves what sub problem was relevant in how I computed this value.","Again, there'll be a reason why I want to do this in the moment. So and I'll break ties arbitrarily where there's a tie.","So for example, here where there was a zero up, there was a zero to the left there tie, and I'll just break it arbitrarily to the left.","Okay. All right, let's keep going.","We now had a more interesting case. We're looking at some problem row one, column three.","We're looking at the characters and G. Those do match. That means we're on our case on line nine, our diagonal case where I was equal to B.J.","In that case we recorded one plus the entry in the table one row before and one column before.","That is to say on the diagonal up and to the left in the table.","So one plus the diagonal up into the left was zero will be one.","Again, this makes sense. We're asking in this sub problem, what is the length of the longest common sub sequence?","But. In a string containing just g and the string containing ac g.","That would be the sub sequence of linked one just g.","Okay. That's why that's the answer to that sub problem. We keep going a little bit faster.","G is not equal to T, so we're getting the maximum either left or up.","That's no longer a tie. One is definitely better corresponding to if you've got just the character.","G. Alternatively, you've got a g T The length of the common longest common sub sequence is still one corresponding to a match on the G.","Keep going. G does not equal C. We take the maximum to the left or up.","No still be one. We now go to the second row.","We're looking at two characters in the first string, now G and then A and we're asking in the row to parliament injury.","Hey, does a equal? A Well, it sure does. We're in the diagonal case where we could match on that the length of the longest"]},{"start_time":1428,"end_time":1440,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=1428&isPrimary=true&absoluteTime=13351891728.547","captions":["You might be interested sometimes in knowing not just that the length of the longest common sub sequence is three.","Sometimes that might be all you care about if you just want a measure of similarity between two strings.","Sometimes you might want to know the string itself. Like, what was it here?"]},{"start_time":1620,"end_time":1644,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=9&isPrimary=false&absoluteTime=13351891920.547","captions":["Whenever there's a match on the diagonal, you will get the string itself,","which in this case was 80 C And note that if you backtrack from the bottom right, you'll get them in reverse order and then you'll reverse that.","This is in general how to get the sequence itself, and there'll be other variants of this to be a little more concrete."]},{"start_time":1800,"end_time":1824,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=10&isPrimary=false&absoluteTime=13351892100.547","captions":["In this case, you accumulating characters in the subsequent in later cases you'll be accumulating items,","etc. But this idea of backtracking through the optimizing sub problems is very","generally and generically the way you recover the quote unquote thing itself.","In dynamic programing problems, this is the usual idea. One final note on this longest common subsequent problem we spent some time with."]},{"start_time":1905,"end_time":1980,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=1905&isPrimary=true&absoluteTime=13351892205.547","captions":["The longest comment subsequent to that round? Before we look at a few different examples.","All right, let's talk knapsack, then.","What's the knapsack problem? I'm going to look at what's often called the zero one knapsack problem.","I give you a number of items, let's say NMM.","Each item has both a cost and a value, sometimes a set of cost.","People will say wait, and they'll motivated with a story about theft where you're trying to steal as many valuables as you can inside of a knapsack.","I find that a little bit uncouth. So my items are going to have costs and values, and we're also constrained.","What we'd like to do is to purchase some items. Okay.","You're like you're a kid in a candy store. You got $10.","You go to the candy store, you want to buy some candies. Okay.","But you've only got $10. You've got a budget of ten. And every candy you might want to buy has a cost associated with it."]},{"start_time":2160,"end_time":2331,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=12&isPrimary=false&absoluteTime=13351892460.547","captions":["then you have experienced the fruits of pretty disappointed budgeting in Durham.","Durham participates in this process and there are real things really allocated and really built for public use.","On this basis, I claim this is essentially a knapsack problem.","The value of an item is perhaps complex to understand, but at a high level an item is a project.","One of the proposed projects, its value is, however, it is that you are assessing its value for the public.","Perhaps that has to do with the voting to express what the value of the project is.","You also have a budget constraint.","There are only a certain number of dollars that are associated with funding these projects and there are typically more projects than you can fund.","So you need to choose the optimal subset of projects subject to a budget constraint.","This is just one example, kind of a civics minded example of how knapsack is actually it is so abstract and so toi precisely","because it is so generally a way of thinking about correct utilization of resources under constraints,","not because it is fake, but because it is general.","There are all kinds of more complex ways of thinking about the knapsack problem in the context of, let's say,","theoretical computer science and algorithms and participatory budgeting and different weird ways you could","formulate this problem and make weird statements like a parameterized epsilon greater than 002 plus epsilon,","an approximate outcome in polynomial time and a bunch of weird parameters.","But probably none of you care about that because it was probably written by some dumb theorist a bunch of years ago whose name is mine.","No. So I thought about the knapsack problem.","Let's look at the classic variant. I promise you that this algorithm with this problem, though simple in many ways, and we will solve it.","And the solution is not complex necessarily. It really demonstrates how the algorithms that seem natural can be wildly incorrect.","And in particular, it's a good example where greedy algorithms that feel extremely natural are incorrect.","By the way, in practice, most participatory budgeting uses a greedy algorithm.","This problem, for example, the first thing I would think of if I was going to write a greedy algorithm for this problem is to say,","Well, we've already talked about this is the optimal solution."]},{"start_time":2340,"end_time":2373,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=13&isPrimary=false&absoluteTime=13351892640.547","captions":["Classic combinatorics question. Back from your days in 233 other classes, what is the size of the power set of a set?","It is two to the number of elements in the set. Okay.","Exponential in the number of items.","So the brute force algorithm here consider all possible subset of items and pick the best one is an exponential time algorithm.","That's our exponential time goes to. That's totally a no go, not a practical algorithm for more than a tiny, small number of items."]},{"start_time":2508,"end_time":2520,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=2508&isPrimary=true&absoluteTime=13351892808.547","captions":["if not make correct in the sense of optimal choices.","You if you have read Erickson's lovely chapter on dynamic programing or if you're going to in the near future,","we're going counter this big bolded box that says reading out, I can actually read this aloud to the things funny everyone should tattoo the fall."]},{"start_time":2631,"end_time":2700,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=2631&isPrimary=true&absoluteTime=13351892931.547","captions":["Then let us take this dynamic programing approach. Let's try to define some some problems and think recursively about them.","I'm going to try to parameter the problem as follows. Now, bear with me.","I'm going to try to privatize the problem as case of IP is the should return the maximum","value that you can obtain using items zero through AI and a budget of it must be.","Which subset of items are you considering using?","And in some order, the order of the items is arbitrary, but some order of them and up to some some budget.","Because what I realized when I was looking, especially that second greedy example,","was to know what would be smartest for me to do now would require me to know how","much budget I have left over and what I could do with that leftover budget.","That makes me think that in order to know how to make an optimal choice, I need to know what an optimal choice would be with less budget.","So if I was to consider selecting an item, I'd know, well, how much total value could I get with the budget I'd have left over?"]},{"start_time":2880,"end_time":2952,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=16&isPrimary=false&absoluteTime=13351893180.547","captions":["I have stressed this before.","Last time I wrote a recurrence first and then showed you how a recurrence is essentially a 1 to 1 translation to a recursive algorithm.","It goes the other way as well.","If you can define a recurrence over sub problems for your topic of interest, you essentially have a correct recursive algorithm and vice versa.","Okay. Now, the problem, of course, is if you actually just run that recursive algorithm, we're going to have exponential time.","Why even have exponential time? Rather than trying to solve for it explicitly just this general trend that I pointed out before.","Look at lines that the LS case right in the LS case.","We have two recursive calls. Okay.","And we're only making potentially arithmetic progress toward the base case in general, that can lead to an exponential number of recursive calls.","And so this algorithm may be slow, too slow to tolerate in practice.","What can we do about that? Fortunately, we know the technique of dynamic programing for how to optimize repeated sub problem calls."]},{"start_time":3018,"end_time":3060,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=3018&isPrimary=true&absoluteTime=13351893318.547","captions":["I can do that by looking at remember the general procedure, by looking at the recurrence.","The recurrence tells me the dependency. It says case of idea what I'm trying to solve.","That's the problem. It depends on a result case of it.","It depends on case of I minus one B and case of minus one D, minus C I.","This is again the easy case. From the table structure I showed before in the sense that it only depends on sub problems in this case.","In the previous row. The row one up. Okay."]},{"start_time":3138,"end_time":3228,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=3138&isPrimary=true&absoluteTime=13351893438.547","captions":["We can now almost mechanically write once we have a recurrence and we have a ballot iteration order,","an iterative bottom up, dynamic programing algorithm.","You again, don't need to necessarily write this down. Memorize this.","Let me just point out a couple of salient features.","One is that I'm again padding the first row in the first column with with zeros to designate kind of our base cases, if you will.","A common thing that you will see. And then we just have the same cases we had in the recurrence.","If you can't afford this item, then it's just whatever the solution was not including that item, but with the same budget.","Otherwise, the LS condition online scene from the recurrence will take the better of including this item getting its value,","and then the best solution that we could get using the remainder of the budget or not including this item.","And we'll take the better of these two as our solution to a particular sub problem.","In the end, we want to return the final value here.","What's the maximum value we can get using all end of the items, all B of the budget?","Okay. Work our way there from the smaller kind of these cases.","The algorithm, once you've written it in this form, quite clearly has both of and NB runtime and of the memory usage."]},{"start_time":3240,"end_time":3420,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=18&isPrimary=false&absoluteTime=13351893540.547","captions":["It did not depend on rows way further up in the table.","That suggests that you can do a memory optimization for this algorithm,","that it is sufficient at any given point in time just to store two rows to most immediate rows.","After you solve for the lower row, you copy it back up onto the higher row and you re compute the next iteration in the second row.","Again, here's what a modification of that algorithm, in order to optimize the in-memory complexity would look like.","The cases are all the same in many ways. I haven't done anything particularly interesting to it.","All that I've done is just use two rows in this table and in the new thing on lines nine and ten is after I do a single iteration,","a single whole row of computation, copy that back up onto the previous row before I start computing.","The next row again is also going on here.","So it's possible here and it's possible in many other cases as well with dynamic programing that if you have an iterative bottom up approach first,","I wouldn't worry about this. I would just write the correct algorithm using as much memory as you like the source of problems.","But then when you look at it, you may realize the dependencies were such that I don't actually need to store all","of the sub problems and you may be able to optimize the memory usage in this way.","For example, there are questions about this bottom up algorithm.","Yes. So this is certainly going to be a value in the column is the budget is going to be decreased, but not once every time.","Can you clarify like how exactly when you go diagonally.","So the question was about will there be missing budget values?","So again, I'm assuming that we're dealing with integer values for costing values,","and there is a column for every budget value from one to be one, two, three, four, five, six, all the way on up.","I'm solving all of the sub problems here and that's why the runtime is oh end times B because there's a column for every integer from Want to be okay.","Yes. Question. So in the order.","Why would you say that? You know, for a background like, for example, in the U.S.?","How can we talk? So my role here so I'm storing in the first parameter to my sub problems the number of items that I'm considering.","So robot row means number of items. When I say the previous row, I mean considering one less item.","The reason that I know that the dependencies all have that form of.","What could I have done with one less item is because when I look at the recurrence,","all of the recursive calls or recursive terms there you reference the sub problem with one fewer item is how I'm doing that."]},{"start_time":3471,"end_time":3600,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=2f3c129d-6171-4148-a4e9-b1100146c9a6&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=3471&isPrimary=true&absoluteTime=13351893771.547","captions":["including it's like very nice talk with your neighbors, chat for a couple minutes.","We'll come back together for this.","Yeah, this is. Congressman, thank you for.","This sort of stuff is indefensible in this country.","It's kind of like, you know, the sort of the civil rights.","It's possible for people to see that this no place in Australia.","Okay I to girl.","I don't know what you can see that I want to tell you all going to rebuild our cars.","Yes, I guess a way to us just."]},{"start_time":3780,"end_time":3960,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=21&isPrimary=false&absoluteTime=13351894080.547","captions":["As soon as I.","Back to the lines. I like myself and I think it was like, obviously, I just.","Shortly after five.","Everyone's going to the White House right now, Mr. Secretary.","You're leaving it. All right.","Let's come back together. Go ahead and commit to your best guess.","This is a variant on the problem just like that. This is the problem rather than a01 knapsack problem.","This is the knapsack problem with repetition.","The only difference is now you can use each item is like a type and you can buy as many items of that type as you wish.","Okay, so now we're back in the candy store, but they have an infinite number, every type of candy.","The first question is suppose there are two item types. The first has cost four and value five.","The second is cost five and value eight with a total budget of 18.","The maximum value obtainable is I think it's going to give me a goofy word cloud, and I'm sure the correct answer will pop out in this.","26. Probably only 26.","She was away 26. And the best thing you can do here with a total budget of 18.","The better bang for buck item is the cost five.","Value eight. Like you prefer to buy more of that item. So you might think greedily I should buy three of those.","That would get you stuck with a value of 24, but then you wouldn't be able to afford anything else.","So you can get value 24. Alternatively, if you got two of those items for a value of 16,"]},{"start_time":4140,"end_time":4257,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=23&isPrimary=false&absoluteTime=13351894440.547","captions":["then the equals four and so on and so forth all the way to B and for each one you're going","to take a maximum over the in item types and as you get all of the runtime in total.","What about them? Space. Complexity.","The natural eye will actually have would be complexity that no, we only parameterized for some problem by the budget.","We actually didn't have to dramatize the problem by the number of items we were considering.","We still ate that in the runtime because we still in that recurrent term, we're going to have to look at a maximum overall the possible item types.","So each iteration of this algorithm was going to have, oh,","event runtime and we're going to have all of these some problems that we're going to solve using that recurrence.","Okay. This also results in as you can see, this problem with repetition ends up having a solution.","The new programing solution that has the same runtime and space complexity as the solution we looked at for the zero one case.","Questions about this exercise. Yes.","How do we come? I.","The question is how do we consider repeated items of the same type?","This is why for the recurrence we developed through these exercises.","We didn't parameter rise by number like considering, let's say only the first five items or something.","Actually, for every sub problem we take the maximum overall item types we could afford at this budget.","So potentially the recurrence ends up choosing the same item type multiple times.","Indeed, in general it will until it can no longer afford that. I. All right."]},{"start_time":4320,"end_time":4500,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=24&isPrimary=false&absoluteTime=13351894620.547","captions":["In order to do that, it may be the case very often that you want to multiply several relatively large matrices.","You'd like to do that in the most efficient way possible. And as we pointed out, you've got some choices about the order in which you do it.","So, for example, if we want to multiply these three matrices a zero, a one and a two, we've got a couple of choices about the order in which to do it.","We could first multiply a zero and a one. We do that, it'll take 200 scalar multiplications to do the first product inside the parentheses.","The result will be a 20 by ten matrix.","And then when we multiply that by a two, which was a ten by 100 will have 20 times ten times hundred equals 20,000 scalar multiplications to do.","And then we'll get our final answer, a 2100 matrix that took a total of 20,200 multiplications.","On the other hand, we could first have multiplied a one and a two that would have resulted in 1000 multiplications,","scalar multiplications, and then the result would have been a one by 100 matrix.","If we then multiply a0a 20 by one times a one by 100 matrix, that would have been an extra 2000 scalar multiplications.","We get the final answer, which is the same. You do the same thing, but only using 3000 scalar multiplications.","Meaning if we had computed this product in the second order, it would have been roughly seven times faster than computing it in the first order.","If you're multiplying matrices of this size, it doesn't matter very much.","If you're multiplying matrices on the order of, let's say, millions of parameters in a deep neural network, you might care about such optimizations.","They might save you 3 hours on your GPU.","So the problem of matrix multiplication is if I give you a bunch of matrices to multiply together and I give you,","for example, their dimensions, what is the smallest number of scalar multiplications needed to compute this product?","For example, we just saw that it was 3000 for this concrete example.","Now I'm not going to show you the damn programing algorithm.","I will leave these in the notes for you for this problem and we will look at them next time.","But I want to point out one very important thing that you will see in some dynamic programing, some problems,","sometimes you will end up developing a recurrence where when you look at the sub problem dependencies, they will not be of the form.","They depend only on the previous row. The most common other variant is where your problem is parameterized by a range from one index to another.","And it depends on some problems that are interior to that range.","Smaller sub ranges. In that case, what you want to do is iterate over your sub problems from smaller ranges to larger ranges."]},{"start_time":4680,"end_time":1000000,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=9d709d64-582f-4465-bb49-b1100146b07a&sessionPID=d8179b1e-e418-4951-8a68-b0ce0147524f&number=26&isPrimary=false&absoluteTime=13351894980.547","captions":["And then you have to also consider any of the non recursive stuff that's done there.","Okay. Just as you would normally factor into the constraints on spam,","you write that if you have a parallel full span of parallel for loop, it's always log of the number of iterations.","That's just to schedule the iterations, plus multiply plus the maximum span on any given generation.","Because the idea for parallel for loop log in time to scatter all the iterations and then the span is just whatever each iterations have the Yeah,","no, it's just covered. So with the nature John down below and each of these things are known to if it is in Syria if you get nations like.","So I like, I divide, I conquer and I run those two in parallel, it's fine.","And then you've got this combined step with concatenation and you're saying that","you do a linear time operation in serial because that is our way is not do that.","You tell me that'll be the goal if it, if it is isn't serial and the recurrence for the span would be Oh yeah,","you divide it in order to see if there is a linear runtime amount out of work.","That has to happen after this point to think that this right you get this solution to this.","Just in terms of understanding recurrences. If in some way if instead had usually the log squared thing comes from the following.","Yes. If this recurrence is solution procedure.","So I think this is the same question I have is this."]}]}