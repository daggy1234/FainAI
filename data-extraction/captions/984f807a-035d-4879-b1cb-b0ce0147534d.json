{"data":[{"start_time":1,"end_time":30,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=0&isPrimary=false&absoluteTime=13354309501.017","captions":["Okay. Yeah, well, you know that it is pretty much what I am saying."]},{"start_time":129,"end_time":180,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=129&isPrimary=true&absoluteTime=13354309629.517","captions":["Mark six unsure as pounds is due today.","Let me give you a couple of public service announcements about that based on a couple of things that I've chatted with individuals about,","particularly related to the API problem. You're a computer scientist.","You're running a program. You're using floating point numbers. You're multiplying a ton of those together.","And then all of a sudden your number, which was not zero, is zero.","Even though you did not multiply anything by zero at any point.","And you say, What is my computer is wrong, why would that happen?","Any of my folks have taken to ten or 250 in their own room.","What is that called? And yeah, overflow.","Why does that happen? Ronald Reagan said, Yeah, because when we have a floating point number in most programing languages,"]},{"start_time":360,"end_time":429,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=2&isPrimary=false&absoluteTime=13354309860.517","captions":["Just a couple of public service announcements. Next week is spring break and we will not be here.","I hope that you will have a lovely time and I hope that you will enjoy thinking about algorithms in one of your","favorite places and not from a point or place of anxiety or tension or something you need to do that week,","but just from a place of joy and beauty. I have thought about algorithms from many beautiful places and I encourage you to try that as well.","We will have recitation not next week, obviously, but the week we get back.","I you remember that. And then our next cohort will be on reading algorithms.","Will try to release that this week in case any of you are eager beavers like you could go ahead and start it.","Obviously don't expect that it'll be due Thursday the 21st after we get back.","Any questions about course announcements or logistics? But.","All right. So here's what to do today."]},{"start_time":540,"end_time":588,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=3&isPrimary=false&absoluteTime=13354310040.517","captions":["We will talk more about them, especially in the context of computational intractability and approximation algorithms to which we shall come","later in the semester where many of the approximation algorithms we will discuss will be really algorithms.","But for this week we're focusing on some of the cases where really algorithms happen to be both efficient and optimal.","And we'll look at a variety of scheduling problems with that property today,","mostly interval scheduling problems for something quite different in flavor than the graph","spanning tree problem we looked at last time and we'll definitely get through the first.","It is reasonably likely, I think, that we'll get to the second of these, reasonably unlikely that we'll get through the third of these,"]},{"start_time":720,"end_time":765,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=4&isPrimary=false&absoluteTime=13354310220.517","captions":["20 minutes. 7 hours. Up to them, they get to decide and also allow to decide when they want to start the class and when the class will finish.","And so when you go on to your chaos university hub rather than Duke Hub, this is what the options look like from your perspective.","And you're trying to figure out what classes you can take. Good luck.","But I'll talk about this from the perspective of jobs and scheduling the trial computers for the most part.","If you like Chaos University's flavor text more than go for that as well.","And we'll think about each of these jobs being represented by its interval from its start time to its finish time, and also having some integer table.","And we'd like to compute as many of these as we possibly can, such that degree of conflict where two jobs conflict."]},{"start_time":858,"end_time":900,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=858&isPrimary=true&absoluteTime=13354310358.517","captions":["One of the things that's fun about traditional reading algorithms problems is that it can often be","the case that there are many perfectly natural seeming reading algorithms that are not correct.","They do not give the optimal solution, and it can be helpful to our intuition to look at a couple of these,","not just for our intuition about what a correct solution might look like,","but to inculcate in us a little bit of healthy suspicion generally about algorithms and really algorithms,","the fact that and how even if you know that a problem can be solved by a greedy algorithm, which this can be,","and even if someone gives you a really algorithm and that greedy algorithm sounds perfectly reasonable and natural,","that is no guarantee that it is optimal. Here's a perfectly natural reality."]},{"start_time":1080,"end_time":1107,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=6&isPrimary=false&absoluteTime=13354310580.517","captions":["Let's say we pick this one again, we then remove all of the jobs that conflict with it from consideration.","Again, we have a tie between all of these. We choose one of them arbitrarily to remove the others.","So this really algorithm would be perfectly natural, would compute a solution of size three three jobs that it was able to run or to compute.","You can probably tell looking at the diagram fairly straightforwardly that there","was a solution that achieved a value of four that was able to run for jobs."]},{"start_time":1176,"end_time":1260,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=1176&isPrimary=true&absoluteTime=13354310676.517","captions":["Let's instead think about building our schedule by scanning over all of the jobs in time,","and many of these interval scheduling problems will have this flavor that the way that we'll think about a greedy","algorithm for the problem would be different variations on scanning the input in time from perhaps earlier to later time,","either considering the start times of the jobs or the in times of the jobs,","or perhaps some other characteristics than just these depending on the product.","In this case, let me suggest to you I won't do a full retinue of seven incorrect algorithms.","So we did one incorrect career choice. Let's look at a correct greedy choice choose instead of the job that conflicts with the fewest other jobs.","Choose the job that finishes first. So think about scanning the input in time from left to right or from lesser to greater times.","And whenever you find the endpoint of a job, we're going to select it.","Okay. And then just considering any jobs that conflict with that and continuing along, that will be the high level idea."]},{"start_time":1275,"end_time":1440,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=1275&isPrimary=true&absoluteTime=13354310775.517","captions":["you'll see that the jobs have been sorted by their finish times.","So the top most has the earliest finish time. Then the second one from the top has the second earliest, and so on and so forth.","Time is still shown on the horizontal axis, but just they've been sorted vertically so that they're from the earliest finish time to the latest.","As you go down along, it's just showing them in that particular order.","And now you can imagine simply scanning from left to right which of these would be the first job that you would encounter in such a scan?","It would be the one with the earliest my finish time.","Excuse me, it would be this one. So you imagine selecting that job and then just considering any of these jobs with which it conflicts and","going to the next earliest finishing job that does not conflict with anything you've previously selected.","Continuing in this fashion, I gave you the abstract notion in the previous very high level pseudocode.","Here is some slightly less high level pseudocode about how you could implement such a strategy efficiently.","Okay. And General, I'll try to do the high level bit first.","How could you do this? Okay, but we actually sorted the jobs from least to greatest finish time to begin with.","So after doing that, let me assume that the jobs are now ordered one, two, three,","four, five, six and so on and so forth from list of great greatest finish time.","We're going to simply have a list or some other data structure to store the jobs that","we're choosing and how know always choose the job with the earliest finish time overall,","that's our greedy algorithm. So I'll just go ahead and put that in my list. And keep track of that as the currently selected job.","I now consider all of my other jobs in order by their finish time.","And for each one,","let me check if the start time of this job that I'm considering is greater than the finish time of the job I just selected previously, select a job.","If that's true, then they're compatible. Okay?","And I'm always going to choose the first compatible job first by finish time.","I check compatibility by whether it's start time is greater than the previously selected finish time.","And since I'm looking at them in order for at least a greater finish time, I will always choose the first job by finish time that is so compatible.","When that happens, let me just note that I'm going to choose that job as well and that that's now the most recently selected job."]},{"start_time":1533,"end_time":1620,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=1533&isPrimary=true&absoluteTime=13354311033.517","captions":["You should probably be vaguely suspicious of things that people say about really algorithms, including professors.","You should just be generally suspicious. This will be another proof by an exchange argument,","essentially where the exchange argument more or less will just form the substance of the inductive step of an inductive argument.","If you wanted to frame it in that way, that it's all sort of focus on this.","But let me tell you how I want to structure this argument. Suppose that the greedy algorithm chooses the jobs X.","Okay. And let me just call his ex wife next to mine.","Up to XM. What is M? I don't know. M is however many jobs the greedy algorithm had to choose.","And let me have these ordered by finish time. So in the same order that the greedy algorithm chose them.","At this point, I'm not making any substantial claims.","I'm just saying whatever the greedy algorithm chose, let me call them these things in this particular order.","That's all that I'm saying here. What I will try to show to you is that X is an optimal schedule and in particular,","I will try to do that in a way that is similar to what we did for the Nervous Factory problem that for all K from one to M.","So for all prefixes of the jobs chosen by greedy that there is an optimal schedule that chooses that prefix of jobs."]},{"start_time":1800,"end_time":1980,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=10&isPrimary=false&absoluteTime=13354311300.517","captions":["So add x1 if you preferring to think of this as y star minus y one plus x1.","Okay. The inductive step will be just a slightly, very slightly more complex version of this same idea of a swapping argument.","So for the inducted type, I want to show you that for any prefix of the solution chosen by the reading algorithm,","there is an optimal solution that also includes that same prefix.","So for the inductive hypothesis, what does that mean?","It means for up to some x one, x two, blah blah blah,","up to x minus one for some prefix of the greedy solution that there is an optimal solution that includes that","prefix and then maybe some other stuff which all is written as y's instead of x's for the greedy solution.","And again, let me just have these ordered by their finish time from these degrees.","I'm not saying anything about the the optimal solution had to choose them in any order or anything like that.","I'm merely saying whatever the optimal solution was, simply label them in this order.","That's all that I'm saying. For the inductive step.","What I want to argue is that, hey, the key item chosen by the greedy algorithm could be swapped into this optimal solution.","And you probably have a guess about what element I'm going to swap it with and you won't want to wager a guess.","Which element should I be able to swap this with? Okay.","Like, I'm going to try to swap it with White King.","To do so, I need to argue about the relationship between the start and finish times between x k x minus one and y k plus one.","So let's do that. The greedy algorithm chooses a valid conflict free schedule.","So the start time of the cath job chosen by greedy is greater than the finish time of the K minus one or the previous element.","That's quite explicit. If you go back and look at the algorithm. We literally have an initial statement that checks this.","So that's fine. Certainly x k does not conflict with x minus one.","On the other hand, recall that among all jobs that do not conflict with X minus one,","start after x minus one x is the one with the earliest finish time.","Why? K? Because why k is part of an optimal solution that must be valid and conflict free and included x minus one ordered by finish time.","Y k cannot start before x minus one finished.","X is the job among all that. Do not start until after x minus one finishes with the earliest finish time."]},{"start_time":2160,"end_time":2172,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=12&isPrimary=false&absoluteTime=13354311660.517","captions":["the greedy algorithm chooses the one with the minimum finish time.","It must therefore be at most that of like eight. All right, your new questions, chat with your neighbor."]},{"start_time":2340,"end_time":2520,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=13&isPrimary=false&absoluteTime=13354311840.517","captions":["I know you can't possibly work it out right away, but I understand because I've got quite a question of safety.","Yeah, No frustrations.","Oh. 41,149.","Oh. Oh.","0000000 jobs.","You know, it also offers you ten years ago.","Oh, my gosh.","You know, not so much the same scenario.","What might what is it exactly? No job for what?","Oh, my gosh. No time.","Like, it's just too expensive.","I was not understanding what this question is.","How to solve this conflict between you and more than.","Yes. When I left.","Instead of growing up.","What's the word? How's your coming out this week?","Oh, oh, oh, oh, oh, oh, yeah, yeah, yeah, yeah, yeah."]},{"start_time":2700,"end_time":2880,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=15&isPrimary=false&absoluteTime=13354312200.517","captions":["It describes the high level at the right. This was the choose the earliest job first algorithm.","Just looking at it, just consider the following possible modifications to line three select All that will still result in an optimal algorithm.","To line three is choose the job that finishes first. Instead, consider all of these possible variants.","The most popular answer is to choose the job that starts last week.","That is correct and nothing else is doing the job that just go back to the job that.","It starts last.","We're moving jobs that conflict with it and then choosing the next job that starts last among those,","removing those that conflict with it and so on and so forth.","It will be equivalent in terms of optimality and essentially performs a very similar logic to the algorithm that we developed.","But rather than scanning from earlier to later in time, scanning from later forward in time,","the other two and I'll leave this to you to ponder, will not result in an optimal algorithm.","I might have a diagram of it, but the other options will not necessarily.","Next question asks you to consider a weighted version of this problem.","If the wording was confusing, let me just say it out loud. The idea here was the same problem we were just looking at.","But now, rather than just trying to optimize the number of jobs you choose,","each job has a weight and you want to choose a set of jobs of maximum total weight.","But you're still not allowed to have any conflicts for this.","Here's a suggested algorithm. It's the same one. Suppose we use the same greedy algorithm.","What will the results of that be? Indeed, that will choose a valid schedule that is not even guaranteed to be remotely close to optimal.","So this would be an example where the greedy algorithm is incorrect and it is so badly incorrect that it really would not be useful in in practice,","even if you were willing to tolerate some error or approximation. And again, I think I have a disagreement moment for this.","The last one here. Is there a different problem altogether?","Oh, it's kind of related to not altogether different job scheduling with identical machines here rather than the start and finish times.","I just give you a number of jobs, each of which has a processing time. You can schedule it to run whenever you want to.","This is how long it'll take to run that job. Okay. You have a number of machines or computers, and they're all identical in terms of their speed.","Each machine can only run one job at a time. Your goal is to schedule all the jobs onto the machine.","So you're going to say, like, okay, machine one, you're doing jobs one seven and nine."]},{"start_time":3060,"end_time":3078,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=17&isPrimary=false&absoluteTime=13354312560.517","captions":["Right? So that in this case, for this makes that minimization problem that this really algorithm,","this greedy load balancing algorithm will choose a schedule with close to the minimum span, say, within a factor of two.","This is I just wanted to give you some preview and foreshadowing of approximation algorithms for greedy algorithms to draw that connection."]},{"start_time":3240,"end_time":3294,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=18&isPrimary=false&absoluteTime=13354312740.517","captions":["But these two things together, and you'll see that the quality of this resolution is at most twice the optimal solution.","I know literally just a sketch of the argument here. We'll return to it in a couple of weeks.","I just want to give you a foretaste. Questions about these exercises.","Yes. She produced one of the things that was agreed upon in the world, not necessarily which not to not doing this particular problem.","Is there anything like the notion of because you don't put it on one process.","That's about it. Right. Yeah. It's sort of a red herring option for this one.","I mean, the only sense which would be invalid is if you didn't assign some jobs for some reason,","which I'm sure I at least could write code that would sometimes accidentally not assign jobs.","Perhaps you all have higher fidelity software skills. All right."]},{"start_time":3309,"end_time":3417,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=3309&isPrimary=true&absoluteTime=13354312809.517","captions":["We'll still have the same setup we were in previously. Do you have any jobs?","Number one to end with start times and finish times.","So we still have these like interval things which I will draw again as rectangles with the left","boundary corresponding to the start time and the right boundary corresponding to the end time.","And we still have the same notion of conflicting. The two jobs are conflicting if they overlap in time at all times.","Previously we thought about this problem from the following perspective.","We thought about it from the perspective of supposing you only have one computer that can only run one job at a time.","How many jobs can you run? Let's think about it from the flip side.","Supposing you have many computers and you'd like to run all of the jobs, but you'd like to use as few computers as possible to run all of the jobs.","Or if you prefer to think of this as classroom scheduling and chaos University.","So you now are the registrar of all of your chaotic professors have come to you and said,","This is my class, which I would like to run for exactly 73.2 minutes starting at 1:39 p.m.","You have gotten all of these requirements from the instructors at Chaos University and you poor registrar are now","tasked with the challenge of how many classrooms am I going to need in order to schedule all of these classes?","And in particular, to which classroom will I assign every class in such a valid schedule so that no two classes are overlapping?","You can think about this from either flavor or text perspective."]},{"start_time":3420,"end_time":3567,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=19&isPrimary=false&absoluteTime=13354312920.517","captions":["Given that a single computer or classroom can only process one job at a time and to be in even just a little bit more precise.","Also, you can't do preemption, meaning you can't switch computers once a science.","You can't like have a job that does its first half of its job on one computer and then it switches and gets assigned to a different computer.","Or you can't have a class that the first 30 minutes of the class takes place in groups one or seven.","Then we all walk to gross one, two, three, and do the rest of the class there.","You're not allowed to do that.","And indeed, it's undesirable to do that either in the data center or in the classroom example of how many computers we need.","How will you assign the jobs?","Here's an example going across in time that schedules these just row wise on four computers with no conflicts, questions with the problem itself.","Right? Well, in my mind,","the most natural thing maybe to start with is we could try to repeatedly","compute optimal single computer schedules because we just solved that problem.","Right? We just solved the problem. If I gave you just one computer and said, try to schedule as many as you can, we know how to do that, right?","Earliest finish first and then continue in that fashion by block.","So one thing you might try to do is say, well, let me just repeatedly do that.","So I'll get a computer or a classroom. I'll schedules many things as I can on that.","Once I've done that, I'll get a second computer. I'll schedules many things that I can on that I'll continue in that sort of fashion.","You can think it that way. Well, ask us,","could we actually design something even simpler and faster that actually schedules all of them in an optimal way in a single pass over the data,","just in one scan Over the data. This also, by the way,","means that the algorithm that we will design will end up being modulo a sorting and online algorithm","in the sense that it could actually perform this scheduling in real time as jobs are coming in.","You could actually do this. So let's try to come up with a different form of a solution that makes just a single scan over the jobs of the algorithm,"]},{"start_time":3600,"end_time":3624,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=20&isPrimary=false&absoluteTime=13354313100.517","captions":["If you do not have a free computer, allocate a new computer and a sign up there.","Continue in this fashion. It seems like it certainly won't work.","Right. I mean, you should be suspicious because you should always be suspicious of a greedy algorithm.","And it feels like I'm not even trying to optimize anything."]},{"start_time":3738,"end_time":3780,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=3738&isPrimary=true&absoluteTime=13354313238.517","captions":["But the argument is not one in this case. Suppose our greedy algorithm uses computers?","I claim to you that any conflict free schedule must also use computers.","Why? Consider the particular point in time where the greedy algorithm added the K of computer the the","event one of the start times of one of the jobs where the greedy algorithm added the K of computer.","In this example that's shown below, that would have been right here. That's what it would have encountered."]},{"start_time":3849,"end_time":3960,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=84d15df3-97a7-4caf-adb2-b12c0146e961&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=3849&isPrimary=true&absoluteTime=13354313349.517","captions":["like if at least one computer is free, okay, what is how do you keep track of that?","Because computers are going to like stop being free and become free over the course of your processing the jobs.","And that's not shown very explicitly in this very high level pseudocode.","There are a couple of approaches. One approach would be to separately store the left and right and points of","jobs and process those as separate kinds of events in a sorted list of events.","An alternative approach,","which I've written here would be to store your computers in a priority queue or a binary heap by the finish time of their last assigned job.","Why is that helpful? Suppose you do that then at the beginning, when you sort the jobs from least a greater start time,","that'll take us nearly linear and log in time then to check if at least one computer is free.","Well, if at least one computer is free, that whatever computer has been free for the longest is free.","So let me just remove from the priority queue or peak.","Just check into the priority queue for the computer with the minimum finish time of","its last assigned job and see if that job finished before this job needs to start.","If so, great. I'll assign that job there and then either way I'm going to end up adding back into the priority queue.","A computer, either a computer that I'm reusing or a new computer, if none was available, that finished before this job started.","So one way or the other,","I'm going to end up adding a computer back into the priority queue with a priority corresponding to the finish time of this current job,"]},{"start_time":4140,"end_time":4143,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=23&isPrimary=false&absoluteTime=13354313640.517","captions":[]},{"start_time":4320,"end_time":4500,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=24&isPrimary=false&absoluteTime=13354313820.517","captions":["So in other words, we have to shoot for every job.","We have to choose something that in particular, that is very thing.","That was the logical choice. What do you mean by choosing a subject?","Exactly. Always. Well, it is exhausting filling a set of jobs.","We want to choose a full set of jobs, meaning or anything else.","Any other job it would affect. It would seem like it was something which chose except for the trivial full schedule.","We like choose everything we see only with a set of jobs is it has to be not conflicting within itself.","It will be implicitly right. If you chose a conflicting schedule of jobs, that will be minimal.","Right. That mean certainly you could get rid of something.","Oh, so it will end up being conflict free, but that I don't even have to write that explicitly in the public statement.","I just got to choose the smallest full set of jobs. Oh, I didn't say, Yeah, okay, okay.","And this one is like a little bit more subtle in terms of the solution and the first two, I think.","Yeah. All right. I have two questions.","The first is the algorithm that we talked about where if you can't go to a dominant area, we got an outcome here.","That is, how do you approach that same problem if the number of computers is limited?","So like, let's say up until a certain point you can allocate your computers,","but once you hit your max, you can only work with measures that you have no way to change.","The problems that we have is the problem. Same here as you must process every job and every job has like set, start and finish time.","Okay, so you would still run this algorithm if you have to limit number of computers and this was your goal.","But if you ever reach that situation, you could just return. Not possible, right?","Okay. It's impossible to process all of these jobs with these exact schedule deadlines with only this many computers.","So if you wanted to nonetheless do something, you'd have to change your object, right?","To say something like, Well, I want to like minimize the maximum lateness or Right.","Like you'd have to specify what your goal would be in that case. Yeah.","Okay. In that case, I mean, it makes sense. Like if you haven't been job that has a start time of birth and during one of the four jobs,","then you would probably have to change the start time so that it fits within those point.","Yeah you would you would probably if your goal was like just to minimize like maximum","for like total lateness or something like that unbounded number of computers,","you know, honestly probably end up doing something very similar to."]},{"start_time":4680,"end_time":1000000,"image":"https://duke.hosted.panopto.com/Panopto/Pages/Viewer/Thumb.aspx?eventTargetPID=0458eefe-9468-48c2-b598-b12c0146cce8&sessionPID=e250bf37-e4d5-4b57-b9af-b0ce01475346&number=26&isPrimary=false&absoluteTime=13354314180.517","captions":["And I've started the algorithm at vertex one, but that's hardcoded is the edge at which it says, oh, there's a negative cycle.","Is that a 3 to 1 edge or not?","That's not necessarily depends on the order in which you're examining the edges in that last loop.","When you're checking for a ten, such as on your last iteration. Right?","All that means is if you find one on that and edge on that iteration, that's for tens.","And it is part of a negative cycle. Not necessarily that it's any particular one.","Okay. Along the negative cycle, it just if the first one that came up and whatever arbitrary iteration where it was in your data structure.","Right. Because they're potentially on a negative cycle, you could have multiple edges that would be tense at the end,","still potentially guaranteed by any particular one. Right?","Okay. That makes sense. So in in in this case, start for the other one.","So the end iteration, which I'm checking if it's tense,","I'm like going from for like for you and in graph like photograph is the sheet that protects the edges and then for V and use edges.","So I'm exploring everything.","I'll use neighbors, it's like it's, it's then checking the distances like doing that kind of that standard check of like distances,","Villers-Bretonneux distances, you just know the weight.","So in that case, if there's one, two, 222, three, two, 3 to 1, my algorithm is returning that 1 to 2 is that tense edge.","You know why it's that edge specifically that it's returning versus the other two?","Not immediately. Okay. It could vary and many things, some of which could even just be like the order in which things ended up in your data structure.","Okay. So I'm not immediately sure. Gotcha."]}]}